{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "AppClientProps": {
            "additionalProperties": false,
            "properties": {
                "accessTokenValidityMinutes": {
                    "description": "The validity period of the access token (default 60 minutes).\nValid values are between 5 minutes and 1 day",
                    "type": "number"
                },
                "idTokenValidityMinutes": {
                    "description": "The validity period of the ID Token in minutes (default 60 minutes).\nValid values are between 5 minutes and 1 day",
                    "type": "number"
                },
                "refreshTokenValidityHours": {
                    "description": "The validity period of the Refresh Token in hours (default 30 days).\nValid values between 60 minutes and 10 years",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "CaefNagSuppressionByPath": {
            "additionalProperties": false,
            "properties": {
                "path": {
                    "type": "string"
                },
                "suppressions": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "reason"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "path",
                "suppressions"
            ],
            "type": "object"
        },
        "CaefNagSuppressions": {
            "additionalProperties": false,
            "properties": {
                "by_path": {
                    "items": {
                        "$ref": "#/definitions/CaefNagSuppressionByPath"
                    },
                    "type": "array"
                }
            },
            "required": [
                "by_path"
            ],
            "type": "object"
        },
        "CaefRoleRef": {
            "additionalProperties": false,
            "description": "A reference to an IAM role. Roles can be referenced by name, arn, and/or id.",
            "properties": {
                "arn": {
                    "description": "Reference role by arn",
                    "type": "string"
                },
                "id": {
                    "description": "Reference role by id",
                    "type": "string"
                },
                "immutable": {
                    "description": "Indicates whether the role should be considered immutable (defaults false)",
                    "type": "boolean"
                },
                "name": {
                    "description": "Reference role by name",
                    "type": "string"
                },
                "refId": {
                    "description": "A string which uniquely identifies the CaefRoleRef within a scope.",
                    "type": "string"
                },
                "sso": {
                    "description": "If true, role name will be resolved to an SSO auto-generated role. Also implies immutability.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CaefServiceCatalogConstraintConfig": {
            "additionalProperties": false,
            "properties": {
                "description": {
                    "type": "string"
                },
                "rules": {
                    "additionalProperties": {
                        "$ref": "#/definitions/CaefServiceCatalogConstraintRuleConfig"
                    },
                    "type": "object"
                }
            },
            "required": [
                "description",
                "rules"
            ],
            "type": "object"
        },
        "CaefServiceCatalogConstraintRuleAssertionConfig": {
            "additionalProperties": false,
            "properties": {
                "assert": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "required": [
                "assert",
                "description"
            ],
            "type": "object"
        },
        "CaefServiceCatalogConstraintRuleCondititionConfig": {
            "additionalProperties": false,
            "type": "object"
        },
        "CaefServiceCatalogConstraintRuleConfig": {
            "additionalProperties": false,
            "properties": {
                "assertions": {
                    "items": {
                        "$ref": "#/definitions/CaefServiceCatalogConstraintRuleAssertionConfig"
                    },
                    "type": "array"
                },
                "condition": {
                    "$ref": "#/definitions/CaefServiceCatalogConstraintRuleCondititionConfig"
                }
            },
            "required": [
                "assertions",
                "condition"
            ],
            "type": "object"
        },
        "CaefServiceCatalogParameterConfig": {
            "additionalProperties": false,
            "properties": {
                "constraints": {
                    "$ref": "#/definitions/CaefServiceCatalogConstraintConfig"
                },
                "props": {
                    "$ref": "#/definitions/CfnParameterProps"
                }
            },
            "required": [
                "props"
            ],
            "type": "object"
        },
        "CaefServiceCatalogProductConfig": {
            "additionalProperties": false,
            "properties": {
                "launch_role_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/CaefServiceCatalogParameterConfig"
                    },
                    "type": "object"
                },
                "portfolio_arn": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "owner",
                "portfolio_arn"
            ],
            "type": "object"
        },
        "CfnParameterProps": {
            "additionalProperties": false,
            "properties": {
                "allowedPattern": {
                    "default": "- No constraints on patterns allowed for parameter.",
                    "description": "A regular expression that represents the patterns to allow for String types.",
                    "type": "string"
                },
                "allowedValues": {
                    "default": "- No constraints on values allowed for parameter.",
                    "description": "An array containing the list of values allowed for the parameter.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "constraintDescription": {
                    "default": "- No description with customized error message when user specifies invalid values.",
                    "description": "A string that explains a constraint when the constraint is violated.\nFor example, without a constraint description, a parameter that has an allowed\npattern of [A-Za-z0-9]+ displays the following error message when the user specifies\nan invalid value:",
                    "type": "string"
                },
                "default": {
                    "default": "- No default value for parameter.",
                    "description": "A value of the appropriate type for the template to use if no value is specified\nwhen a stack is created. If you define constraints for the parameter, you must specify\na value that adheres to those constraints."
                },
                "description": {
                    "default": "- No description for the parameter.",
                    "description": "A string of up to 4000 characters that describes the parameter.",
                    "type": "string"
                },
                "maxLength": {
                    "default": "- None.",
                    "description": "An integer value that determines the largest number of characters you want to allow for String types.",
                    "type": "number"
                },
                "maxValue": {
                    "default": "- None.",
                    "description": "A numeric value that determines the largest numeric value you want to allow for Number types.",
                    "type": "number"
                },
                "minLength": {
                    "default": "- None.",
                    "description": "An integer value that determines the smallest number of characters you want to allow for String types.",
                    "type": "number"
                },
                "minValue": {
                    "default": "- None.",
                    "description": "A numeric value that determines the smallest numeric value you want to allow for Number types.",
                    "type": "number"
                },
                "noEcho": {
                    "default": "- Parameter values are not masked.",
                    "description": "Whether to mask the parameter value when anyone makes a call that describes the stack.\nIf you set the value to ``true``, the parameter value is masked with asterisks (``*****``).",
                    "type": "boolean"
                },
                "type": {
                    "default": "String",
                    "description": "The data type for the parameter (DataType).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "M2MApiProps": {
            "additionalProperties": false,
            "properties": {
                "adminRoles": {
                    "description": "Roles which will be provided Admin access to the \nKMS key, and KeyPair secrets.",
                    "items": {
                        "$ref": "#/definitions/CaefRoleRef"
                    },
                    "type": "array"
                },
                "allowedCidrs": {
                    "description": "List in CIDR ranges which will be permitted to connect to the API resource policy",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "appClients": {
                    "$ref": "#/definitions/NamedAppClientProps",
                    "description": "List of Cognito app clients to be created."
                },
                "concurrencyLimit": {
                    "description": "Concurrency limits to be placed on API Lambda functions. This will essentially limit the number of concurrent\nAPI requests.",
                    "type": "number"
                },
                "eventMetadataMappings": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Specified fields will be mapped from the request into the metadata\npersisted in S3 for each upload request. The key is the destination\nkey in the metadata, and the value is the event source key in dot notation\nsuch as \"requestContext.requestTime\".",
                    "type": "object"
                },
                "integrationLambdaRoleArn": {
                    "description": "If specified, the integration Lambda function will run as this role.\nIf not specified, one will be generated",
                    "type": "string"
                },
                "kmsKeyArn": {
                    "description": "Specific key to use to encrypt CloudWatch logs. If not specifed, one will be created.",
                    "type": "string"
                },
                "metadataTargetPrefix": {
                    "description": "Identifies the target prefix for metadata within the bucket.\nIf not specified, will default to targetPrefix.",
                    "type": "string"
                },
                "requestParameters": {
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "description": "Map of accepted request parameter names to boolean indicating if they are required.\nIf specified, API gateway will validate that: 1) each provided parameter is accepted; \nand 2) all required parameters have been provided.",
                    "type": "object"
                },
                "setAccountCloudWatchRole": {
                    "description": "If true (default false), the API Gateway Cloudwatch role will be set at the account/region level.\nThis should be done only once per account/region.",
                    "type": "boolean"
                },
                "stageName": {
                    "description": "API stage name. Defaults to 'prod'",
                    "type": "string"
                },
                "targetBucketName": {
                    "description": "Required. Identifies the target bucket",
                    "type": "string"
                },
                "targetPrefix": {
                    "description": "Required. Identifies the target prefix within the bucket",
                    "type": "string"
                },
                "wafArns": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Arns of WAF to be applied to API.",
                    "type": "object"
                }
            },
            "required": [
                "adminRoles",
                "allowedCidrs",
                "concurrencyLimit",
                "targetBucketName",
                "targetPrefix"
            ],
            "type": "object"
        },
        "NamedAppClientProps": {
            "additionalProperties": {
                "$ref": "#/definitions/AppClientProps"
            },
            "type": "object"
        }
    },
    "properties": {
        "api": {
            "$ref": "#/definitions/M2MApiProps"
        },
        "nag_suppressions": {
            "$ref": "#/definitions/CaefNagSuppressions",
            "description": "Nag suppressions"
        },
        "service_catalog_product_config": {
            "$ref": "#/definitions/CaefServiceCatalogProductConfig",
            "description": "Service Catalog Config\nIf specified, the configured module will be deployed as a Service Catalog product instead of directly to the environment"
        }
    },
    "required": [
        "api"
    ],
    "type": "object"
}

