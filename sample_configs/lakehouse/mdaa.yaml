# All resources will be deployed to the default region specified in the environment or AWS configurations.
# Can optional specify a specific AWS Region Name.
region: default

# Path to a custom naming module implementation and class name
#naming_module: ../custom-naming
#naming_class: ExtendedDefaultNaming

# One or more tag files containing tags which will be applied to all deployed resources
tag_configs:
  - ./tags.yaml

# TODO: Set an appropriate, unique organization name
# Failure to do so may resulting in global naming conflicts.
organization: <unique-org-name>

# TODO: Set appropriate context values for your environment.
context:
  vpc_id: vpc-0c8d74b7c977391e0
  availability_zone: "{{region}}b"
  subnet_id: subnet-082ae448380744350
  # The CIDR range from which the Redshift cluster should be accessible
  redshift_client_cidr_range: 10.0.0.0/24

# One or more domains may be specified. Domain name will be incorporated by default naming implementation
# to prefix all resource names.
domains:
  # The named of the domain. In this case, we are building a 'shared' domain.
  shared:
    # One or more environments may be specified, typically along the lines of 'dev', 'test', and/or 'prod'
    environments:
      # The environment name will be incorporated into resource name by the default naming implementation.
      dev:
        # The target deployment account can be specified per environment.
        # If 'default' or not specified, the account configured in the environment will be assumed.
        account: default
        # The list of modules which will be deployed. A module points to a specific MDAA CDK App, and
        # specifies a deployment configuration file if required.
        modules:
          # This module will create all of the roles required for the datalake, as well as dataops layers running on top
          roles: # The module name (ie 'roles') will be incorporated into resource name by the default naming implementation.
            cdk_app: "@aws-mdaa/roles"
            app_configs:
              - ./roles.yaml

          # This module will deploy the S3 data lake buckets.
          # Coarse grained access may be granted directly to S3 for certain roles.
          datalake:
            cdk_app: "@aws-mdaa/datalake"
            app_configs:
              - ./datalake/datalake.yaml

          # This module will ensure the Glue Catalog is KMS encrypted.
          glue-catalog:
            cdk_app: "@aws-mdaa/glue-catalog"

          # This module will ensure that LakeFormation is configured to not
          # automatically generate IAMAllowedPrincipal grants on new databases and tables.
          lakeformation-settings:
            cdk_app: "@aws-mdaa/lakeformation-settings"
            app_configs:
              - ./datalake/lakeformation-settings.yaml

          # This module will create an Athena Workgroup which can be used to query
          # the data lake.
          athena:
            cdk_app: "@aws-mdaa/athena-workgroup"
            app_configs:
              - ./datalake/athena.yaml

          datawarehouse:
            cdk_app: "@aws-mdaa/datawarehouse"
            app_configs:
              - ./datawarehouse/datawarehouse.yaml

  nyc-dataops:
    environments:
      dev:
        account: default
        modules:
          project:
            cdk_app: "@aws-mdaa/dataops-project"
            app_configs:
              - ./nyc_dataops/project.yaml

          crawlers:
            cdk_app: "@aws-mdaa/dataops-crawler"
            app_configs:
              - ./nyc_dataops/crawler.yaml

          jobs:
            cdk_app: "@aws-mdaa/dataops-job"
            app_configs:
              - ./nyc_dataops/jobs.yaml

          workflow:
            cdk_app: "@aws-mdaa/dataops-workflow"
            app_configs:
              - ./nyc_dataops/workflow.yaml
