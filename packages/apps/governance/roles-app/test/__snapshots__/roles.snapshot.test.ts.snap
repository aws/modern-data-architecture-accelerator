// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`roles Snapshot Tests Roles App App Snapshot Test 1`] = `
{
  "test-org-test-env-test-domain-test-roles-main": {
    "Description": "(SO0320-roles) Modern Data Architecture Accelerator. Version 1.1.0",
    "Outputs": {
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:application-data-role1:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:application-data-role1:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:application-data-role1:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:application-data-role2:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:application-data-role2:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:application-data-role2:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:analyticsbasicpolicy:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:analyticsbasicpolicy:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:dataadminbasepolicy:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:dataadminbasepolicy:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:dataengineerbasepolicy:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:dataengineerbasepolicy:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:datalakebasicpolicy:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:datalakebasicpolicy:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:dataopsbasicpolicy:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:dataopsbasicpolicy:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:datasciencebasicpolicy:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:datasciencebasicpolicy:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:datascientistbasepolicy:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:datascientistbasepolicy:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:utilitybasicpolicy:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:utilitybasicpolicy:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:dataengineer:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:dataengineer:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:dataengineer:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:datascientist:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:datascientist:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:datascientist:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:gluerole:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:gluerole:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:gluerole:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:lakeformation:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:lakeformation:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:lakeformation:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:multiple-service-role:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:multiple-service-role:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:multiple-service-role:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:mydataadmin:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:mydataadmin:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:mydataadmin:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:testpolicyverbatim:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:testpolicyverbatim:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:testpolicy:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:managed-policy:testpolicy:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:testrole:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:testrole:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:testrole:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:testroleverbatim:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:testroleverbatim:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-roles-main:role:testroleverbatim:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
    },
    "Parameters": {
      "BootstrapVersion": {
        "Default": "/cdk-bootstrap/hnb659fds/version",
        "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/test-org/test-domain/caef-bootstrap/role-helper-service-token",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
    },
    "Resources": {
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "Stack description parameter to update on version changes",
          "Name": "/test-org/test-domain/test-roles-main/aws-solution",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "(SO0320-roles) Modern Data Architecture Accelerator. Version 1.1.0",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/test-application-role",
                      ],
                    ],
                  },
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "RoleName": "test-org-test-env-test-domain-test-roles-main-applicat--19d293fd",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "roles",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-roles-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/application_data_role1/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/application_data_role1/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/application_data_role1/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/application_data_role1/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/application_data_role1/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Condition": {
                  "StringEquals": {
                    "aws:PrincipalArn": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":role/test-application-role",
                        ],
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "RoleName": "test-org-test-env-test-domain-test-roles-main-applicat--19d293fc",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "roles",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-roles-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/application_data_role2/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/application_data_role2/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/application_data_role2/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/application_data_role2/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/application_data_role2/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - RedshiftNoResourceReadAccess: Policy actions do not require Resource! ",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-analytic--7f35ad5a",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "redshift:Describe*",
                  "redshift:GetReservedNodeExchangeConfigurationOptions",
                  "redshift:GetReservedNodeExchangeOfferings",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "RedshiftNoResourceReadAccess",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - RedshiftNoResourceReadAccess: Policy actions do not require Resource! ",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/analytics-basic-policy/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - RedshiftNoResourceReadAccess: Policy actions do not require Resource! ",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/analytics-basic-policy/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CodeCommitReadAccess: Permissions provided to Data Admin persona to have necessary permission for codecommit service - s3DataAdminDeletePermissions: Permissions provided to Delete Bucket. Permission to delete object should be provided outside of this policy - SageMakerBasicAccess: Allows DataAdmin to manage Sagemaker apps and user profiles - IAMViewRolePermissions: Basic capability for DataAdmin to list and get role permissions - RedshiftDataAdminAccess: Redshift data admin permissions - GlueAdminAccess: Glue data admin permission - SecretsManagerBasicAccess: Allow data admin to generate random pwd and view secrets metadata - LakeFormationDataAdminPermissions: Provide Lakeformation DataAdmin permissions - DmsDataAdminAccess: Permissions to manage replication tasks and other required data admin permissions - KmsListAliases: Permissions provided to view aliases for KMS keys - BasicSsmListAccess: Allows data admin to view details about a ssm parameter ",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-data-adm--4aed1125",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "ssm:DescribeParameters",
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "BasicSsmListAccess",
              },
              {
                "Action": "kms:ListAliases",
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "ListKmsAliases",
              },
              {
                "Action": [
                  "s3:DeleteAccessPoint*",
                  "s3:DeleteBucket*",
                  "s3:DeleteJobTagging",
                  "s3:DeleteMultiRegionAccessPoint",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "s3DataAdminDeletePermissions",
              },
              {
                "Action": [
                  "sagemaker:*App",
                  "sagemaker:Describe*",
                  "sagemaker:*Profile",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "SageMakerBasicAccess",
              },
              {
                "Action": [
                  "iam:GetRole",
                  "iam:ListRoles",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "IAMViewRolePermissions",
              },
              {
                "Action": [
                  "redshift:ModifyClusterMaintenance",
                  "redshift:ModifyEndpointAccess",
                  "redshift:ModifyScheduledAction",
                  "redshift:PurchaseReservedNodeOffering",
                  "redshift:RevokeEndpointAccess",
                  "redshift:CreateTags",
                  "redshift:*SnapshotAccess",
                  "redshift:BatchDeleteClusterSnapshots",
                  "redshift:BatchModifyClusterSnapshots",
                  "redshift:*ClusterSnapshot",
                  "redshift:*SnapshotCopyGrant",
                  "redshift:*SnapshotSchedule",
                  "redshift:*UsageLimit",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "RedshiftDataAdminAccess",
              },
              {
                "Action": [
                  "redshift:DeletePartner",
                  "redshift:DeleteAuthenticationProfile",
                  "redshift:DeleteClusterParameterGroup",
                  "redshift:DeleteTags",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "RedshiftDeletePermissions",
              },
              {
                "Action": [
                  "glue:BatchGet*",
                  "glue:*Trigger",
                  "glue:*Crawler",
                  "glue:GetWorkflow*",
                  "glue:NotifyEvent",
                  "glue:*WorkflowRun",
                  "glue:GetBlueprint*",
                  "glue:StartBlueprintRun",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "GlueAdminAccess",
              },
              {
                "Action": [
                  "secretsmanager:GetRandomPassword",
                  "secretsmanager:DescribeSecret",
                  "secretsmanager:ListSecrets",
                  "secretsmanager:ListSecretVersionIds",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "SecretsManagerBasicAccess",
              },
              {
                "Action": [
                  "lakeformation:*Permissions",
                  "lakeformation:*Transaction",
                  "lakeformation:*egisterResource",
                  "lakeformation:UpdateResource",
                  "lakeformation:StartQueryPlanning",
                  "lakeformation:*DataCellsFilter",
                  "lakeformation:*LFTag",
                  "lakeformation:*LakeFormationOptIn",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "LakeFormationDataAdminPermissions",
              },
              {
                "Action": [
                  "codecommit:BatchGet*",
                  "codecommit:BatchDescribeMergeConflicts",
                  "codecommit:DescribeMergeConflicts",
                  "codecommit:DescribePullRequestEvents",
                  "codecommit:EvaluatePullRequestApprovalRules",
                  "codecommit:GitPull",
                  "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
                  "codecommit:ListBranches",
                  "codecommit:ListPullRequests",
                  "codecommit:ListTagsForResource",
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:codecommit:*:*:*",
                "Sid": "CodeCommitReadAccess",
              },
              {
                "Action": [
                  "dms:*ReplicationTaskAssessmentRun",
                  "dms:*ReplicationTask",
                  "dms:DescribeReplicationTask*",
                  "dms:DescribeReplicationInstanceTaskLogs",
                  "dms:DescribeRefreshSchemasStatus",
                  "dms:DescribeSchemas",
                  "dms:DescribeTableStatistics",
                  "dms:DescribeApplicableIndividualAssessments",
                  "dms:StartReplicationTaskAssessment*",
                  "dms:ReloadTables",
                  "dms:TestConnection",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "DmsDataAdminAccess",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CodeCommitReadAccess: Permissions provided to Data Admin persona to have necessary permission for codecommit service - s3DataAdminDeletePermissions: Permissions provided to Delete Bucket. Permission to delete object should be provided outside of this policy - SageMakerBasicAccess: Allows DataAdmin to manage Sagemaker apps and user profiles - IAMViewRolePermissions: Basic capability for DataAdmin to list and get role permissions - RedshiftDataAdminAccess: Redshift data admin permissions - GlueAdminAccess: Glue data admin permission - SecretsManagerBasicAccess: Allow data admin to generate random pwd and view secrets metadata - LakeFormationDataAdminPermissions: Provide Lakeformation DataAdmin permissions - DmsDataAdminAccess: Permissions to manage replication tasks and other required data admin permissions - KmsListAliases: Permissions provided to view aliases for KMS keys - BasicSsmListAccess: Allows data admin to view details about a ssm parameter ",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/data-admin-base-policy/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CodeCommitReadAccess: Permissions provided to Data Admin persona to have necessary permission for codecommit service - s3DataAdminDeletePermissions: Permissions provided to Delete Bucket. Permission to delete object should be provided outside of this policy - SageMakerBasicAccess: Allows DataAdmin to manage Sagemaker apps and user profiles - IAMViewRolePermissions: Basic capability for DataAdmin to list and get role permissions - RedshiftDataAdminAccess: Redshift data admin permissions - GlueAdminAccess: Glue data admin permission - SecretsManagerBasicAccess: Allow data admin to generate random pwd and view secrets metadata - LakeFormationDataAdminPermissions: Provide Lakeformation DataAdmin permissions - DmsDataAdminAccess: Permissions to manage replication tasks and other required data admin permissions - KmsListAliases: Permissions provided to view aliases for KMS keys - BasicSsmListAccess: Allows data admin to view details about a ssm parameter ",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/data-admin-base-policy/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] Minimum permission provided to Data Engineer persona",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-data-engi-71eb1cc5",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "logs:DescribeLogGroups",
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "ListLogsAccess",
              },
              {
                "Action": [
                  "elasticmapreduce:List*",
                  "elasticmapreduce:Desc*",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "EMRReadOnly",
              },
              {
                "Action": [
                  "iam:GetRole",
                  "iam:ListSAMLProviders",
                  "iam:ListRoleTags",
                  "iam:ListSAMLProviderTags",
                  "iam:ListRoles",
                  "iam:ListRolePolicies",
                  "iam:GetRolePolicy",
                  "iam:GetSAMLProvider",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "IAMViewRolePermissions",
              },
              {
                "Action": [
                  "glue:BatchGetPartition",
                  "glue:DeleteColumnStatisticsForPartition",
                  "glue:DeleteColumnStatisticsForTable",
                  "glue:Get*",
                  "glue:SearchTables",
                  "glue:UpdateColumnStatisticsForPartition",
                  "glue:UpdateColumnStatisticsForTable",
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:glue:*:*:catalog",
                "Sid": "GlueCatalogAccess",
              },
              {
                "Action": [
                  "glue:BatchStopJobRun",
                  "glue:GetJob",
                  "glue:GetJobRun",
                  "glue:GetJobRuns",
                  "glue:StartJobRun",
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:glue:*:*:job/*",
                "Sid": "GlueJobAccess",
              },
              {
                "Action": [
                  "glue:BatchGetTriggers",
                  "glue:GetTrigger*",
                  "glue:StartTrigger",
                  "glue:StopTrigger",
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:glue:*:*:trigger/*",
                "Sid": "GlueTriggerAccess",
              },
              {
                "Action": [
                  "glue:BatchGetCrawlers",
                  "glue:StartCrawler",
                  "glue:StopCrawler",
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:glue:*:*:crawler/*",
                "Sid": "GlueCrawlerAccess",
              },
              {
                "Action": [
                  "glue:BatchGetWorkflows",
                  "glue:GetWorkflow",
                  "glue:GetWorkflowRun",
                  "glue:GetWorkflowRunProperties",
                  "glue:GetWorkflowRuns",
                  "glue:ListWorkflows",
                  "glue:NotifyEvent",
                  "glue:ResumeWorkflowRun",
                  "glue:StartWorkflowRun",
                  "glue:StopWorkflowRun",
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:glue:*:*:workflow/*",
                "Sid": "GlueWorkflowAccess",
              },
              {
                "Action": [
                  "glue:BatchGetBlueprints",
                  "glue:GetBlueprint",
                  "glue:GetBlueprintRun",
                  "glue:GetBlueprintRuns",
                  "glue:StartBlueprintRun",
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:glue:*:*:blueprint/*",
                "Sid": "GlueBlueprintsAccess",
              },
              {
                "Action": [
                  "lakeformation:CancelTransaction",
                  "lakeformation:CommitTransaction",
                  "lakeformation:ExtendTransaction",
                  "lakeformation:StartQueryPlanning",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "LakeFormationAccess",
              },
              {
                "Action": [
                  "codecommit:BatchGetCommits",
                  "codecommit:BatchGetPullRequests",
                  "codecommit:BatchGetRepositories",
                  "codecommit:BatchDescribeMergeConflicts",
                  "codecommit:DescribeMergeConflicts",
                  "codecommit:DescribePullRequestEvents",
                  "codecommit:EvaluatePullRequestApprovalRules",
                  "codecommit:GitPull",
                  "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
                  "codecommit:ListBranches",
                  "codecommit:ListPullRequests",
                  "codecommit:ListTagsForResource",
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:codecommit:*:*:*",
                "Sid": "CodeCommitReadAccess",
              },
              {
                "Action": [
                  "dms:DeleteReplicationTask",
                  "dms:DescribeReplicationTaskAssessmentResults",
                  "dms:DescribeTableStatistics",
                  "dms:ModifyReplicationTask",
                  "dms:ReloadTables",
                  "dms:StartReplicationTask",
                  "dms:StartReplicationTaskAssessment",
                  "dms:StartReplicationTaskAssessmentRun",
                  "dms:StopReplicationTask",
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:dms:*:*:task:*",
                "Sid": "DmsReplicationTaskAccess",
              },
              {
                "Action": [
                  "dms:TestConnection",
                  "dms:DescribeApplicableIndividualAssessments",
                  "dms:DescribeReplicationInstanceTaskLogs",
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:dms:*:*:rep:*",
                "Sid": "DmsReplicationInstanceReadAccess",
              },
              {
                "Action": "dms:DescribeReplicationTaskAssessmentRuns",
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:dms:*:*:rep:*",
                  "arn:aws:dms:*:*:assessment-run:*",
                  "arn:aws:dms:*:*:task:*",
                ],
                "Sid": "DmsTaskAssessmentReadAccess",
              },
              {
                "Action": "dms:DescribeReplicationTaskIndividualAssessments",
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:dms:*:*:individual-assessment:*",
                  "arn:aws:dms:*:*:assessment-run:*",
                  "arn:aws:dms:*:*:task:*",
                ],
                "Sid": "DmsIndividualAssessmentReadAccess",
              },
              {
                "Action": [
                  "dms:DescribeRefreshSchemasStatus",
                  "dms:DescribeSchemas",
                  "dms:TestConnection",
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:dms:*:*:endpoint:*",
                "Sid": "DmsEndpointReadAccess",
              },
            ],
            "Version": "2012-10-17",
          },
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] Minimum permission provided to Data Engineer persona",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/data-engineer-base-policy/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] Minimum permission provided to Data Engineer persona",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/data-engineer-base-policy/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - BasicS3NoResourceAccess: Above s3 Policy actions do not require Resource! - AthenaNoResource: Above Athena Policy actions do not require Resource! - BasicAthenaAccessForDefaultCatalog: Provided access to default catalog - LakeFormationNoResourceReadAccess: AWS Lake Formation does not support specifying a resource ARN in the Resource element of an IAM policy statement - BasicLfDataAccess: AWS Lake Formation does not support specifying a resource ARN in the Resource element of an IAM policy statement",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-datalake--33a86af7",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "s3:GetAccessPoint",
                  "s3:GetAccountPublicAccessBlock",
                  "s3:ListAccessPoints",
                  "s3:ListAccessPointsForObjectLambda",
                  "s3:ListAllMyBuckets",
                  "s3:ListJobs",
                  "s3:ListMultiRegionAccessPoints",
                  "s3:ListStorageLensConfigurations",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "BasicS3NoResourceAccess",
              },
              {
                "Action": [
                  "athena:ListDataCatalogs",
                  "athena:ListEngineVersions",
                  "athena:ListWorkGroups",
                  "athena:ListCapacityReservations",
                  "athena:ListApplicationDPUSizes",
                  "athena:ListExecutors",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "AthenaNoResource",
              },
              {
                "Action": [
                  "athena:ListDatabases",
                  "athena:GetDataCatalog",
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:athena:*:*:datacatalog/AwsDataCatalog",
                "Sid": "BasicAthenaAccessForDefaultCatalog",
              },
              {
                "Action": [
                  "lakeformation:DescribeResource",
                  "lakeformation:DescribeTransaction",
                  "lakeformation:GetDataCellsFilter",
                  "lakeformation:GetDataLakeSettings",
                  "lakeformation:GetEffectivePermissionsForPath",
                  "lakeformation:GetLFTag",
                  "lakeformation:GetQueryState",
                  "lakeformation:GetQueryStatistics",
                  "lakeformation:GetResourceLFTags",
                  "lakeformation:GetTableObjects",
                  "lakeformation:GetWorkUnitResults",
                  "lakeformation:GetWorkUnits",
                  "lakeformation:ListDataCellsFilter",
                  "lakeformation:ListLFTags",
                  "lakeformation:ListLakeFormationOptIns",
                  "lakeformation:ListPermissions",
                  "lakeformation:ListResources",
                  "lakeformation:ListTableStorageOptimizers",
                  "lakeformation:ListTransactions",
                  "lakeformation:SearchDatabasesByLFTags",
                  "lakeformation:SearchTablesByLFTags",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "LakeFormationNoResourceReadAccess",
              },
              {
                "Action": "lakeformation:GetDataAccess",
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "BasicLfDataAccess",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - BasicS3NoResourceAccess: Above s3 Policy actions do not require Resource! - AthenaNoResource: Above Athena Policy actions do not require Resource! - BasicAthenaAccessForDefaultCatalog: Provided access to default catalog - LakeFormationNoResourceReadAccess: AWS Lake Formation does not support specifying a resource ARN in the Resource element of an IAM policy statement - BasicLfDataAccess: AWS Lake Formation does not support specifying a resource ARN in the Resource element of an IAM policy statement",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/datalake-basic-policy/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - BasicS3NoResourceAccess: Above s3 Policy actions do not require Resource! - AthenaNoResource: Above Athena Policy actions do not require Resource! - BasicAthenaAccessForDefaultCatalog: Provided access to default catalog - LakeFormationNoResourceReadAccess: AWS Lake Formation does not support specifying a resource ARN in the Resource element of an IAM policy statement - BasicLfDataAccess: AWS Lake Formation does not support specifying a resource ARN in the Resource element of an IAM policy statement",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/datalake-basic-policy/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - GlueAccessNoResource: Policy actions do not require Resource! - GlueDataBrewNoResourceReadAccess: Policy actions do not require Resource! - GlueDataBrewNoResourceWriteAccess: Policy actions do not require Resource! - DmsNoResourceReadAccess: Policy actions do not require Resource - DmsNoResourceWriteAccess: Policy actions do not require Resource ",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-dataops-b-6724ce24",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "glue:CheckSchemaVersionValidity",
                  "glue:DeregisterDataPreview",
                  "glue:GetClassifier*",
                  "glue:GetCrawlerMetrics",
                  "glue:GetCrawlers",
                  "glue:GetDataPreviewStatement",
                  "glue:GetDataflowGraph",
                  "glue:GetDevEndpoints",
                  "glue:GetJobBookmark",
                  "glue:GetJobs",
                  "glue:GetMapping",
                  "glue:GetNotebookInstanceStatus",
                  "glue:GetPlan",
                  "glue:GetSecurityConfiguration*",
                  "glue:GetTriggers",
                  "glue:GlueNotebookAuthorize",
                  "glue:GlueNotebookRefreshCredentials",
                  "glue:ListBlueprints",
                  "glue:ListCrawlers",
                  "glue:ListCrawls",
                  "glue:ListCustomEntityTypes",
                  "glue:ListDevEndpoints",
                  "glue:ListJobs",
                  "glue:ListRegistries",
                  "glue:ListSessions",
                  "glue:ListTriggers",
                  "glue:ListWorkflows",
                  "glue:RunDataPreviewStatement",
                  "glue:StartNotebook",
                  "glue:TerminateNotebook",
                  "glue:TestConnection",
                  "glue:UseGlueStudio",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "GlueAccessNoResourceReadAccess",
              },
              {
                "Action": [
                  "databrew:ListDatasets",
                  "databrew:ListJobs",
                  "databrew:ListProjects",
                  "databrew:ListRecipes",
                  "databrew:ListRulesets",
                  "databrew:ListSchedules",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "GlueDataBrewNoResourceReadAccess",
              },
              {
                "Action": [
                  "databrew:CreateDataset",
                  "databrew:CreateProfileJob",
                  "databrew:CreateProject",
                  "databrew:CreateRecipe",
                  "databrew:CreateRecipeJob",
                  "databrew:CreateRuleset",
                  "databrew:CreateSchedule",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "GlueDataBrewNoResourceWriteAccess",
              },
              {
                "Action": [
                  "dms:Describe*",
                  "dms:ListTagsForResource",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "DmsNoResourceReadAccess",
              },
              {
                "Action": [
                  "dms:BatchStartRecommendations",
                  "dms:CreateDataProvider",
                  "dms:CreateEndpoint",
                  "dms:CreateEventSubscription",
                  "dms:CreateFleetAdvisorCollector",
                  "dms:CreateInstanceProfile",
                  "dms:CreateReplicationInstance",
                  "dms:CreateReplicationSubnetGroup",
                  "dms:ImportCertificate",
                  "dms:ModifyEventSubscription",
                  "dms:ModifyFleetAdvisorCollector",
                  "dms:ModifyFleetAdvisorCollectorStatuses",
                  "dms:ModifyReplicationSubnetGroup",
                  "dms:RunFleetAdvisorLsaAnalysis",
                  "dms:StartRecommendations",
                  "dms:UpdateSubscriptionsToEventBridge",
                  "dms:UploadFileMetadataList",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "DmsNoResourceWriteAccess",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - GlueAccessNoResource: Policy actions do not require Resource! - GlueDataBrewNoResourceReadAccess: Policy actions do not require Resource! - GlueDataBrewNoResourceWriteAccess: Policy actions do not require Resource! - DmsNoResourceReadAccess: Policy actions do not require Resource - DmsNoResourceWriteAccess: Policy actions do not require Resource ",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/dataops-basic-policy/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - GlueAccessNoResource: Policy actions do not require Resource! - GlueDataBrewNoResourceReadAccess: Policy actions do not require Resource! - GlueDataBrewNoResourceWriteAccess: Policy actions do not require Resource! - DmsNoResourceReadAccess: Policy actions do not require Resource - DmsNoResourceWriteAccess: Policy actions do not require Resource ",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/dataops-basic-policy/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - SagemakerNoResourceAccessPolicy: Policy actions do not require Resource! - ServiceCatalogNoResourceReadAccess: Policy actions do not require Resource! - ServiceCatalogNoResourceListAccess: Policy actions do not require Resource! - DeployNotebooksFromServiceCatalog: Permissions necessary to Deploy Notebooks from Service Catalog - ModifySelfCreatedCatalogProducts: Permission required to modify Self created Product ",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-datascien-5b0e97b2",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "sagemaker:DescribeLineageGroup",
                  "sagemaker:GetLineageGroupPolicy",
                  "sagemaker:GetSagemakerServicecatalogPortfolioStatus",
                  "sagemaker:GetSearchSuggestions",
                  "sagemaker:List*",
                  "sagemaker:Search",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "SagemakerNoResourceAccessPolicy",
              },
              {
                "Action": [
                  "servicecatalog:DescribeConstraint",
                  "servicecatalog:DescribeCopyProductStatus",
                  "servicecatalog:DescribeProductView",
                  "servicecatalog:DescribePortfolioShareStatus",
                  "servicecatalog:DescribeRecord",
                  "servicecatalog:DescribeServiceAction",
                  "servicecatalog:DescribeServiceActionExecutionParameters",
                  "servicecatalog:DescribeTagOption",
                  "servicecatalog:GetProvisionedProductOutputs",
                  "servicecatalog:ListAcceptedPortfolioShares",
                  "servicecatalog:ListApplications",
                  "servicecatalog:ListAttributeGroups",
                  "servicecatalog:ListBudgetsForResource",
                  "servicecatalog:ListConstraintsForPortfolio",
                  "servicecatalog:ListPortfolios",
                  "servicecatalog:ListProvisioningArtifactsForServiceAction",
                  "servicecatalog:ListResourcesForTagOption",
                  "servicecatalog:ListServiceActions",
                  "servicecatalog:ListStackInstancesForProvisionedProduct",
                  "servicecatalog:ListTagOptions",
                  "servicecatalog:SearchProducts",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "ServiceCatalogNoResourceReadAccess",
              },
              {
                "Action": [
                  "servicecatalog:DescribeProvisioningParameters",
                  "servicecatalog:ListLaunchPaths",
                  "servicecatalog:ListServiceActionsForProvisioningArtifact",
                  "servicecatalog:DescribeProduct",
                  "servicecatalog:ProvisionProduct",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "DeployNotebooksFromServiceCatalog",
              },
              {
                "Action": [
                  "servicecatalog:DescribeProvisionedProduct*",
                  "servicecatalog:ExecuteProvisionedProduct*",
                  "servicecatalog:ListProvisionedProductPlans",
                  "servicecatalog:ListStackInstancesForProvisionedProduct",
                  "servicecatalog:ScanProvisionedProducts",
                  "servicecatalog:TerminateProvisionedProduct",
                  "servicecatalog:UpdateProvisionedProduct",
                  "servicecatalog:SearchProvisionedProducts",
                  "servicecatalog:ListRecordHistory",
                  "servicecatalog:NotifyTerminateProvisionedProductEngineWorkflowResult",
                  "servicecatalog:NotifyUpdateProvisionedProductEngineWorkflowResult",
                ],
                "Condition": {
                  "StringEquals": {
                    "servicecatalog:userLevel": "self",
                  },
                },
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "ModifySelfCreatedCatalogProducts",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - SagemakerNoResourceAccessPolicy: Policy actions do not require Resource! - ServiceCatalogNoResourceReadAccess: Policy actions do not require Resource! - ServiceCatalogNoResourceListAccess: Policy actions do not require Resource! - DeployNotebooksFromServiceCatalog: Permissions necessary to Deploy Notebooks from Service Catalog - ModifySelfCreatedCatalogProducts: Permission required to modify Self created Product ",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/datascience-basic-policy/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - SagemakerNoResourceAccessPolicy: Policy actions do not require Resource! - ServiceCatalogNoResourceReadAccess: Policy actions do not require Resource! - ServiceCatalogNoResourceListAccess: Policy actions do not require Resource! - DeployNotebooksFromServiceCatalog: Permissions necessary to Deploy Notebooks from Service Catalog - ModifySelfCreatedCatalogProducts: Permission required to modify Self created Product ",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/datascience-basic-policy/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CodeCommitReadAccess: Permissions provided to Data Scientist persona to have necessary permission for codecommit service - SageMakerLogsAccess: Permissions provided to access Sagemaker logs - KmsListAliases: Permissions provided to view aliases for KMS keys - BasicSsmListAccess: Allows data scientist to view details about a ssm parameter ",
              },
              {
                "id": "NIST.800.53.R5-IAMPolicyNoStatementsWithFullAccess",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
              },
              {
                "id": "HIPAA.Security-IAMPolicyNoStatementsWithFullAccess",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
              },
              {
                "id": "PCI.DSS.321-IAMPolicyNoStatementsWithFullAccess",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-data-sci--79505e5c",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:Describe*",
                  "logs:Get*",
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:logs:ca-central-1:*:log-group:*sagemaker*",
                "Sid": "SageMakerLogsAccess",
              },
              {
                "Action": [
                  "glue:GetNotebookInstanceStatus",
                  "glue:GlueNotebookAuthorize",
                  "glue:GlueNotebookRefreshCredentials",
                  "glue:StartNotebook",
                  "glue:TerminateNotebook",
                  "glue:TestConnection",
                  "glue:UseGlueStudio",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "GlueNotebookNoResourceAccess",
              },
              {
                "Action": [
                  "codecommit:BatchGet*",
                  "codecommit:BatchDescribeMergeConflicts",
                  "codecommit:DescribeMergeConflicts",
                  "codecommit:DescribePullRequestEvents",
                  "codecommit:EvaluatePullRequestApprovalRules",
                  "codecommit:GitPull",
                  "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
                  "codecommit:ListBranches",
                  "codecommit:ListPullRequests",
                  "codecommit:ListTagsForResource",
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:codecommit:*:*:*",
                "Sid": "CodeCommitReadAccess",
              },
              {
                "Action": "groundtruthlabeling:*",
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "GroundTruthLabellingNoResourceAccess",
              },
              {
                "Action": "kms:ListAliases",
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "KmsListAliases",
              },
              {
                "Action": "ssm:DescribeParameters",
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "BasicSsmListAccess",
              },
            ],
            "Version": "2012-10-17",
          },
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CodeCommitReadAccess: Permissions provided to Data Scientist persona to have necessary permission for codecommit service - SageMakerLogsAccess: Permissions provided to access Sagemaker logs - KmsListAliases: Permissions provided to view aliases for KMS keys - BasicSsmListAccess: Allows data scientist to view details about a ssm parameter ",
              },
              {
                "id": "NIST.800.53.R5-IAMPolicyNoStatementsWithFullAccess",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
              },
              {
                "id": "HIPAA.Security-IAMPolicyNoStatementsWithFullAccess",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
              },
              {
                "id": "PCI.DSS.321-IAMPolicyNoStatementsWithFullAccess",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/data-scientist-base-policy/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CodeCommitReadAccess: Permissions provided to Data Scientist persona to have necessary permission for codecommit service - SageMakerLogsAccess: Permissions provided to access Sagemaker logs - KmsListAliases: Permissions provided to view aliases for KMS keys - BasicSsmListAccess: Allows data scientist to view details about a ssm parameter ",
              },
              {
                "id": "NIST.800.53.R5-IAMPolicyNoStatementsWithFullAccess",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
              },
              {
                "id": "HIPAA.Security-IAMPolicyNoStatementsWithFullAccess",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
              },
              {
                "id": "PCI.DSS.321-IAMPolicyNoStatementsWithFullAccess",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/data-scientist-base-policy/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CloudWatchNoResourceReadAccess: Policy actions do not require Resource - CloudWatchLogsNoResourceReadAccess: Policy actions do not require Resource - CodeCommitNoResourceAccess: Above CodeCommit Policy actions do not require Resource ",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-utility-b-7ac64e00",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "cloudwatch:List*",
                  "cloudwatch:Get*",
                  "cloudwatch:Describe*",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "CloudWatchNoResourceReadAccess",
              },
              {
                "Action": [
                  "logs:DescribeAccountPolicies",
                  "logs:DescribeDeliveries",
                  "logs:DescribeDeliveryDestinations",
                  "logs:DescribeDeliverySources",
                  "logs:DescribeDestinations",
                  "logs:DescribeExportTasks",
                  "logs:DescribeLogGroups",
                  "logs:DescribeQueries",
                  "logs:DescribeQueryDefinitions",
                  "logs:DescribeResourcePolicies",
                  "logs:GetLogDelivery",
                  "logs:ListLogDeliveries",
                  "logs:*LiveTail",
                  "logs:StopQuery",
                  "logs:TestMetricFilter",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "CloudWatchLogsNoResourceReadAccess",
              },
              {
                "Action": [
                  "codecommit:CreateApprovalRuleTemplate",
                  "codecommit:DeleteApprovalRuleTemplate",
                  "codecommit:GetApprovalRuleTemplate",
                  "codecommit:ListApprovalRuleTemplates",
                  "codecommit:ListRepositories",
                  "codecommit:ListRepositoriesForApprovalRuleTemplate",
                  "codecommit:UpdateApprovalRuleTemplateContent",
                  "codecommit:UpdateApprovalRuleTemplateDescription",
                  "codecommit:UpdateApprovalRuleTemplateName",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "CodeCommitNoResourceAccess",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CloudWatchNoResourceReadAccess: Policy actions do not require Resource - CloudWatchLogsNoResourceReadAccess: Policy actions do not require Resource - CodeCommitNoResourceAccess: Above CodeCommit Policy actions do not require Resource ",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/utility-basic-policy/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CloudWatchNoResourceReadAccess: Policy actions do not require Resource - CloudWatchLogsNoResourceReadAccess: Policy actions do not require Resource - CodeCommitNoResourceAccess: Above CodeCommit Policy actions do not require Resource ",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/utility-basic-policy/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRoleWithSAML",
                "Effect": "Allow",
                "Principal": {
                  "Federated": {
                    "Ref": "REPLACED-CFN-LOGICAL-ID",
                  },
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "RoleName": "test-org-test-env-test-domain-test-roles-main-data-engineer",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "roles",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-roles-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/data-engineer/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/data-engineer/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/data-engineer/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/data-engineer/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/data-engineer/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRoleWithSAML",
                "Effect": "Allow",
                "Principal": {
                  "Federated": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":saml-provider/ExampleIdentityProvider",
                      ],
                    ],
                  },
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "RoleName": "test-org-test-env-test-domain-test-roles-main-data-scientist",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "roles",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-roles-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/data-scientist/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/data-scientist/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/data-scientist/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/data-scientist/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/data-scientist/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM4",
                "reason": "[CONFIG:test-config.yaml] AWSGlueServiceRole approved for use",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "glue.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::aws:policy/service-role/AWSGlueServiceRole",
                ],
              ],
            },
          ],
          "RoleName": "test-org-test-env-test-domain-test-roles-main-glue-role",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "roles",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-roles-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/glue-role/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/glue-role/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM4",
                "reason": "[CONFIG:test-config.yaml] AWSGlueServiceRole approved for use",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/glue-role/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM4",
                "reason": "[CONFIG:test-config.yaml] AWSGlueServiceRole approved for use",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/glue-role/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM4",
                "reason": "[CONFIG:test-config.yaml] AWSGlueServiceRole approved for use",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/glue-role/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lakeformation.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "RoleName": "test-org-test-env-test-domain-test-roles-main-lakeformation",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "roles",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-roles-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/lakeformation/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/lakeformation/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/lakeformation/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/lakeformation/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/lakeformation/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "sagemaker.amazonaws.com",
                },
              },
              {
                "Action": [
                  "sts:AssumeRole",
                  "sts:SetSourceIdentity",
                ],
                "Effect": "Allow",
                "Principal": {
                  "Service": "sagemaker.amazonaws.com",
                },
              },
              {
                "Action": [
                  "sts:AssumeRole",
                  "sts:SetSourceIdentity",
                ],
                "Effect": "Allow",
                "Principal": {
                  "Service": "elasticmapreduce.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "RoleName": "test-org-test-env-test-domain-test-roles-main-multiple_s-9f22bc1",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "roles",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-roles-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/multiple_service_role/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/multiple_service_role/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/multiple_service_role/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/multiple_service_role/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/multiple_service_role/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "RoleName": "test-org-test-env-test-domain-test-roles-main-my-data-admin",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "roles",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-roles-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/my-data-admin/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/my-data-admin/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/my-data-admin/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/my-data-admin/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/my-data-admin/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[CONFIG:test-config.yaml] Wildcard testing ok!",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-testpolicy",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "s3:List*",
                  "s3:GetBucket*",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::*",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[CONFIG:test-config.yaml] Wildcard testing ok!",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "TestPolicyVerbatim",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "s3:List*",
                  "s3:GetBucket*",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::*",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[CONFIG:test-config.yaml] Wildcard testing ok!",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/testpolicyverbatim/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[CONFIG:test-config.yaml] Wildcard testing ok!",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/testpolicyverbatim/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[CONFIG:test-config.yaml] Wildcard testing ok!",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/testpolicy/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[CONFIG:test-config.yaml] Wildcard testing ok!",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/managed-policy/testpolicy/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "test-org-test-env-test-domain-test-roles-main-new-federation",
          "SamlMetadataDocument": "",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "roles",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-roles-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::SAMLProvider",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM4",
                "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                ],
              ],
            },
          ],
          "RoleName": "test-org-test-env-test-domain-test-roles-main-test-role",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "roles",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-roles-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM4",
                "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/test-role/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM4",
                "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/test-role/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM4",
                "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/test-role/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/test-role/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/test-role/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM4",
                "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                ],
              ],
            },
          ],
          "RoleName": "test-role-verbatim",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "roles",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-roles-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM4",
                "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/test-role-verbatim/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM4",
                "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/test-role-verbatim/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM4",
                "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-roles-main/role/test-role-verbatim/name",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/test-role-verbatim/arn",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/generated-role/test-role-verbatim/id",
          "Tags": {
            "mdaa_cdk_app": "roles",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-roles-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
    },
    "Rules": {
      "CheckBootstrapVersion": {
        "Assertions": [
          {
            "Assert": {
              "Fn::Not": [
                {
                  "Fn::Contains": [
                    [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                    ],
                    {
                      "Ref": "BootstrapVersion",
                    },
                  ],
                },
              ],
            },
            "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
          },
        ],
      },
    },
  },
}
`;

exports[`roles Snapshot Tests Roles Stack Snapshot Test 1`] = `
{
  "Description": "(SO0320-roles) Modern Data Architecture Accelerator. Version 1.1.0",
  "Outputs": {
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:application-data-role1:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:application-data-role1:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:application-data-role1:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:application-data-role2:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:application-data-role2:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:application-data-role2:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:analyticsbasicpolicy:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:analyticsbasicpolicy:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:dataadminbasepolicy:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:dataadminbasepolicy:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:dataengineerbasepolicy:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:dataengineerbasepolicy:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:datalakebasicpolicy:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:datalakebasicpolicy:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:dataopsbasicpolicy:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:dataopsbasicpolicy:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:datasciencebasicpolicy:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:datasciencebasicpolicy:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:datascientistbasepolicy:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:datascientistbasepolicy:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:utilitybasicpolicy:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:utilitybasicpolicy:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:dataengineer:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:dataengineer:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:dataengineer:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:datascientist:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:datascientist:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:datascientist:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:gluerole:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:gluerole:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:gluerole:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:lakeformation:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:lakeformation:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:lakeformation:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:multiple-service-role:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:multiple-service-role:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:multiple-service-role:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:mydataadmin:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:mydataadmin:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:mydataadmin:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:testpolicyverbatim:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:testpolicyverbatim:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:testpolicy:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:managed-policy:testpolicy:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:testrole:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:testrole:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:testrole:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:testroleverbatim:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:testroleverbatim:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-roles-main:role:testroleverbatim:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/test-org/test-domain/caef-bootstrap/role-helper-service-token",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "Stack description parameter to update on version changes",
        "Name": "/test-org/test-domain/test-roles-main/aws-solution",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "(SO0320-roles) Modern Data Architecture Accelerator. Version 1.1.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/test-application-role",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "test-org-test-env-test-domain-test-roles-main-applicat--19d293fd",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "roles",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-roles-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/application_data_role1/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/application_data_role1/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/application_data_role1/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/application_data_role1/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/application_data_role1/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/test-application-role",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "test-org-test-env-test-domain-test-roles-main-applicat--19d293fc",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "roles",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-roles-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/application_data_role2/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/application_data_role2/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/application_data_role2/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/application_data_role2/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/application_data_role2/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - RedshiftNoResourceReadAccess: Policy actions do not require Resource! ",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-analytic--7f35ad5a",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "redshift:Describe*",
                "redshift:GetReservedNodeExchangeConfigurationOptions",
                "redshift:GetReservedNodeExchangeOfferings",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "RedshiftNoResourceReadAccess",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - RedshiftNoResourceReadAccess: Policy actions do not require Resource! ",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/analytics-basic-policy/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - RedshiftNoResourceReadAccess: Policy actions do not require Resource! ",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/analytics-basic-policy/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CodeCommitReadAccess: Permissions provided to Data Admin persona to have necessary permission for codecommit service - s3DataAdminDeletePermissions: Permissions provided to Delete Bucket. Permission to delete object should be provided outside of this policy - SageMakerBasicAccess: Allows DataAdmin to manage Sagemaker apps and user profiles - IAMViewRolePermissions: Basic capability for DataAdmin to list and get role permissions - RedshiftDataAdminAccess: Redshift data admin permissions - GlueAdminAccess: Glue data admin permission - SecretsManagerBasicAccess: Allow data admin to generate random pwd and view secrets metadata - LakeFormationDataAdminPermissions: Provide Lakeformation DataAdmin permissions - DmsDataAdminAccess: Permissions to manage replication tasks and other required data admin permissions - KmsListAliases: Permissions provided to view aliases for KMS keys - BasicSsmListAccess: Allows data admin to view details about a ssm parameter ",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-data-adm--4aed1125",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:DescribeParameters",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "BasicSsmListAccess",
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "ListKmsAliases",
            },
            {
              "Action": [
                "s3:DeleteAccessPoint*",
                "s3:DeleteBucket*",
                "s3:DeleteJobTagging",
                "s3:DeleteMultiRegionAccessPoint",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "s3DataAdminDeletePermissions",
            },
            {
              "Action": [
                "sagemaker:*App",
                "sagemaker:Describe*",
                "sagemaker:*Profile",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "SageMakerBasicAccess",
            },
            {
              "Action": [
                "iam:GetRole",
                "iam:ListRoles",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "IAMViewRolePermissions",
            },
            {
              "Action": [
                "redshift:ModifyClusterMaintenance",
                "redshift:ModifyEndpointAccess",
                "redshift:ModifyScheduledAction",
                "redshift:PurchaseReservedNodeOffering",
                "redshift:RevokeEndpointAccess",
                "redshift:CreateTags",
                "redshift:*SnapshotAccess",
                "redshift:BatchDeleteClusterSnapshots",
                "redshift:BatchModifyClusterSnapshots",
                "redshift:*ClusterSnapshot",
                "redshift:*SnapshotCopyGrant",
                "redshift:*SnapshotSchedule",
                "redshift:*UsageLimit",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "RedshiftDataAdminAccess",
            },
            {
              "Action": [
                "redshift:DeletePartner",
                "redshift:DeleteAuthenticationProfile",
                "redshift:DeleteClusterParameterGroup",
                "redshift:DeleteTags",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "RedshiftDeletePermissions",
            },
            {
              "Action": [
                "glue:BatchGet*",
                "glue:*Trigger",
                "glue:*Crawler",
                "glue:GetWorkflow*",
                "glue:NotifyEvent",
                "glue:*WorkflowRun",
                "glue:GetBlueprint*",
                "glue:StartBlueprintRun",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "GlueAdminAccess",
            },
            {
              "Action": [
                "secretsmanager:GetRandomPassword",
                "secretsmanager:DescribeSecret",
                "secretsmanager:ListSecrets",
                "secretsmanager:ListSecretVersionIds",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "SecretsManagerBasicAccess",
            },
            {
              "Action": [
                "lakeformation:*Permissions",
                "lakeformation:*Transaction",
                "lakeformation:*egisterResource",
                "lakeformation:UpdateResource",
                "lakeformation:StartQueryPlanning",
                "lakeformation:*DataCellsFilter",
                "lakeformation:*LFTag",
                "lakeformation:*LakeFormationOptIn",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "LakeFormationDataAdminPermissions",
            },
            {
              "Action": [
                "codecommit:BatchGet*",
                "codecommit:BatchDescribeMergeConflicts",
                "codecommit:DescribeMergeConflicts",
                "codecommit:DescribePullRequestEvents",
                "codecommit:EvaluatePullRequestApprovalRules",
                "codecommit:GitPull",
                "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
                "codecommit:ListBranches",
                "codecommit:ListPullRequests",
                "codecommit:ListTagsForResource",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:codecommit:*:*:*",
              "Sid": "CodeCommitReadAccess",
            },
            {
              "Action": [
                "dms:*ReplicationTaskAssessmentRun",
                "dms:*ReplicationTask",
                "dms:DescribeReplicationTask*",
                "dms:DescribeReplicationInstanceTaskLogs",
                "dms:DescribeRefreshSchemasStatus",
                "dms:DescribeSchemas",
                "dms:DescribeTableStatistics",
                "dms:DescribeApplicableIndividualAssessments",
                "dms:StartReplicationTaskAssessment*",
                "dms:ReloadTables",
                "dms:TestConnection",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "DmsDataAdminAccess",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CodeCommitReadAccess: Permissions provided to Data Admin persona to have necessary permission for codecommit service - s3DataAdminDeletePermissions: Permissions provided to Delete Bucket. Permission to delete object should be provided outside of this policy - SageMakerBasicAccess: Allows DataAdmin to manage Sagemaker apps and user profiles - IAMViewRolePermissions: Basic capability for DataAdmin to list and get role permissions - RedshiftDataAdminAccess: Redshift data admin permissions - GlueAdminAccess: Glue data admin permission - SecretsManagerBasicAccess: Allow data admin to generate random pwd and view secrets metadata - LakeFormationDataAdminPermissions: Provide Lakeformation DataAdmin permissions - DmsDataAdminAccess: Permissions to manage replication tasks and other required data admin permissions - KmsListAliases: Permissions provided to view aliases for KMS keys - BasicSsmListAccess: Allows data admin to view details about a ssm parameter ",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/data-admin-base-policy/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CodeCommitReadAccess: Permissions provided to Data Admin persona to have necessary permission for codecommit service - s3DataAdminDeletePermissions: Permissions provided to Delete Bucket. Permission to delete object should be provided outside of this policy - SageMakerBasicAccess: Allows DataAdmin to manage Sagemaker apps and user profiles - IAMViewRolePermissions: Basic capability for DataAdmin to list and get role permissions - RedshiftDataAdminAccess: Redshift data admin permissions - GlueAdminAccess: Glue data admin permission - SecretsManagerBasicAccess: Allow data admin to generate random pwd and view secrets metadata - LakeFormationDataAdminPermissions: Provide Lakeformation DataAdmin permissions - DmsDataAdminAccess: Permissions to manage replication tasks and other required data admin permissions - KmsListAliases: Permissions provided to view aliases for KMS keys - BasicSsmListAccess: Allows data admin to view details about a ssm parameter ",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/data-admin-base-policy/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] Minimum permission provided to Data Engineer persona",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-data-engi-71eb1cc5",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "logs:DescribeLogGroups",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "ListLogsAccess",
            },
            {
              "Action": [
                "elasticmapreduce:List*",
                "elasticmapreduce:Desc*",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "EMRReadOnly",
            },
            {
              "Action": [
                "iam:GetRole",
                "iam:ListSAMLProviders",
                "iam:ListRoleTags",
                "iam:ListSAMLProviderTags",
                "iam:ListRoles",
                "iam:ListRolePolicies",
                "iam:GetRolePolicy",
                "iam:GetSAMLProvider",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "IAMViewRolePermissions",
            },
            {
              "Action": [
                "glue:BatchGetPartition",
                "glue:DeleteColumnStatisticsForPartition",
                "glue:DeleteColumnStatisticsForTable",
                "glue:Get*",
                "glue:SearchTables",
                "glue:UpdateColumnStatisticsForPartition",
                "glue:UpdateColumnStatisticsForTable",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:glue:*:*:catalog",
              "Sid": "GlueCatalogAccess",
            },
            {
              "Action": [
                "glue:BatchStopJobRun",
                "glue:GetJob",
                "glue:GetJobRun",
                "glue:GetJobRuns",
                "glue:StartJobRun",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:glue:*:*:job/*",
              "Sid": "GlueJobAccess",
            },
            {
              "Action": [
                "glue:BatchGetTriggers",
                "glue:GetTrigger*",
                "glue:StartTrigger",
                "glue:StopTrigger",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:glue:*:*:trigger/*",
              "Sid": "GlueTriggerAccess",
            },
            {
              "Action": [
                "glue:BatchGetCrawlers",
                "glue:StartCrawler",
                "glue:StopCrawler",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:glue:*:*:crawler/*",
              "Sid": "GlueCrawlerAccess",
            },
            {
              "Action": [
                "glue:BatchGetWorkflows",
                "glue:GetWorkflow",
                "glue:GetWorkflowRun",
                "glue:GetWorkflowRunProperties",
                "glue:GetWorkflowRuns",
                "glue:ListWorkflows",
                "glue:NotifyEvent",
                "glue:ResumeWorkflowRun",
                "glue:StartWorkflowRun",
                "glue:StopWorkflowRun",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:glue:*:*:workflow/*",
              "Sid": "GlueWorkflowAccess",
            },
            {
              "Action": [
                "glue:BatchGetBlueprints",
                "glue:GetBlueprint",
                "glue:GetBlueprintRun",
                "glue:GetBlueprintRuns",
                "glue:StartBlueprintRun",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:glue:*:*:blueprint/*",
              "Sid": "GlueBlueprintsAccess",
            },
            {
              "Action": [
                "lakeformation:CancelTransaction",
                "lakeformation:CommitTransaction",
                "lakeformation:ExtendTransaction",
                "lakeformation:StartQueryPlanning",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "LakeFormationAccess",
            },
            {
              "Action": [
                "codecommit:BatchGetCommits",
                "codecommit:BatchGetPullRequests",
                "codecommit:BatchGetRepositories",
                "codecommit:BatchDescribeMergeConflicts",
                "codecommit:DescribeMergeConflicts",
                "codecommit:DescribePullRequestEvents",
                "codecommit:EvaluatePullRequestApprovalRules",
                "codecommit:GitPull",
                "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
                "codecommit:ListBranches",
                "codecommit:ListPullRequests",
                "codecommit:ListTagsForResource",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:codecommit:*:*:*",
              "Sid": "CodeCommitReadAccess",
            },
            {
              "Action": [
                "dms:DeleteReplicationTask",
                "dms:DescribeReplicationTaskAssessmentResults",
                "dms:DescribeTableStatistics",
                "dms:ModifyReplicationTask",
                "dms:ReloadTables",
                "dms:StartReplicationTask",
                "dms:StartReplicationTaskAssessment",
                "dms:StartReplicationTaskAssessmentRun",
                "dms:StopReplicationTask",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:dms:*:*:task:*",
              "Sid": "DmsReplicationTaskAccess",
            },
            {
              "Action": [
                "dms:TestConnection",
                "dms:DescribeApplicableIndividualAssessments",
                "dms:DescribeReplicationInstanceTaskLogs",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:dms:*:*:rep:*",
              "Sid": "DmsReplicationInstanceReadAccess",
            },
            {
              "Action": "dms:DescribeReplicationTaskAssessmentRuns",
              "Effect": "Allow",
              "Resource": [
                "arn:aws:dms:*:*:rep:*",
                "arn:aws:dms:*:*:assessment-run:*",
                "arn:aws:dms:*:*:task:*",
              ],
              "Sid": "DmsTaskAssessmentReadAccess",
            },
            {
              "Action": "dms:DescribeReplicationTaskIndividualAssessments",
              "Effect": "Allow",
              "Resource": [
                "arn:aws:dms:*:*:individual-assessment:*",
                "arn:aws:dms:*:*:assessment-run:*",
                "arn:aws:dms:*:*:task:*",
              ],
              "Sid": "DmsIndividualAssessmentReadAccess",
            },
            {
              "Action": [
                "dms:DescribeRefreshSchemasStatus",
                "dms:DescribeSchemas",
                "dms:TestConnection",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:dms:*:*:endpoint:*",
              "Sid": "DmsEndpointReadAccess",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] Minimum permission provided to Data Engineer persona",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/data-engineer-base-policy/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] Minimum permission provided to Data Engineer persona",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/data-engineer-base-policy/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - BasicS3NoResourceAccess: Above s3 Policy actions do not require Resource! - AthenaNoResource: Above Athena Policy actions do not require Resource! - BasicAthenaAccessForDefaultCatalog: Provided access to default catalog - LakeFormationNoResourceReadAccess: AWS Lake Formation does not support specifying a resource ARN in the Resource element of an IAM policy statement - BasicLfDataAccess: AWS Lake Formation does not support specifying a resource ARN in the Resource element of an IAM policy statement",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-datalake--33a86af7",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetAccessPoint",
                "s3:GetAccountPublicAccessBlock",
                "s3:ListAccessPoints",
                "s3:ListAccessPointsForObjectLambda",
                "s3:ListAllMyBuckets",
                "s3:ListJobs",
                "s3:ListMultiRegionAccessPoints",
                "s3:ListStorageLensConfigurations",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "BasicS3NoResourceAccess",
            },
            {
              "Action": [
                "athena:ListDataCatalogs",
                "athena:ListEngineVersions",
                "athena:ListWorkGroups",
                "athena:ListCapacityReservations",
                "athena:ListApplicationDPUSizes",
                "athena:ListExecutors",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AthenaNoResource",
            },
            {
              "Action": [
                "athena:ListDatabases",
                "athena:GetDataCatalog",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:athena:*:*:datacatalog/AwsDataCatalog",
              "Sid": "BasicAthenaAccessForDefaultCatalog",
            },
            {
              "Action": [
                "lakeformation:DescribeResource",
                "lakeformation:DescribeTransaction",
                "lakeformation:GetDataCellsFilter",
                "lakeformation:GetDataLakeSettings",
                "lakeformation:GetEffectivePermissionsForPath",
                "lakeformation:GetLFTag",
                "lakeformation:GetQueryState",
                "lakeformation:GetQueryStatistics",
                "lakeformation:GetResourceLFTags",
                "lakeformation:GetTableObjects",
                "lakeformation:GetWorkUnitResults",
                "lakeformation:GetWorkUnits",
                "lakeformation:ListDataCellsFilter",
                "lakeformation:ListLFTags",
                "lakeformation:ListLakeFormationOptIns",
                "lakeformation:ListPermissions",
                "lakeformation:ListResources",
                "lakeformation:ListTableStorageOptimizers",
                "lakeformation:ListTransactions",
                "lakeformation:SearchDatabasesByLFTags",
                "lakeformation:SearchTablesByLFTags",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "LakeFormationNoResourceReadAccess",
            },
            {
              "Action": "lakeformation:GetDataAccess",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "BasicLfDataAccess",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - BasicS3NoResourceAccess: Above s3 Policy actions do not require Resource! - AthenaNoResource: Above Athena Policy actions do not require Resource! - BasicAthenaAccessForDefaultCatalog: Provided access to default catalog - LakeFormationNoResourceReadAccess: AWS Lake Formation does not support specifying a resource ARN in the Resource element of an IAM policy statement - BasicLfDataAccess: AWS Lake Formation does not support specifying a resource ARN in the Resource element of an IAM policy statement",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/datalake-basic-policy/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - BasicS3NoResourceAccess: Above s3 Policy actions do not require Resource! - AthenaNoResource: Above Athena Policy actions do not require Resource! - BasicAthenaAccessForDefaultCatalog: Provided access to default catalog - LakeFormationNoResourceReadAccess: AWS Lake Formation does not support specifying a resource ARN in the Resource element of an IAM policy statement - BasicLfDataAccess: AWS Lake Formation does not support specifying a resource ARN in the Resource element of an IAM policy statement",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/datalake-basic-policy/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - GlueAccessNoResource: Policy actions do not require Resource! - GlueDataBrewNoResourceReadAccess: Policy actions do not require Resource! - GlueDataBrewNoResourceWriteAccess: Policy actions do not require Resource! - DmsNoResourceReadAccess: Policy actions do not require Resource - DmsNoResourceWriteAccess: Policy actions do not require Resource ",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-dataops-b-6724ce24",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:CheckSchemaVersionValidity",
                "glue:DeregisterDataPreview",
                "glue:GetClassifier*",
                "glue:GetCrawlerMetrics",
                "glue:GetCrawlers",
                "glue:GetDataPreviewStatement",
                "glue:GetDataflowGraph",
                "glue:GetDevEndpoints",
                "glue:GetJobBookmark",
                "glue:GetJobs",
                "glue:GetMapping",
                "glue:GetNotebookInstanceStatus",
                "glue:GetPlan",
                "glue:GetSecurityConfiguration*",
                "glue:GetTriggers",
                "glue:GlueNotebookAuthorize",
                "glue:GlueNotebookRefreshCredentials",
                "glue:ListBlueprints",
                "glue:ListCrawlers",
                "glue:ListCrawls",
                "glue:ListCustomEntityTypes",
                "glue:ListDevEndpoints",
                "glue:ListJobs",
                "glue:ListRegistries",
                "glue:ListSessions",
                "glue:ListTriggers",
                "glue:ListWorkflows",
                "glue:RunDataPreviewStatement",
                "glue:StartNotebook",
                "glue:TerminateNotebook",
                "glue:TestConnection",
                "glue:UseGlueStudio",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "GlueAccessNoResourceReadAccess",
            },
            {
              "Action": [
                "databrew:ListDatasets",
                "databrew:ListJobs",
                "databrew:ListProjects",
                "databrew:ListRecipes",
                "databrew:ListRulesets",
                "databrew:ListSchedules",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "GlueDataBrewNoResourceReadAccess",
            },
            {
              "Action": [
                "databrew:CreateDataset",
                "databrew:CreateProfileJob",
                "databrew:CreateProject",
                "databrew:CreateRecipe",
                "databrew:CreateRecipeJob",
                "databrew:CreateRuleset",
                "databrew:CreateSchedule",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "GlueDataBrewNoResourceWriteAccess",
            },
            {
              "Action": [
                "dms:Describe*",
                "dms:ListTagsForResource",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "DmsNoResourceReadAccess",
            },
            {
              "Action": [
                "dms:BatchStartRecommendations",
                "dms:CreateDataProvider",
                "dms:CreateEndpoint",
                "dms:CreateEventSubscription",
                "dms:CreateFleetAdvisorCollector",
                "dms:CreateInstanceProfile",
                "dms:CreateReplicationInstance",
                "dms:CreateReplicationSubnetGroup",
                "dms:ImportCertificate",
                "dms:ModifyEventSubscription",
                "dms:ModifyFleetAdvisorCollector",
                "dms:ModifyFleetAdvisorCollectorStatuses",
                "dms:ModifyReplicationSubnetGroup",
                "dms:RunFleetAdvisorLsaAnalysis",
                "dms:StartRecommendations",
                "dms:UpdateSubscriptionsToEventBridge",
                "dms:UploadFileMetadataList",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "DmsNoResourceWriteAccess",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - GlueAccessNoResource: Policy actions do not require Resource! - GlueDataBrewNoResourceReadAccess: Policy actions do not require Resource! - GlueDataBrewNoResourceWriteAccess: Policy actions do not require Resource! - DmsNoResourceReadAccess: Policy actions do not require Resource - DmsNoResourceWriteAccess: Policy actions do not require Resource ",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/dataops-basic-policy/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - GlueAccessNoResource: Policy actions do not require Resource! - GlueDataBrewNoResourceReadAccess: Policy actions do not require Resource! - GlueDataBrewNoResourceWriteAccess: Policy actions do not require Resource! - DmsNoResourceReadAccess: Policy actions do not require Resource - DmsNoResourceWriteAccess: Policy actions do not require Resource ",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/dataops-basic-policy/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - SagemakerNoResourceAccessPolicy: Policy actions do not require Resource! - ServiceCatalogNoResourceReadAccess: Policy actions do not require Resource! - ServiceCatalogNoResourceListAccess: Policy actions do not require Resource! - DeployNotebooksFromServiceCatalog: Permissions necessary to Deploy Notebooks from Service Catalog - ModifySelfCreatedCatalogProducts: Permission required to modify Self created Product ",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-datascien-5b0e97b2",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sagemaker:DescribeLineageGroup",
                "sagemaker:GetLineageGroupPolicy",
                "sagemaker:GetSagemakerServicecatalogPortfolioStatus",
                "sagemaker:GetSearchSuggestions",
                "sagemaker:List*",
                "sagemaker:Search",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "SagemakerNoResourceAccessPolicy",
            },
            {
              "Action": [
                "servicecatalog:DescribeConstraint",
                "servicecatalog:DescribeCopyProductStatus",
                "servicecatalog:DescribeProductView",
                "servicecatalog:DescribePortfolioShareStatus",
                "servicecatalog:DescribeRecord",
                "servicecatalog:DescribeServiceAction",
                "servicecatalog:DescribeServiceActionExecutionParameters",
                "servicecatalog:DescribeTagOption",
                "servicecatalog:GetProvisionedProductOutputs",
                "servicecatalog:ListAcceptedPortfolioShares",
                "servicecatalog:ListApplications",
                "servicecatalog:ListAttributeGroups",
                "servicecatalog:ListBudgetsForResource",
                "servicecatalog:ListConstraintsForPortfolio",
                "servicecatalog:ListPortfolios",
                "servicecatalog:ListProvisioningArtifactsForServiceAction",
                "servicecatalog:ListResourcesForTagOption",
                "servicecatalog:ListServiceActions",
                "servicecatalog:ListStackInstancesForProvisionedProduct",
                "servicecatalog:ListTagOptions",
                "servicecatalog:SearchProducts",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "ServiceCatalogNoResourceReadAccess",
            },
            {
              "Action": [
                "servicecatalog:DescribeProvisioningParameters",
                "servicecatalog:ListLaunchPaths",
                "servicecatalog:ListServiceActionsForProvisioningArtifact",
                "servicecatalog:DescribeProduct",
                "servicecatalog:ProvisionProduct",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "DeployNotebooksFromServiceCatalog",
            },
            {
              "Action": [
                "servicecatalog:DescribeProvisionedProduct*",
                "servicecatalog:ExecuteProvisionedProduct*",
                "servicecatalog:ListProvisionedProductPlans",
                "servicecatalog:ListStackInstancesForProvisionedProduct",
                "servicecatalog:ScanProvisionedProducts",
                "servicecatalog:TerminateProvisionedProduct",
                "servicecatalog:UpdateProvisionedProduct",
                "servicecatalog:SearchProvisionedProducts",
                "servicecatalog:ListRecordHistory",
                "servicecatalog:NotifyTerminateProvisionedProductEngineWorkflowResult",
                "servicecatalog:NotifyUpdateProvisionedProductEngineWorkflowResult",
              ],
              "Condition": {
                "StringEquals": {
                  "servicecatalog:userLevel": "self",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "ModifySelfCreatedCatalogProducts",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - SagemakerNoResourceAccessPolicy: Policy actions do not require Resource! - ServiceCatalogNoResourceReadAccess: Policy actions do not require Resource! - ServiceCatalogNoResourceListAccess: Policy actions do not require Resource! - DeployNotebooksFromServiceCatalog: Permissions necessary to Deploy Notebooks from Service Catalog - ModifySelfCreatedCatalogProducts: Permission required to modify Self created Product ",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/datascience-basic-policy/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - SagemakerNoResourceAccessPolicy: Policy actions do not require Resource! - ServiceCatalogNoResourceReadAccess: Policy actions do not require Resource! - ServiceCatalogNoResourceListAccess: Policy actions do not require Resource! - DeployNotebooksFromServiceCatalog: Permissions necessary to Deploy Notebooks from Service Catalog - ModifySelfCreatedCatalogProducts: Permission required to modify Self created Product ",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/datascience-basic-policy/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CodeCommitReadAccess: Permissions provided to Data Scientist persona to have necessary permission for codecommit service - SageMakerLogsAccess: Permissions provided to access Sagemaker logs - KmsListAliases: Permissions provided to view aliases for KMS keys - BasicSsmListAccess: Allows data scientist to view details about a ssm parameter ",
            },
            {
              "id": "NIST.800.53.R5-IAMPolicyNoStatementsWithFullAccess",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
            },
            {
              "id": "HIPAA.Security-IAMPolicyNoStatementsWithFullAccess",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
            },
            {
              "id": "PCI.DSS.321-IAMPolicyNoStatementsWithFullAccess",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-data-sci--79505e5c",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:Describe*",
                "logs:Get*",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:ca-central-1:*:log-group:*sagemaker*",
              "Sid": "SageMakerLogsAccess",
            },
            {
              "Action": [
                "glue:GetNotebookInstanceStatus",
                "glue:GlueNotebookAuthorize",
                "glue:GlueNotebookRefreshCredentials",
                "glue:StartNotebook",
                "glue:TerminateNotebook",
                "glue:TestConnection",
                "glue:UseGlueStudio",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "GlueNotebookNoResourceAccess",
            },
            {
              "Action": [
                "codecommit:BatchGet*",
                "codecommit:BatchDescribeMergeConflicts",
                "codecommit:DescribeMergeConflicts",
                "codecommit:DescribePullRequestEvents",
                "codecommit:EvaluatePullRequestApprovalRules",
                "codecommit:GitPull",
                "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
                "codecommit:ListBranches",
                "codecommit:ListPullRequests",
                "codecommit:ListTagsForResource",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:codecommit:*:*:*",
              "Sid": "CodeCommitReadAccess",
            },
            {
              "Action": "groundtruthlabeling:*",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "GroundTruthLabellingNoResourceAccess",
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "KmsListAliases",
            },
            {
              "Action": "ssm:DescribeParameters",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "BasicSsmListAccess",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CodeCommitReadAccess: Permissions provided to Data Scientist persona to have necessary permission for codecommit service - SageMakerLogsAccess: Permissions provided to access Sagemaker logs - KmsListAliases: Permissions provided to view aliases for KMS keys - BasicSsmListAccess: Allows data scientist to view details about a ssm parameter ",
            },
            {
              "id": "NIST.800.53.R5-IAMPolicyNoStatementsWithFullAccess",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
            },
            {
              "id": "HIPAA.Security-IAMPolicyNoStatementsWithFullAccess",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
            },
            {
              "id": "PCI.DSS.321-IAMPolicyNoStatementsWithFullAccess",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/data-scientist-base-policy/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CodeCommitReadAccess: Permissions provided to Data Scientist persona to have necessary permission for codecommit service - SageMakerLogsAccess: Permissions provided to access Sagemaker logs - KmsListAliases: Permissions provided to view aliases for KMS keys - BasicSsmListAccess: Allows data scientist to view details about a ssm parameter ",
            },
            {
              "id": "NIST.800.53.R5-IAMPolicyNoStatementsWithFullAccess",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
            },
            {
              "id": "HIPAA.Security-IAMPolicyNoStatementsWithFullAccess",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
            },
            {
              "id": "PCI.DSS.321-IAMPolicyNoStatementsWithFullAccess",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL] - GroundTruthLabellingNoResourceAccess: Data Scientist persona will need access to all the action",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/data-scientist-base-policy/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CloudWatchNoResourceReadAccess: Policy actions do not require Resource - CloudWatchLogsNoResourceReadAccess: Policy actions do not require Resource - CodeCommitNoResourceAccess: Above CodeCommit Policy actions do not require Resource ",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-utility-b-7ac64e00",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "cloudwatch:List*",
                "cloudwatch:Get*",
                "cloudwatch:Describe*",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "CloudWatchNoResourceReadAccess",
            },
            {
              "Action": [
                "logs:DescribeAccountPolicies",
                "logs:DescribeDeliveries",
                "logs:DescribeDeliveryDestinations",
                "logs:DescribeDeliverySources",
                "logs:DescribeDestinations",
                "logs:DescribeExportTasks",
                "logs:DescribeLogGroups",
                "logs:DescribeQueries",
                "logs:DescribeQueryDefinitions",
                "logs:DescribeResourcePolicies",
                "logs:GetLogDelivery",
                "logs:ListLogDeliveries",
                "logs:*LiveTail",
                "logs:StopQuery",
                "logs:TestMetricFilter",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "CloudWatchLogsNoResourceReadAccess",
            },
            {
              "Action": [
                "codecommit:CreateApprovalRuleTemplate",
                "codecommit:DeleteApprovalRuleTemplate",
                "codecommit:GetApprovalRuleTemplate",
                "codecommit:ListApprovalRuleTemplates",
                "codecommit:ListRepositories",
                "codecommit:ListRepositoriesForApprovalRuleTemplate",
                "codecommit:UpdateApprovalRuleTemplateContent",
                "codecommit:UpdateApprovalRuleTemplateDescription",
                "codecommit:UpdateApprovalRuleTemplateName",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "CodeCommitNoResourceAccess",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CloudWatchNoResourceReadAccess: Policy actions do not require Resource - CloudWatchLogsNoResourceReadAccess: Policy actions do not require Resource - CodeCommitNoResourceAccess: Above CodeCommit Policy actions do not require Resource ",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/utility-basic-policy/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/governance/roles-l3-construct/lib/roles-l3-construct.ts:LINE:COL]  - CloudWatchNoResourceReadAccess: Policy actions do not require Resource - CloudWatchLogsNoResourceReadAccess: Policy actions do not require Resource - CodeCommitNoResourceAccess: Above CodeCommit Policy actions do not require Resource ",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/utility-basic-policy/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithSAML",
              "Effect": "Allow",
              "Principal": {
                "Federated": {
                  "Ref": "REPLACED-CFN-LOGICAL-ID",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "test-org-test-env-test-domain-test-roles-main-data-engineer",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "roles",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-roles-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/data-engineer/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/data-engineer/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/data-engineer/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/data-engineer/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/data-engineer/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithSAML",
              "Effect": "Allow",
              "Principal": {
                "Federated": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":saml-provider/ExampleIdentityProvider",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "test-org-test-env-test-domain-test-roles-main-data-scientist",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "roles",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-roles-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/data-scientist/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/data-scientist/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/data-scientist/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/data-scientist/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/data-scientist/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "[CONFIG:test-config.yaml] AWSGlueServiceRole approved for use",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "glue.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSGlueServiceRole",
              ],
            ],
          },
        ],
        "RoleName": "test-org-test-env-test-domain-test-roles-main-glue-role",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "roles",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-roles-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/glue-role/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/glue-role/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "[CONFIG:test-config.yaml] AWSGlueServiceRole approved for use",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/glue-role/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "[CONFIG:test-config.yaml] AWSGlueServiceRole approved for use",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/glue-role/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "[CONFIG:test-config.yaml] AWSGlueServiceRole approved for use",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/glue-role/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lakeformation.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "test-org-test-env-test-domain-test-roles-main-lakeformation",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "roles",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-roles-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/lakeformation/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/lakeformation/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/lakeformation/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/lakeformation/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/lakeformation/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sagemaker.amazonaws.com",
              },
            },
            {
              "Action": [
                "sts:AssumeRole",
                "sts:SetSourceIdentity",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "sagemaker.amazonaws.com",
              },
            },
            {
              "Action": [
                "sts:AssumeRole",
                "sts:SetSourceIdentity",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "elasticmapreduce.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "test-org-test-env-test-domain-test-roles-main-multiple_s-9f22bc1",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "roles",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-roles-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/multiple_service_role/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/multiple_service_role/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/multiple_service_role/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/multiple_service_role/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/multiple_service_role/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "test-org-test-env-test-domain-test-roles-main-my-data-admin",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "roles",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-roles-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/my-data-admin/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/my-data-admin/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/my-data-admin/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/my-data-admin/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/my-data-admin/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[CONFIG:test-config.yaml] Wildcard testing ok!",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-roles-main-testpolicy",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:List*",
                "s3:GetBucket*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[CONFIG:test-config.yaml] Wildcard testing ok!",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "TestPolicyVerbatim",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:List*",
                "s3:GetBucket*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[CONFIG:test-config.yaml] Wildcard testing ok!",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/testpolicyverbatim/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[CONFIG:test-config.yaml] Wildcard testing ok!",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/testpolicyverbatim/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[CONFIG:test-config.yaml] Wildcard testing ok!",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/testpolicy/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[CONFIG:test-config.yaml] Wildcard testing ok!",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/managed-policy/testpolicy/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "test-org-test-env-test-domain-test-roles-main-new-federation",
        "SamlMetadataDocument": "",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "roles",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-roles-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::SAMLProvider",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "test-org-test-env-test-domain-test-roles-main-test-role",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "roles",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-roles-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/test-role/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/test-role/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/test-role/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/test-role/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/test-role/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "test-role-verbatim",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "roles",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-roles-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/test-role-verbatim/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/test-role-verbatim/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "[CONFIG:test-config.yaml] AWSLambdaBasicExecutionRole approved for use",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-roles-main/role/test-role-verbatim/name",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/test-role-verbatim/arn",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/generated-role/test-role-verbatim/id",
        "Tags": {
          "mdaa_cdk_app": "roles",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-roles-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
