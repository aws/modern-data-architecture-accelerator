// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Bedrock Builder Snapshot Tests Bedrock Builder App App Snapshot Test 1`] = `
{
  "test-org-test-env-test-domain-test-bedrock-builder-app": {
    "Description": "(SO0320-bedrock-builder) Modern Data Architecture Accelerator. Version 1.0.0",
    "Mappings": {
      "LatestNodeRuntimeMap": {
        "af-south-1": {
          "value": "nodejs22.x",
        },
        "ap-east-1": {
          "value": "nodejs22.x",
        },
        "ap-east-2": {
          "value": "nodejs22.x",
        },
        "ap-northeast-1": {
          "value": "nodejs22.x",
        },
        "ap-northeast-2": {
          "value": "nodejs22.x",
        },
        "ap-northeast-3": {
          "value": "nodejs22.x",
        },
        "ap-south-1": {
          "value": "nodejs22.x",
        },
        "ap-south-2": {
          "value": "nodejs22.x",
        },
        "ap-southeast-1": {
          "value": "nodejs22.x",
        },
        "ap-southeast-2": {
          "value": "nodejs22.x",
        },
        "ap-southeast-3": {
          "value": "nodejs22.x",
        },
        "ap-southeast-4": {
          "value": "nodejs22.x",
        },
        "ap-southeast-5": {
          "value": "nodejs22.x",
        },
        "ap-southeast-7": {
          "value": "nodejs22.x",
        },
        "ca-central-1": {
          "value": "nodejs22.x",
        },
        "ca-west-1": {
          "value": "nodejs22.x",
        },
        "cn-north-1": {
          "value": "nodejs22.x",
        },
        "cn-northwest-1": {
          "value": "nodejs22.x",
        },
        "eu-central-1": {
          "value": "nodejs22.x",
        },
        "eu-central-2": {
          "value": "nodejs22.x",
        },
        "eu-isoe-west-1": {
          "value": "nodejs18.x",
        },
        "eu-north-1": {
          "value": "nodejs22.x",
        },
        "eu-south-1": {
          "value": "nodejs22.x",
        },
        "eu-south-2": {
          "value": "nodejs22.x",
        },
        "eu-west-1": {
          "value": "nodejs22.x",
        },
        "eu-west-2": {
          "value": "nodejs22.x",
        },
        "eu-west-3": {
          "value": "nodejs22.x",
        },
        "il-central-1": {
          "value": "nodejs22.x",
        },
        "me-central-1": {
          "value": "nodejs22.x",
        },
        "me-south-1": {
          "value": "nodejs22.x",
        },
        "mx-central-1": {
          "value": "nodejs22.x",
        },
        "sa-east-1": {
          "value": "nodejs22.x",
        },
        "us-east-1": {
          "value": "nodejs22.x",
        },
        "us-east-2": {
          "value": "nodejs22.x",
        },
        "us-gov-east-1": {
          "value": "nodejs22.x",
        },
        "us-gov-west-1": {
          "value": "nodejs22.x",
        },
        "us-iso-east-1": {
          "value": "nodejs18.x",
        },
        "us-iso-west-1": {
          "value": "nodejs18.x",
        },
        "us-isob-east-1": {
          "value": "nodejs18.x",
        },
        "us-isob-west-1": {
          "value": "nodejs18.x",
        },
        "us-west-1": {
          "value": "nodejs22.x",
        },
        "us-west-2": {
          "value": "nodejs22.x",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "aws": {
          "applicationId": arn:aws:serverlessrepo:us-east-1:REPLACED-ACCOUNT-ID:applications/SecretsManagerRDSPostgreSQLRotationSingleUser,
          "semanticVersion": "1.1.367",
        },
        "aws-cn": {
          "applicationId": arn:aws-cn:serverlessrepo:cn-north-1:REPLACED-ACCOUNT-ID:applications/SecretsManagerRDSPostgreSQLRotationSingleUser,
          "semanticVersion": "1.1.237",
        },
        "aws-us-gov": {
          "applicationId": arn:aws-us-gov:serverlessrepo:us-gov-west-1:REPLACED-ACCOUNT-ID:applications/SecretsManagerRDSPostgreSQLRotationSingleUser,
          "semanticVersion": "1.1.213",
        },
      },
    },
    "Outputs": {
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:managed-policy:agenttestagent:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:managed-policy:agenttestagent:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testactiongroupdlq:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testactiongroupdlq:name",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "QueueName",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testactiongroupdlq:url",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testcustomrouter1dlq:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testcustomrouter1dlq:name",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "QueueName",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testcustomrouter1dlq:url",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testcustomrouter2dlq:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testcustomrouter2dlq:name",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "QueueName",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testcustomrouter2dlq:url",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testcustomtransformerdlq:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testcustomtransformerdlq:name",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "QueueName",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testcustomtransformerdlq:url",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:lambda:testactiongroup:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:lambda:testactiongroup:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:lambda:testcustomrouter1:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:lambda:testcustomrouter1:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:lambda:testcustomrouter2:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:lambda:testcustomrouter2:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:lambda:testcustomtransformer:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:lambda:testcustomtransformer:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:role:monitoringroletestvectorstore:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:role:monitoringroletestvectorstore:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:role:monitoringroletestvectorstore:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:managed-policy:kbfoundationmodeltestknowledgebase:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:managed-policy:kbfoundationmodeltestknowledgebase:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:managed-policy:kbaccesstestvectorstore:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:managed-policy:kbaccesstestvectorstore:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:managed-policy:kbdatasynctestknowledgebase:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:managed-policy:kbdatasynctestknowledgebase:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:loggroup:testknowledgebase:name",
        },
        "Value": "/aws/vendedlogs/bedrock/knowledge-base/test-org-test-env-test-domain-test-bedrock-builder-app-test-knowledge-base",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:knowledgebase:testknowledgebase:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "KnowledgeBaseId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testknowledgebasetestdsdefaultparsingsynceventsdlq:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testknowledgebasetestdsdefaultparsingsynceventsdlq:name",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "QueueName",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testknowledgebasetestdsdefaultparsingsynceventsdlq:url",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testknowledgebasetestdsdefaultparsingsyncdlq:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testknowledgebasetestdsdefaultparsingsyncdlq:name",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "QueueName",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:queue:testknowledgebasetestdsdefaultparsingsyncdlq:url",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:lambda:testknowledgebasetestdsdefaultparsingsync:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:lambda:testknowledgebasetestdsdefaultparsingsync:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:security-group:testvectorstore:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:kms:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:kms:id",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:lambda:rdsdatahandler:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-bedrock-builder-app:lambda:rdsdatahandler:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
    },
    "Parameters": {
      "BootstrapVersion": {
        "Default": "/cdk-bootstrap/hnb659fds/version",
        "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/test-org/test-domain/caef-bootstrap/role-helper-service-token",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuetestorgtestdomaingeneratedroleagentexecutionroleidC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/test-org/test-domain/generated-role/agent-execution-role/id",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuetestorgtestdomaingeneratedrolekbexecutionroleidC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/test-org/test-domain/generated-role/kb-execution-role/id",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
    },
    "Resources": {
      "RoleResDataAdmin0": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "name": "Admin",
            "refId": "DataAdmin-0",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResagentexecutionrole": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "id": {
              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroleagentexecutionroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
            "refId": "agent-execution-role",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleReskbexecutionrole": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "id": {
              "Ref": "SsmParameterValuetestorgtestdomaingeneratedrolekbexecutionroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
            "refId": "kb-execution-role",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "Stack description parameter to update on version changes",
          "Name": "/test-org/test-domain/test-bedrock-builder-app/aws-solution",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "(SO0320-bedrock-builder) Modern Data Architecture Accelerator. Version 1.0.0",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Action": "lambda:InvokeFunction",
          "FunctionName": {
            "Fn::Join": [
              "",
              [
                "arn:aws:lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":function:existing-lambda-function",
              ],
            ],
          },
          "Principal": "bedrock.amazonaws.com",
          "SourceArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "AgentArn",
            ],
          },
        },
        "Type": "AWS::Lambda::Permission",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-bedrock-builder-app--5c3ccb2d",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:ReEncryptFrom",
                  "kms:ReEncryptTo",
                  "kms:GenerateDataKey",
                  "kms:GenerateDataKeyWithoutPlaintext",
                  "kms:GenerateDataKeyPair",
                  "kms:GenerateDataKeyPairWithoutPlaintext",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
              {
                "Action": [
                  "bedrock:InvokeModel",
                  "bedrock:InvokeModelWithResponseStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":bedrock:",
                      {
                        "Ref": "AWS::Region",
                      },
                      "::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0",
                    ],
                  ],
                },
                "Sid": "InvokeFoundationModel",
              },
              {
                "Action": "bedrock:ApplyGuardrail",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:bedrock:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":guardrail/arn:aws:bedrock:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":guardrail/test-guardrailß",
                    ],
                  ],
                },
                "Sid": "AllowApplyBedrockGuardrail",
              },
              {
                "Action": "bedrock:Retrieve",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":bedrock:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":knowledge-base/<kb-id>",
                    ],
                  ],
                },
                "Sid": "AllowBedrockKnowledgeBase",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResagentexecutionrole",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/managed-policy/agent-test-agent/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/managed-policy/agent-test-agent/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "ActionGroups": [
            {
              "ActionGroupExecutor": {
                "Lambda": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:lambda:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":function:existing-lambda-function",
                    ],
                  ],
                },
              },
              "ActionGroupName": "test-action-group",
              "ApiSchema": {
                "Payload": "openapi: 3.0.0
info:
  title: Insurance Claims Automation API
  version: 1.0.0
  description: APIs for managing insurance claims by pulling list of open claims,
    identifying outstanding paperwork for each claim, identifying all claim
    details, and sending reminders to policy holders.
paths:
  /open-items:
    get:
      summary: Gets the list of all open insurance claims
      description: Gets the list of all open insurance claims. Returns all claimIds
        that are open.
      operationId: getAllOpenClaims
      responses:
        "200":
          description: Gets the list of all open insurance claims for policy holders
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    claimId:
                      type: string
                      description: Unique ID of the claim.
                    policyHolderId:
                      type: string
                      description: Unique ID of the policy holder who has filed the claim.
                    claimStatus:
                      type: string
                      description: The status of the claim. Claim can be in Open or Closed state.
",
              },
              "Description": "This is a Test Action Group",
            },
          ],
          "AgentName": "test-org-test-env-test-domain-test-bedrock-builder-app-test-agent",
          "AgentResourceRoleArn": {
            "Fn::GetAtt": [
              "RoleResagentexecutionrole",
              "arn",
            ],
          },
          "AutoPrepare": true,
          "CustomerEncryptionKeyArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Description": "This is a Test Agent",
          "FoundationModel": "anthropic.claude-3-sonnet-20240229-v1:0",
          "GuardrailConfiguration": {
            "GuardrailIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:bedrock:",
                  {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":guardrail/test-guardrailß",
                ],
              ],
            },
            "GuardrailVersion": "1",
          },
          "IdleSessionTTLInSeconds": 400,
          "Instruction": "You are a helpful assistant
You are allowed to use associated Knowledge Base to answer questions
Provide responses in markdown format with source citations
",
          "KnowledgeBases": [
            {
              "Description": "This is a Test Knowledge Base",
              "KnowledgeBaseId": "<kb-id>",
            },
          ],
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
        },
        "Type": "AWS::Bedrock::Agent",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AgentAliasName": "test-alias",
          "AgentId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "AgentId",
            ],
          },
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
        },
        "Type": "AWS::Bedrock::AgentAlias",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "KmsMasterKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "QueueName": "test-org-test-env-test-domain-test-bedrock-builder-app-test-action-group-dlq",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::SQS::Queue",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "sqs:*",
                "Condition": {
                  "Bool": {
                    "aws:SecureTransport": "false",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "EnforceSSL",
              },
              {
                "Action": "sqs:SendMessage",
                "Effect": "Allow",
                "Principal": {
                  "AWS": "arn:test-partition:iam::test-acct:role/test-lambda-role",
                },
                "Resource": "*",
                "Sid": "SendMessage",
              },
            ],
            "Version": "2012-10-17",
          },
          "Queues": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::SQS::QueuePolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-action-group-dlq/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-action-group-dlq/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "QueueName",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-action-group-dlq/url",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "KmsMasterKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "QueueName": "test-org-test-env-test-domain-test-bedrock-builder-app-test-custom-router1-dlq",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::SQS::Queue",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "sqs:*",
                "Condition": {
                  "Bool": {
                    "aws:SecureTransport": "false",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "EnforceSSL",
              },
              {
                "Action": "sqs:SendMessage",
                "Effect": "Allow",
                "Principal": {
                  "AWS": "arn:test-partition:iam::test-acct:role/test-lambda-role",
                },
                "Resource": "*",
                "Sid": "SendMessage",
              },
            ],
            "Version": "2012-10-17",
          },
          "Queues": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::SQS::QueuePolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-custom-router1-dlq/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-custom-router1-dlq/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "QueueName",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-custom-router1-dlq/url",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "KmsMasterKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "QueueName": "test-org-test-env-test-domain-test-bedrock-builder-app-test-custom-router2-dlq",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::SQS::Queue",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "sqs:*",
                "Condition": {
                  "Bool": {
                    "aws:SecureTransport": "false",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "EnforceSSL",
              },
              {
                "Action": "sqs:SendMessage",
                "Effect": "Allow",
                "Principal": {
                  "AWS": "arn:test-partition:iam::test-acct:role/test-lambda-role",
                },
                "Resource": "*",
                "Sid": "SendMessage",
              },
            ],
            "Version": "2012-10-17",
          },
          "Queues": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::SQS::QueuePolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-custom-router2-dlq/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-custom-router2-dlq/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "QueueName",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-custom-router2-dlq/url",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "KmsMasterKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "QueueName": "test-org-test-env-test-domain-test-bedrock-builder-app-test-custom-trans-c728b39",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::SQS::Queue",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "sqs:*",
                "Condition": {
                  "Bool": {
                    "aws:SecureTransport": "false",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "EnforceSSL",
              },
              {
                "Action": "sqs:SendMessage",
                "Effect": "Allow",
                "Principal": {
                  "AWS": "arn:test-partition:iam::test-acct:role/test-lambda-role",
                },
                "Resource": "*",
                "Sid": "SendMessage",
              },
            ],
            "Version": "2012-10-17",
          },
          "Queues": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::SQS::QueuePolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-custom-transformer-dlq/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-custom-transformer-dlq/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "QueueName",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-custom-transformer-dlq/url",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Content": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Description": "test layer",
          "LayerName": "test-org-test-env-test-domain-test-bedrock-builder-app--2548460f",
        },
        "Type": "AWS::Lambda::LayerVersion",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "DeadLetterConfig": {
            "TargetArn": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
          "Description": "This is lambda function for Bedrock Agent Action group: test-agent/test-action-group",
          "Environment": {
            "Variables": {
              "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-bedrock-builder-app--4b6fd078",
          "Handler": "test.lambda_handler",
          "KmsKeyArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Role": "arn:test-partition:iam::test-acct:role/test-lambda-role",
          "Runtime": "python3.13",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/lambda/test-action-group/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/lambda/test-action-group/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "DeadLetterConfig": {
            "TargetArn": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
          "Description": "For custom chat routing logic",
          "Environment": {
            "Variables": {
              "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-bedrock-builder-app--652c0f0c",
          "Handler": "test.lambda_handler",
          "KmsKeyArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Role": "arn:test-partition:iam::test-acct:role/test-lambda-role",
          "Runtime": "python3.13",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Action": "lambda:InvokeFunction",
          "FunctionName": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Principal": arn:aws:iam::REPLACED-ACCOUNT-ID:role/role-in-another-account,
        },
        "Type": "AWS::Lambda::Permission",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/lambda/test-custom-router1/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/lambda/test-custom-router1/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "DeadLetterConfig": {
            "TargetArn": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
          "Description": "For custom chat routing logic",
          "Environment": {
            "Variables": {
              "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-bedrock-builder-app--652c0f0d",
          "Handler": "test.lambda_handler",
          "KmsKeyArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Role": "arn:test-partition:iam::test-acct:role/test-lambda-role",
          "Runtime": "python3.13",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Action": "lambda:InvokeFunction",
          "FunctionName": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Principal": arn:aws:iam::REPLACED-ACCOUNT-ID:role/role-in-another-account,
        },
        "Type": "AWS::Lambda::Permission",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Action": "lambda:InvokeFunction",
          "FunctionName": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Principal": arn:aws:iam::REPLACED-ACCOUNT-ID:role/role-in-another-account,
        },
        "Type": "AWS::Lambda::Permission",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Action": "lambda:InvokeFunction",
          "FunctionName": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Principal": arn:aws:iam::REPLACED-ACCOUNT-ID:role/role-in-another-account,
        },
        "Type": "AWS::Lambda::Permission",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/lambda/test-custom-router2/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/lambda/test-custom-router2/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "DeadLetterConfig": {
            "TargetArn": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
          "Description": "For custom parsing and chunking logic",
          "Environment": {
            "Variables": {
              "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-bedrock-builder-app--670817e3",
          "Handler": "test.lambda_handler",
          "KmsKeyArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Role": "arn:test-partition:iam::test-acct:role/test-lambda-role",
          "Runtime": "python3.13",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/lambda/test-custom-transformer/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/lambda/test-custom-transformer/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "BlockedInputMessaging": "Your input contains restricted content",
          "BlockedOutputsMessaging": "Response blocked due to policy restrictions",
          "ContentPolicyConfig": {
            "FiltersConfig": [
              {
                "InputStrength": "MEDIUM",
                "OutputStrength": "MEDIUM",
                "Type": "HATE",
              },
            ],
          },
          "ContextualGroundingPolicyConfig": {
            "FiltersConfig": [
              {
                "Threshold": 0.95,
                "Type": "GROUNDING",
              },
              {
                "Threshold": 0.9,
                "Type": "RELEVANCE",
              },
            ],
          },
          "Description": "Enterprise content safety guardrail",
          "KmsKeyArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Name": "REPLACED-S3-BUCKET-NAME",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::Bedrock::Guardrail",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "applies_to": [
                  "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
                ],
                "id": "AwsSolutions-IAM4",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/aurora-pgvector.ts:LINE:COL] Managed policy used by RDS for monitoring and is least privileged.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "monitoring.rds.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
                ],
              ],
            },
          ],
          "RoleName": "test-org-test-env-test-domain-test-bedrock-builder-app--7f8af6c5",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "applies_to": [
                  "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
                ],
                "id": "AwsSolutions-IAM4",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/aurora-pgvector.ts:LINE:COL] Managed policy used by RDS for monitoring and is least privileged.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/role/monitoring-role-test-vector-store/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "applies_to": [
                  "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
                ],
                "id": "AwsSolutions-IAM4",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/aurora-pgvector.ts:LINE:COL] Managed policy used by RDS for monitoring and is least privileged.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/role/monitoring-role-test-vector-store/id",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "applies_to": [
                  "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
                ],
                "id": "AwsSolutions-IAM4",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/aurora-pgvector.ts:LINE:COL] Managed policy used by RDS for monitoring and is least privileged.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/role/monitoring-role-test-vector-store/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-bedrock-builder-app--66f818e8",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "bedrock:InvokeModel",
                  "bedrock:InvokeModelWithResponseStream",
                ],
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:bedrock::aws:foundation-model/amazon.titan-embed-text-v1",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":bedrock:",
                        {
                          "Ref": "AWS::Region",
                        },
                        "::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0",
                      ],
                    ],
                  },
                ],
                "Sid": "InvokeFoundationModels",
              },
              {
                "Action": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:ReEncryptFrom",
                  "kms:ReEncryptTo",
                  "kms:GenerateDataKey",
                  "kms:GenerateDataKeyWithoutPlaintext",
                  "kms:GenerateDataKeyPair",
                  "kms:GenerateDataKeyPairWithoutPlaintext",
                  "kms:DescribeKey",
                  "kms:CreateGrant",
                ],
                "Condition": {
                  "StringLike": {
                    "kms:ViaService": {
                      "Fn::Join": [
                        "",
                        [
                          "bedrock.",
                          {
                            "Ref": "AWS::Region",
                          },
                          ".amazonaws.com",
                        ],
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "Sid": "BedrockKms",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleReskbexecutionrole",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/managed-policy/kb-foundation-model-test-knowledge-base/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/managed-policy/kb-foundation-model-test-knowledge-base/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-bedrock-builder-app--5dd4eb7c",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "secretsmanager:GetSecretValue",
                  "secretsmanager:DescribeSecret",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Ref": "REPLACED-CFN-LOGICAL-ID",
                },
                "Sid": "DBSecretAccess",
              },
              {
                "Action": [
                  "rds-data:ExecuteStatement",
                  "rds-data:BatchExecuteStatement",
                  "rds:DescribeDBClusters",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":rds:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":cluster:",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  ],
                },
                "Sid": "DBQuery",
              },
              {
                "Action": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:ReEncryptFrom",
                  "kms:ReEncryptTo",
                  "kms:GenerateDataKey",
                  "kms:GenerateDataKeyWithoutPlaintext",
                  "kms:GenerateDataKeyPair",
                  "kms:GenerateDataKeyPairWithoutPlaintext",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "Sid": "KMSUsage",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleReskbexecutionrole",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/managed-policy/kb-access-test-vector-store/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/managed-policy/kb-access-test-vector-store/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/bedrock-knowledge-base-l3-construct/lib/bedrock-knowledge-base-l3-construct.ts:LINE:COL] Permissions scoped to datasources restricted to specific Knowledgebase for sync acitvity",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-bedrock-builder-app--67724132",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "bedrock:StartIngestionJob",
                  "bedrock:GetIngestionJob",
                  "bedrock:ListIngestionJobs",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":bedrock:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":knowledge-base/",
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "KnowledgeBaseId",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "DataSourceSync",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleReskbexecutionrole",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/bedrock-knowledge-base-l3-construct/lib/bedrock-knowledge-base-l3-construct.ts:LINE:COL] Permissions scoped to datasources restricted to specific Knowledgebase for sync acitvity",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/managed-policy/kb-datasync-test-knowledge-base/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/bedrock-knowledge-base-l3-construct/lib/bedrock-knowledge-base-l3-construct.ts:LINE:COL] Permissions scoped to datasources restricted to specific Knowledgebase for sync acitvity",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/managed-policy/kb-datasync-test-knowledge-base/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "cluster_arn": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":rds:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":cluster:",
                {
                  "Ref": "REPLACED-CFN-LOGICAL-ID",
                },
              ],
            ],
          },
          "on_create_sql_statements": [
            "CREATE DATABASE test_knowledge_base",
          ],
          "secret_arn": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "Custom::RDS-Data",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "cluster_arn": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":rds:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":cluster:",
                {
                  "Ref": "REPLACED-CFN-LOGICAL-ID",
                },
              ],
            ],
          },
          "database_name": "test_knowledge_base",
          "on_create_sql_statements": [
            "CREATE EXTENSION IF NOT EXISTS vector",
            "
      CREATE TABLE IF NOT EXISTS embeddings_3f4c89b3_1536
      (
        id UUID PRIMARY KEY,
      content TEXT NOT NULL,
      metadata JSON,
      custom_metadata JSONB,
      embedding VECTOR(1536)
      );
    ",
            "CREATE INDEX IF NOT EXISTS idx_embedding_vector ON embeddings_3f4c89b3_1536 USING hnsw (embedding vector_cosine_ops) WITH (ef_construction=256);",
            "CREATE INDEX IF NOT EXISTS idx_content ON embeddings_3f4c89b3_1536 USING gin (to_tsvector('simple', content))",
            "CREATE INDEX IF NOT EXISTS idx_custom_metadata ON embeddings_3f4c89b3_1536 USING gin (custom_metadata);",
          ],
          "secret_arn": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "Custom::RDS-Data",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "DeliveryDestinationArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "DeliverySourceName": "test-org-test-env-test-domain-test-bedrock-builder-a-5d9ae20",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::Logs::Delivery",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "DestinationResourceArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Name": "test-org-test-env-test-domain-test-bedrock-builder-a-5d9ae20",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::Logs::DeliveryDestination",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-CloudWatchLogGroupRetentionPeriod",
                "reason": "[MDAA:@aws-mdaa/cloudwatch-constructs/lib/loggroup.ts:LINE:COL] LogGroup retention is set to RetentionDays.INFINITE.",
              },
              {
                "id": "HIPAA.Security-CloudWatchLogGroupRetentionPeriod",
                "reason": "[MDAA:@aws-mdaa/cloudwatch-constructs/lib/loggroup.ts:LINE:COL] LogGroup retention is set to RetentionDays.INFINITE.",
              },
              {
                "id": "PCI.DSS.321-CloudWatchLogGroupRetentionPeriod",
                "reason": "[MDAA:@aws-mdaa/cloudwatch-constructs/lib/loggroup.ts:LINE:COL] LogGroup retention is set to RetentionDays.INFINITE.",
              },
            ],
          },
        },
        "Properties": {
          "KmsKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "LogGroupName": "/aws/vendedlogs/bedrock/knowledge-base/test-org-test-env-test-domain-test-bedrock-builder-app-test-knowledge-base",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::Logs::LogGroup",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/loggroup/test-knowledge-base/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "/aws/vendedlogs/bedrock/knowledge-base/test-org-test-env-test-domain-test-bedrock-builder-app-test-knowledge-base",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "LogType": "APPLICATION_LOGS",
          "Name": "test-org-test-env-test-domain-test-bedrock-builder-a-5d9ae20",
          "ResourceArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "KnowledgeBaseArn",
            ],
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::Logs::DeliverySource",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/knowledgebase/test-knowledge-base/id",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "KnowledgeBaseId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "applies_to": [
                  "LogExport::postgresql",
                ],
                "id": "AwsSolutions-RDS16",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Remediated through property override. Log export for postgresql is enabled.",
              },
              {
                "applies_to": [
                  "LogExport::postgresql",
                ],
                "id": "NIST.800.53.R5-RDSLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Remediated through property override. Log export for postgresql is enabled.",
              },
              {
                "applies_to": [
                  "LogExport::postgresql",
                ],
                "id": "HIPAA.Security-RDSLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Remediated through property override. Log export for postgresql is enabled.",
              },
              {
                "applies_to": [
                  "LogExport::postgresql",
                ],
                "id": "PCI.DSS.321-RDSLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Remediated through property override. Log export for postgresql is enabled.",
              },
              {
                "id": "AwsSolutions-RDS6",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Remediated through property override.",
              },
              {
                "id": "AwsSolutions-RDS11",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Remediated through property override.",
              },
              {
                "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "PCI.DSS.321-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "HIPAA.Security-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "PCI.DSS.321-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
            ],
          },
        },
        "Properties": {
          "BackupRetentionPeriod": 20,
          "CopyTagsToSnapshot": true,
          "DBClusterIdentifier": "REPLACED-S3-BUCKET-NAME",
          "DBClusterParameterGroupName": "default.aurora-postgresql16",
          "DBSubnetGroupName": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "DeletionProtection": true,
          "EnableCloudwatchLogsExports": [
            "postgresql",
          ],
          "EnableHttpEndpoint": true,
          "EnableIAMDatabaseAuthentication": true,
          "Engine": "aurora-postgresql",
          "EngineVersion": "16.6",
          "KmsKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "MasterUserPassword": {
            "Fn::Join": [
              "",
              [
                "{{resolve:secretsmanager:",
                {
                  "Ref": "REPLACED-CFN-LOGICAL-ID",
                },
                ":SecretString:password::}}",
              ],
            ],
          },
          "MasterUsername": {
            "Fn::Join": [
              "",
              [
                "{{resolve:secretsmanager:",
                {
                  "Ref": "REPLACED-CFN-LOGICAL-ID",
                },
                ":SecretString:username::}}",
              ],
            ],
          },
          "Port": 15530,
          "ServerlessV2ScalingConfiguration": {
            "MaxCapacity": 8,
            "MinCapacity": 1,
          },
          "StorageEncrypted": true,
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "VpcSecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "GroupId",
              ],
            },
          ],
        },
        "Type": "AWS::RDS::DBCluster",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "PCI.DSS.321-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "HIPAA.Security-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "PCI.DSS.321-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
            ],
          },
        },
        "Properties": {
          "Location": {
            "ApplicationId": {
              "Fn::FindInMap": [
                "REPLACED-CFN-LOGICAL-ID",
                {
                  "Ref": "AWS::Partition",
                },
                "applicationId",
              ],
            },
            "SemanticVersion": {
              "Fn::FindInMap": [
                "REPLACED-CFN-LOGICAL-ID",
                {
                  "Ref": "AWS::Partition",
                },
                "semanticVersion",
              ],
            },
          },
          "Parameters": {
            "endpoint": {
              "Fn::Join": [
                "",
                [
                  "https://secretsmanager.",
                  {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix",
                  },
                ],
              ],
            },
            "excludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
            "functionName": "REPLACED-CFN-LOGICAL-ID",
            "kmsKeyArn": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
            "vpcSecurityGroupIds": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "GroupId",
              ],
            },
            "vpcSubnetIds": "test-subnet-id1,test-subnet-id2",
          },
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
        },
        "Type": "AWS::Serverless::Application",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "PCI.DSS.321-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "HIPAA.Security-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "PCI.DSS.321-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
            ],
          },
        },
        "Properties": {
          "GroupDescription": "test-org-test-env-test-domain-test-bedrock-builder-app/bedrock-builder/bedrock-kb-test-knowledge-base/pgvector-test-vector-store/RotationSingleUser/SecurityGroup",
          "SecurityGroupEgress": [
            {
              "CidrIp": "0.0.0.0/0",
              "Description": "Allow all outbound traffic by default",
              "IpProtocol": "-1",
            },
          ],
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "VpcId": "test-vpc-id",
        },
        "Type": "AWS::EC2::SecurityGroup",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "PCI.DSS.321-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "HIPAA.Security-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "PCI.DSS.321-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
            ],
          },
        },
        "Properties": {
          "Description": {
            "Fn::Join": [
              "",
              [
                "Generated by the CDK for stack: ",
                {
                  "Ref": "AWS::StackName",
                },
              ],
            ],
          },
          "GenerateSecretString": {
            "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
            "GenerateStringKey": "password",
            "PasswordLength": 30,
            "SecretStringTemplate": "{"username":"postgres"}",
          },
          "KmsKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::SecretsManager::Secret",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "PCI.DSS.321-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "HIPAA.Security-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "PCI.DSS.321-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
            ],
          },
        },
        "Properties": {
          "SecretId": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "TargetId": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "TargetType": "AWS::RDS::DBCluster",
        },
        "Type": "AWS::SecretsManager::SecretTargetAttachment",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "PCI.DSS.321-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "HIPAA.Security-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "PCI.DSS.321-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
            ],
          },
        },
        "Properties": {
          "ResourcePolicy": {
            "Statement": [
              {
                "Action": "secretsmanager:DeleteSecret",
                "Effect": "Deny",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
                "Resource": "*",
              },
            ],
            "Version": "2012-10-17",
          },
          "SecretId": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SecretsManager::ResourcePolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "PCI.DSS.321-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "HIPAA.Security-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "PCI.DSS.321-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
            ],
          },
        },
        "Properties": {
          "RotationLambdaARN": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Outputs.RotationLambdaARN",
            ],
          },
          "RotationRules": {
            "ScheduleExpression": "rate(60 days)",
          },
          "SecretId": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SecretsManager::RotationSchedule",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "PCI.DSS.321-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "HIPAA.Security-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "PCI.DSS.321-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
            ],
          },
        },
        "Properties": {
          "DBSubnetGroupDescription": "Subnets for pgvector-test-vector-store database",
          "SubnetIds": [
            "test-subnet-id1",
            "test-subnet-id2",
          ],
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::RDS::DBSubnetGroup",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "PCI.DSS.321-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "HIPAA.Security-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "PCI.DSS.321-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
            ],
          },
        },
        "Properties": {
          "DBClusterIdentifier": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "DBInstanceClass": "db.serverless",
          "Engine": "aurora-postgresql",
          "MonitoringInterval": 60,
          "MonitoringRoleArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "PromotionTier": 2,
          "PubliclyAccessible": false,
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::RDS::DBInstance",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
              },
              {
                "id": "HIPAA.Security-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "PCI.DSS.321-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInstancePublicAccess",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
              },
              {
                "id": "NIST.800.53.R5-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "HIPAA.Security-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
              {
                "id": "PCI.DSS.321-RDSInBackupPlan",
                "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
              },
            ],
          },
        },
        "Properties": {
          "DBClusterIdentifier": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "DBInstanceClass": "db.serverless",
          "Engine": "aurora-postgresql",
          "MonitoringInterval": 60,
          "MonitoringRoleArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "PromotionTier": 0,
          "PubliclyAccessible": false,
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::RDS::DBInstance",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "DataSourceConfiguration": {
            "S3Configuration": {
              "BucketArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::customer-docs-bucket",
                  ],
                ],
              },
              "InclusionPrefixes": [
                "support-documents-2/",
              ],
            },
            "Type": "S3",
          },
          "KnowledgeBaseId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "KnowledgeBaseId",
            ],
          },
          "Name": "test-ds-bda-parsing",
          "ServerSideEncryptionConfiguration": {
            "KmsKeyArn": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
          "VectorIngestionConfiguration": {
            "ChunkingConfiguration": {
              "ChunkingStrategy": "FIXED_SIZE",
              "FixedSizeChunkingConfiguration": {
                "MaxTokens": 512,
                "OverlapPercentage": 20,
              },
            },
            "ParsingConfiguration": {
              "BedrockDataAutomationConfiguration": {
                "ParsingModality": "MULTIMODAL",
              },
              "ParsingStrategy": "BEDROCK_DATA_AUTOMATION",
            },
          },
        },
        "Type": "AWS::Bedrock::DataSource",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "DataSourceConfiguration": {
            "S3Configuration": {
              "BucketArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::customer-docs-bucket",
                  ],
                ],
              },
              "InclusionPrefixes": [
                "support-documents-4/",
              ],
            },
            "Type": "S3",
          },
          "KnowledgeBaseId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "KnowledgeBaseId",
            ],
          },
          "Name": "test-ds-custom-parsing",
          "ServerSideEncryptionConfiguration": {
            "KmsKeyArn": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
          "VectorIngestionConfiguration": {
            "ChunkingConfiguration": {
              "ChunkingStrategy": "NONE",
            },
            "CustomTransformationConfiguration": {
              "IntermediateStorage": {
                "S3Location": {
                  "URI": "s3://custom-transform-intermediate-bucket/path/to/data/objects/",
                },
              },
              "Transformations": [
                {
                  "StepToApply": "POST_CHUNKING",
                  "TransformationFunction": {
                    "TransformationLambdaConfiguration": {
                      "LambdaArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:lambda:",
                            {
                              "Ref": "AWS::Region",
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId",
                            },
                            ":function:test-custom-transformer",
                          ],
                        ],
                      },
                    },
                  },
                },
                {
                  "StepToApply": "POST_CHUNKING",
                  "TransformationFunction": {
                    "TransformationLambdaConfiguration": {
                      "LambdaArn": {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                    },
                  },
                },
              ],
            },
            "ParsingConfiguration": {
              "BedrockDataAutomationConfiguration": {
                "ParsingModality": "MULTIMODAL",
              },
              "ParsingStrategy": "BEDROCK_DATA_AUTOMATION",
            },
          },
        },
        "Type": "AWS::Bedrock::DataSource",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "DataSourceConfiguration": {
            "S3Configuration": {
              "BucketArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::customer-docs-bucket",
                  ],
                ],
              },
              "InclusionPrefixes": [
                "support-documents/",
              ],
            },
            "Type": "S3",
          },
          "KnowledgeBaseId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "KnowledgeBaseId",
            ],
          },
          "Name": "test-ds-default-parsing",
          "ServerSideEncryptionConfiguration": {
            "KmsKeyArn": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
        },
        "Type": "AWS::Bedrock::DataSource",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "DataSourceConfiguration": {
            "S3Configuration": {
              "BucketArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::customer-docs-bucket",
                  ],
                ],
              },
              "InclusionPrefixes": [
                "support-documents-3/",
              ],
            },
            "Type": "S3",
          },
          "KnowledgeBaseId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "KnowledgeBaseId",
            ],
          },
          "Name": "test-ds-foundation-model-parsing",
          "ServerSideEncryptionConfiguration": {
            "KmsKeyArn": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
          "VectorIngestionConfiguration": {
            "ParsingConfiguration": {
              "BedrockFoundationModelConfiguration": {
                "ModelArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":bedrock:",
                      {
                        "Ref": "AWS::Region",
                      },
                      "::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0",
                    ],
                  ],
                },
                "ParsingModality": "MULTIMODAL",
                "ParsingPrompt": {
                  "ParsingPromptText": "Extract key information from this document",
                },
              },
              "ParsingStrategy": "BEDROCK_FOUNDATION_MODEL",
            },
          },
        },
        "Type": "AWS::Bedrock::DataSource",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "KnowledgeBaseConfiguration": {
            "Type": "VECTOR",
            "VectorKnowledgeBaseConfiguration": {
              "EmbeddingModelArn": "arn:aws:bedrock::aws:foundation-model/amazon.titan-embed-text-v1",
              "SupplementalDataStorageConfiguration": {
                "SupplementalDataStorageLocations": [
                  {
                    "S3Location": {
                      "URI": "s3://supplemental-image-storage-bucket",
                    },
                    "SupplementalDataStorageLocationType": "S3",
                  },
                ],
              },
            },
          },
          "Name": "test-org-test-env-test-domain-test-bedrock-builder-app-test-knowledge-base",
          "RoleArn": {
            "Fn::GetAtt": [
              "RoleReskbexecutionrole",
              "arn",
            ],
          },
          "StorageConfiguration": {
            "RdsConfiguration": {
              "CredentialsSecretArn": {
                "Ref": "REPLACED-CFN-LOGICAL-ID",
              },
              "DatabaseName": "test_knowledge_base",
              "FieldMapping": {
                "CustomMetadataField": "custom_metadata",
                "MetadataField": "metadata",
                "PrimaryKeyField": "id",
                "TextField": "content",
                "VectorField": "embedding",
              },
              "ResourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":cluster:",
                    {
                      "Ref": "REPLACED-CFN-LOGICAL-ID",
                    },
                  ],
                ],
              },
              "TableName": "embeddings_3f4c89b3_1536",
            },
            "Type": "RDS",
          },
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
        },
        "Type": "AWS::Bedrock::KnowledgeBase",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "KmsMasterKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "QueueName": "test-org-test-env-test-domain-test-bedrock-builder-app-test-knowledge-b-4c324a10",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::SQS::Queue",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "sqs:*",
                "Condition": {
                  "Bool": {
                    "aws:SecureTransport": "false",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "EnforceSSL",
              },
              {
                "Action": "sqs:SendMessage",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::GetAtt": [
                      "RoleReskbexecutionrole",
                      "arn",
                    ],
                  },
                },
                "Resource": "*",
                "Sid": "SendMessage",
              },
            ],
            "Version": "2012-10-17",
          },
          "Queues": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::SQS::QueuePolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "KmsMasterKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "QueueName": "test-org-test-env-test-domain-test-bedrock-builder-app-test-knowledge-b--bb4e8d2",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::SQS::Queue",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "sqs:*",
                "Condition": {
                  "Bool": {
                    "aws:SecureTransport": "false",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "EnforceSSL",
              },
              {
                "Action": "sqs:SendMessage",
                "Condition": {
                  "ArnEquals": {
                    "aws:SourceArn": {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "Service": "events.amazonaws.com",
                },
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "Sid": "REPLACED-CFN-LOGICAL-ID",
              },
            ],
            "Version": "2012-10-17",
          },
          "Queues": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::SQS::QueuePolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-knowledge-base-test-ds-default-parsing-sync-events-dlq/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-knowledge-base-test-ds-default-parsing-sync-events-dlq/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "QueueName",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-knowledge-base-test-ds-default-parsing-sync-events-dlq/url",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-knowledge-base-test-ds-default-parsing-sync-dlq/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-knowledge-base-test-ds-default-parsing-sync-dlq/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "QueueName",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SQS3",
                "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/queue/test-knowledge-base-test-ds-default-parsing-sync-dlq/url",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Action": "lambda:InvokeFunction",
          "FunctionName": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Principal": "events.amazonaws.com",
          "SourceArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::Lambda::Permission",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "Event Rule for triggering test-knowledge-base-test-ds-default-parsing-sync-test-knowledge-base-test-ds-default-parsing-sync-rule with S3 events",
          "EventPattern": {
            "detail": {
              "bucket": {
                "name": [
                  "customer-docs-bucket",
                ],
              },
              "object": {
                "key": [
                  {
                    "prefix": "support-documents/",
                  },
                ],
              },
            },
            "detail-type": [
              "Object Created",
            ],
            "source": [
              "aws.s3",
            ],
          },
          "Name": "test-org-test-env-test-domain-test-bedrock-builder-app--3a1d76b5",
          "State": "ENABLED",
          "Targets": [
            {
              "Arn": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
              "DeadLetterConfig": {
                "Arn": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
              "Id": "Target0",
              "RetryPolicy": {
                "MaximumEventAgeInSeconds": 3600,
                "MaximumRetryAttempts": 3,
              },
            },
          ],
        },
        "Type": "AWS::Events::Rule",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "DeadLetterConfig": {
            "TargetArn": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
          "Description": "Auto-sync data source test-ds-default-parsing for knowledge base test-knowledge-base",
          "Environment": {
            "Variables": {
              "DATA_SOURCE_ID": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "DataSourceId",
                ],
              },
              "KNOWLEDGE_BASE_ID": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "KnowledgeBaseId",
                ],
              },
              "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-bedrock-builder-app--56e1558c",
          "Handler": "datasource_sync.lambda_handler",
          "KmsKeyArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Role": {
            "Fn::GetAtt": [
              "RoleReskbexecutionrole",
              "arn",
            ],
          },
          "Runtime": "python3.13",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 300,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/lambda/test-knowledge-base-test-ds-default-parsing-sync/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/lambda/test-knowledge-base-test-ds-default-parsing-sync/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "GroupDescription": "test-org-test-env-test-domain-test-bedrock-builder-app/bedrock-builder/bedrock-kb-test-knowledge-base/test-vector-store-vector-store-sg",
          "GroupName": "test-org-test-env-test-domain-test-bedrock-builder-app-test-vector-store",
          "SecurityGroupEgress": [
            {
              "CidrIp": "0.0.0.0/0",
              "Description": "Allow all outbound traffic by default",
              "IpProtocol": "-1",
            },
          ],
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "VpcId": "test-vpc-id",
        },
        "Type": "AWS::EC2::SecurityGroup",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "from testorgtestenvtestdomaintestbedrockbuilderappbedrockbuilderbedrockkbtestknowledgebasepgvectortestvectorstoreRotationSingleUserSecurityGroup2BCA2F62:{IndirectPort}",
          "FromPort": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Endpoint.Port",
            ],
          },
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "tcp",
          "SourceSecurityGroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "ToPort": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Endpoint.Port",
            ],
          },
        },
        "Type": "AWS::EC2::SecurityGroupIngress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
              {
                "id": "HIPAA.Security-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
              {
                "id": "PCI.DSS.321-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
            ],
          },
        },
        "Properties": {
          "Description": "Self-Ref",
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "-1",
          "SourceSecurityGroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
        },
        "Type": "AWS::EC2::SecurityGroupIngress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/security-group/test-vector-store/id",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Properties": {
          "EnableKeyRotation": true,
          "Enabled": true,
          "KeyPolicy": {
            "Statement": [
              {
                "Action": "kms:*",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
                "Resource": "*",
              },
              {
                "Action": [
                  "kms:Create*",
                  "kms:Describe*",
                  "kms:Enable*",
                  "kms:List*",
                  "kms:Put*",
                  "kms:Update*",
                  "kms:Revoke*",
                  "kms:Disable*",
                  "kms:Get*",
                  "kms:Delete*",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "kms:ScheduleKeyDeletion",
                  "kms:CancelKeyDeletion",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataAdmin0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "test-org-test-env-test-domain-test-bedrock-builder-app-usage-stmt",
              },
              {
                "Action": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:ReEncryptFrom",
                  "kms:ReEncryptTo",
                  "kms:GenerateDataKey",
                  "kms:GenerateDataKeyWithoutPlaintext",
                  "kms:GenerateDataKeyPair",
                  "kms:GenerateDataKeyPairWithoutPlaintext",
                ],
                "Condition": {
                  "ArnEquals": {
                    "kms:EncryptionContext:aws:logs:arn": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":log-group:*",
                        ],
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "Service": {
                    "Fn::Join": [
                      "",
                      [
                        "logs.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
                "Resource": "*",
                "Sid": "CloudWatchLogsEncryption",
              },
              {
                "Action": [
                  "kms:GenerateDataKey*",
                  "kms:Decrypt",
                  "kms:DescribeKey",
                ],
                "Effect": "Allow",
                "Principal": {
                  "Service": "bedrock.amazonaws.com",
                },
                "Resource": "*",
                "Sid": "AllowBedrockServiceForAgents",
              },
              {
                "Action": [
                  "kms:CreateGrant",
                  "kms:ListGrants",
                  "kms:RevokeGrant",
                ],
                "Condition": {
                  "Bool": {
                    "kms:GrantIsForAWSResource": "true",
                  },
                  "StringEquals": {
                    "aws:SourceAccount": {
                      "Ref": "AWS::AccountId",
                    },
                    "kms:ViaService": {
                      "Fn::Join": [
                        "",
                        [
                          "bedrock.",
                          {
                            "Ref": "AWS::Region",
                          },
                          ".amazonaws.com",
                        ],
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "Service": "bedrock.amazonaws.com",
                },
                "Resource": "*",
                "Sid": "AllowBedrockServiceToManageGrants",
              },
              {
                "Action": [
                  "kms:GenerateDataKey*",
                  "kms:Decrypt",
                  "kms:DescribeKey",
                ],
                "Condition": {
                  "StringLike": {
                    "kms:ViaService": {
                      "Fn::Join": [
                        "",
                        [
                          "bedrock.",
                          {
                            "Ref": "AWS::Region",
                          },
                          ".amazonaws.com",
                        ],
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": [
                    {
                      "Fn::GetAtt": [
                        "RoleResagentexecutionrole",
                        "arn",
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "RoleReskbexecutionrole",
                        "arn",
                      ],
                    },
                  ],
                },
                "Resource": "*",
                "Sid": "AllowExecutionRolesToUseKeyWithContext",
              },
              {
                "Action": [
                  "kms:CreateGrant",
                  "kms:DescribeKey",
                ],
                "Condition": {
                  "StringEquals": {
                    "aws:SourceAccount": {
                      "Ref": "AWS::AccountId",
                    },
                    "kms:GrantOperations": [
                      "Decrypt",
                      "GenerateDataKey*",
                      "DescribeKey",
                    ],
                  },
                  "StringLike": {
                    "kms:ViaService": {
                      "Fn::Join": [
                        "",
                        [
                          "bedrock.",
                          {
                            "Ref": "AWS::Region",
                          },
                          ".amazonaws.com",
                        ],
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": [
                    {
                      "Fn::GetAtt": [
                        "RoleResagentexecutionrole",
                        "arn",
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "RoleReskbexecutionrole",
                        "arn",
                      ],
                    },
                  ],
                },
                "Resource": "*",
                "Sid": "AllowCreateGrantForBedrockResources",
              },
              {
                "Action": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:ReEncrypt*",
                  "kms:GenerateDataKey*",
                ],
                "Condition": {
                  "StringEquals": {
                    "kms:ViaService": {
                      "Fn::Join": [
                        "",
                        [
                          "secretsmanager.",
                          {
                            "Ref": "AWS::Region",
                          },
                          ".amazonaws.com",
                        ],
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
                "Resource": "*",
              },
              {
                "Action": [
                  "kms:CreateGrant",
                  "kms:DescribeKey",
                ],
                "Condition": {
                  "StringEquals": {
                    "kms:ViaService": {
                      "Fn::Join": [
                        "",
                        [
                          "secretsmanager.",
                          {
                            "Ref": "AWS::Region",
                          },
                          ".amazonaws.com",
                        ],
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
                "Resource": "*",
              },
            ],
            "Version": "2012-10-17",
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::KMS::Key",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AliasName": "alias/test-org-test-env-test-domain-test-bedrock-builder-app",
          "TargetKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::KMS::Alias",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/kms/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/kms/id",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Environment": {
            "Variables": {
              "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-bedrock-builder-app---26c38b2",
          "Handler": "index.lambda_handler",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": "python3.13",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 660,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/lambda/rds-data-handler/arn",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-bedrock-builder-app/lambda/rds-data-handler/name",
          "Tags": {
            "mdaa_cdk_app": "bedrock-builder",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-bedrock-builder-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "rds-data:ExecuteStatement",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":rds:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":cluster:",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "RDS-Data-handler",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "ManagedPolicyArns": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
          "RoleName": "test-org-test-env-test-domain-test-bedrock-builder-app---26c38b2",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-bedrock-builder-app---26c38b2*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-bedrock-builder-app---26c38b2*",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-L1",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
              },
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-bedrock-builder-app/custom-RDS-Data-provider)",
          "Environment": {
            "Variables": {
              "USER_ON_EVENT_FUNCTION_ARN": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-bedrock-builder-app--79e9966d",
          "Handler": "framework.onEvent",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": {
            "Fn::FindInMap": [
              "LatestNodeRuntimeMap",
              {
                "Ref": "AWS::Region",
              },
              "value",
            ],
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 900,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Description": "CR Role",
          "RoleName": "test-org-test-env-test-domain-test-bedrock-builder-app--79e9966d",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "bedrock-builder",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-bedrock-builder-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-bedrock-builder-app--79e9966d*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-bedrock-builder-app--79e9966d*",
                    ],
                  ],
                },
              },
              {
                "Action": "lambda:InvokeFunction",
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        ":*",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": "lambda:GetFunction",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
    },
    "Rules": {
      "CheckBootstrapVersion": {
        "Assertions": [
          {
            "Assert": {
              "Fn::Not": [
                {
                  "Fn::Contains": [
                    [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                    ],
                    {
                      "Ref": "BootstrapVersion",
                    },
                  ],
                },
              ],
            },
            "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
          },
        ],
      },
    },
    "Transform": "AWS::Serverless-2016-10-31",
  },
}
`;

exports[`Bedrock Builder Snapshot Tests Bedrock Builder Stack Snapshot Test 1`] = `
{
  "Description": "(SO0320-bedrock-builder) Modern Data Architecture Accelerator. Version 1.0.0",
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs22.x",
      },
      "ap-east-1": {
        "value": "nodejs22.x",
      },
      "ap-east-2": {
        "value": "nodejs22.x",
      },
      "ap-northeast-1": {
        "value": "nodejs22.x",
      },
      "ap-northeast-2": {
        "value": "nodejs22.x",
      },
      "ap-northeast-3": {
        "value": "nodejs22.x",
      },
      "ap-south-1": {
        "value": "nodejs22.x",
      },
      "ap-south-2": {
        "value": "nodejs22.x",
      },
      "ap-southeast-1": {
        "value": "nodejs22.x",
      },
      "ap-southeast-2": {
        "value": "nodejs22.x",
      },
      "ap-southeast-3": {
        "value": "nodejs22.x",
      },
      "ap-southeast-4": {
        "value": "nodejs22.x",
      },
      "ap-southeast-5": {
        "value": "nodejs22.x",
      },
      "ap-southeast-7": {
        "value": "nodejs22.x",
      },
      "ca-central-1": {
        "value": "nodejs22.x",
      },
      "ca-west-1": {
        "value": "nodejs22.x",
      },
      "cn-north-1": {
        "value": "nodejs22.x",
      },
      "cn-northwest-1": {
        "value": "nodejs22.x",
      },
      "eu-central-1": {
        "value": "nodejs22.x",
      },
      "eu-central-2": {
        "value": "nodejs22.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs22.x",
      },
      "eu-south-1": {
        "value": "nodejs22.x",
      },
      "eu-south-2": {
        "value": "nodejs22.x",
      },
      "eu-west-1": {
        "value": "nodejs22.x",
      },
      "eu-west-2": {
        "value": "nodejs22.x",
      },
      "eu-west-3": {
        "value": "nodejs22.x",
      },
      "il-central-1": {
        "value": "nodejs22.x",
      },
      "me-central-1": {
        "value": "nodejs22.x",
      },
      "me-south-1": {
        "value": "nodejs22.x",
      },
      "mx-central-1": {
        "value": "nodejs22.x",
      },
      "sa-east-1": {
        "value": "nodejs22.x",
      },
      "us-east-1": {
        "value": "nodejs22.x",
      },
      "us-east-2": {
        "value": "nodejs22.x",
      },
      "us-gov-east-1": {
        "value": "nodejs22.x",
      },
      "us-gov-west-1": {
        "value": "nodejs22.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-isob-west-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs22.x",
      },
      "us-west-2": {
        "value": "nodejs22.x",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "aws": {
        "applicationId": arn:aws:serverlessrepo:us-east-1:REPLACED-ACCOUNT-ID:applications/SecretsManagerRDSPostgreSQLRotationSingleUser,
        "semanticVersion": "1.1.367",
      },
      "aws-cn": {
        "applicationId": arn:aws-cn:serverlessrepo:cn-north-1:REPLACED-ACCOUNT-ID:applications/SecretsManagerRDSPostgreSQLRotationSingleUser,
        "semanticVersion": "1.1.237",
      },
      "aws-us-gov": {
        "applicationId": arn:aws-us-gov:serverlessrepo:us-gov-west-1:REPLACED-ACCOUNT-ID:applications/SecretsManagerRDSPostgreSQLRotationSingleUser,
        "semanticVersion": "1.1.213",
      },
    },
  },
  "Outputs": {
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:managed-policy:agenttestagent:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:managed-policy:agenttestagent:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testactiongroupdlq:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testactiongroupdlq:name",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "QueueName",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testactiongroupdlq:url",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testcustomrouter1dlq:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testcustomrouter1dlq:name",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "QueueName",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testcustomrouter1dlq:url",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testcustomrouter2dlq:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testcustomrouter2dlq:name",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "QueueName",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testcustomrouter2dlq:url",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testcustomtransformerdlq:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testcustomtransformerdlq:name",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "QueueName",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testcustomtransformerdlq:url",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:lambda:testactiongroup:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:lambda:testactiongroup:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:lambda:testcustomrouter1:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:lambda:testcustomrouter1:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:lambda:testcustomrouter2:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:lambda:testcustomrouter2:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:lambda:testcustomtransformer:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:lambda:testcustomtransformer:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:role:monitoringroletestvectorstore:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:role:monitoringroletestvectorstore:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:role:monitoringroletestvectorstore:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:managed-policy:kbfoundationmodeltestknowledgebase:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:managed-policy:kbfoundationmodeltestknowledgebase:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:managed-policy:kbaccesstestvectorstore:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:managed-policy:kbaccesstestvectorstore:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:managed-policy:kbdatasynctestknowledgebase:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:managed-policy:kbdatasynctestknowledgebase:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:loggroup:testknowledgebase:name",
      },
      "Value": "/aws/vendedlogs/bedrock/knowledge-base/test-org-test-env-test-domain-test-bedrock-builder-main-test-knowledge-base",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:knowledgebase:testknowledgebase:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "KnowledgeBaseId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testknowledgebasetestdsdefaultparsingsynceventsdlq:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testknowledgebasetestdsdefaultparsingsynceventsdlq:name",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "QueueName",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testknowledgebasetestdsdefaultparsingsynceventsdlq:url",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testknowledgebasetestdsdefaultparsingsyncdlq:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testknowledgebasetestdsdefaultparsingsyncdlq:name",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "QueueName",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:queue:testknowledgebasetestdsdefaultparsingsyncdlq:url",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:lambda:testknowledgebasetestdsdefaultparsingsync:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:lambda:testknowledgebasetestdsdefaultparsingsync:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:security-group:testvectorstore:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "GroupId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:kms:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:kms:id",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:lambda:rdsdatahandler:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-bedrock-builder-main:lambda:rdsdatahandler:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/test-org/test-domain/caef-bootstrap/role-helper-service-token",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuetestorgtestdomaingeneratedroleagentexecutionroleidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/test-org/test-domain/generated-role/agent-execution-role/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuetestorgtestdomaingeneratedrolekbexecutionroleidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/test-org/test-domain/generated-role/kb-execution-role/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "RoleResDataAdmin0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "name": "Admin",
          "refId": "DataAdmin-0",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResagentexecutionrole": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "id": {
            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroleagentexecutionroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "refId": "agent-execution-role",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleReskbexecutionrole": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "id": {
            "Ref": "SsmParameterValuetestorgtestdomaingeneratedrolekbexecutionroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "refId": "kb-execution-role",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "Stack description parameter to update on version changes",
        "Name": "/test-org/test-domain/test-bedrock-builder-main/aws-solution",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "(SO0320-bedrock-builder) Modern Data Architecture Accelerator. Version 1.0.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "arn:aws:lambda:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":function:existing-lambda-function",
            ],
          ],
        },
        "Principal": "bedrock.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "AgentArn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-bedrock-builder-mai--105515e9",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "bedrock:InvokeModel",
                "bedrock:InvokeModelWithResponseStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":bedrock:",
                    {
                      "Ref": "AWS::Region",
                    },
                    "::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0",
                  ],
                ],
              },
              "Sid": "InvokeFoundationModel",
            },
            {
              "Action": "bedrock:ApplyGuardrail",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:bedrock:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":guardrail/arn:aws:bedrock:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":guardrail/test-guardrailß",
                  ],
                ],
              },
              "Sid": "AllowApplyBedrockGuardrail",
            },
            {
              "Action": "bedrock:Retrieve",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":bedrock:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":knowledge-base/<kb-id>",
                  ],
                ],
              },
              "Sid": "AllowBedrockKnowledgeBase",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResagentexecutionrole",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/managed-policy/agent-test-agent/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/managed-policy/agent-test-agent/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "ActionGroups": [
          {
            "ActionGroupExecutor": {
              "Lambda": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:lambda:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":function:existing-lambda-function",
                  ],
                ],
              },
            },
            "ActionGroupName": "test-action-group",
            "ApiSchema": {
              "Payload": "openapi: 3.0.0
info:
  title: Insurance Claims Automation API
  version: 1.0.0
  description: APIs for managing insurance claims by pulling list of open claims,
    identifying outstanding paperwork for each claim, identifying all claim
    details, and sending reminders to policy holders.
paths:
  /open-items:
    get:
      summary: Gets the list of all open insurance claims
      description: Gets the list of all open insurance claims. Returns all claimIds
        that are open.
      operationId: getAllOpenClaims
      responses:
        "200":
          description: Gets the list of all open insurance claims for policy holders
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    claimId:
                      type: string
                      description: Unique ID of the claim.
                    policyHolderId:
                      type: string
                      description: Unique ID of the policy holder who has filed the claim.
                    claimStatus:
                      type: string
                      description: The status of the claim. Claim can be in Open or Closed state.
",
            },
            "Description": "This is a Test Action Group",
          },
        ],
        "AgentName": "test-org-test-env-test-domain-test-bedrock-builder-main-test-agent",
        "AgentResourceRoleArn": {
          "Fn::GetAtt": [
            "RoleResagentexecutionrole",
            "arn",
          ],
        },
        "AutoPrepare": true,
        "CustomerEncryptionKeyArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Description": "This is a Test Agent",
        "FoundationModel": "anthropic.claude-3-sonnet-20240229-v1:0",
        "GuardrailConfiguration": {
          "GuardrailIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:aws:bedrock:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":guardrail/test-guardrailß",
              ],
            ],
          },
          "GuardrailVersion": "1",
        },
        "IdleSessionTTLInSeconds": 400,
        "Instruction": "You are a helpful assistant
You are allowed to use associated Knowledge Base to answer questions
Provide responses in markdown format with source citations
",
        "KnowledgeBases": [
          {
            "Description": "This is a Test Knowledge Base",
            "KnowledgeBaseId": "<kb-id>",
          },
        ],
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
      },
      "Type": "AWS::Bedrock::Agent",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AgentAliasName": "test-alias",
        "AgentId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "AgentId",
          ],
        },
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
      },
      "Type": "AWS::Bedrock::AgentAlias",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "QueueName": "test-org-test-env-test-domain-test-bedrock-builder-main-test-action-group-dlq",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "EnforceSSL",
            },
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:test-partition:iam::test-acct:role/test-lambda-role",
              },
              "Resource": "*",
              "Sid": "SendMessage",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-action-group-dlq/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-action-group-dlq/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "QueueName",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-action-group-dlq/url",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "QueueName": "test-org-test-env-test-domain-test-bedrock-builder-main-test-custom-router1-dlq",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "EnforceSSL",
            },
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:test-partition:iam::test-acct:role/test-lambda-role",
              },
              "Resource": "*",
              "Sid": "SendMessage",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-custom-router1-dlq/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-custom-router1-dlq/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "QueueName",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-custom-router1-dlq/url",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "QueueName": "test-org-test-env-test-domain-test-bedrock-builder-main-test-custom-router2-dlq",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "EnforceSSL",
            },
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:test-partition:iam::test-acct:role/test-lambda-role",
              },
              "Resource": "*",
              "Sid": "SendMessage",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-custom-router2-dlq/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-custom-router2-dlq/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "QueueName",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-custom-router2-dlq/url",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "QueueName": "test-org-test-env-test-domain-test-bedrock-builder-main-test-custom-tr--7df929f1",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "EnforceSSL",
            },
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:test-partition:iam::test-acct:role/test-lambda-role",
              },
              "Resource": "*",
              "Sid": "SendMessage",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-custom-transformer-dlq/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-custom-transformer-dlq/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "QueueName",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-custom-transformer-dlq/url",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "test layer",
        "LayerName": "test-org-test-env-test-domain-test-bedrock-builder-mai--58c62fa5",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Description": "This is lambda function for Bedrock Agent Action group: test-agent/test-action-group",
        "Environment": {
          "Variables": {
            "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-bedrock-builder-mai--711a1222",
        "Handler": "test.lambda_handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Role": "arn:test-partition:iam::test-acct:role/test-lambda-role",
        "Runtime": "python3.13",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/lambda/test-action-group/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/lambda/test-action-group/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Description": "For custom chat routing logic",
        "Environment": {
          "Variables": {
            "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-bedrock-builder-main--10b8fe2",
        "Handler": "test.lambda_handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Role": "arn:test-partition:iam::test-acct:role/test-lambda-role",
        "Runtime": "python3.13",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Principal": arn:aws:iam::REPLACED-ACCOUNT-ID:role/role-in-another-account,
      },
      "Type": "AWS::Lambda::Permission",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/lambda/test-custom-router1/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/lambda/test-custom-router1/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Description": "For custom chat routing logic",
        "Environment": {
          "Variables": {
            "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-bedrock-builder-main--10b8fe3",
        "Handler": "test.lambda_handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Role": "arn:test-partition:iam::test-acct:role/test-lambda-role",
        "Runtime": "python3.13",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Principal": arn:aws:iam::REPLACED-ACCOUNT-ID:role/role-in-another-account,
      },
      "Type": "AWS::Lambda::Permission",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Principal": arn:aws:iam::REPLACED-ACCOUNT-ID:role/role-in-another-account,
      },
      "Type": "AWS::Lambda::Permission",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Principal": arn:aws:iam::REPLACED-ACCOUNT-ID:role/role-in-another-account,
      },
      "Type": "AWS::Lambda::Permission",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/lambda/test-custom-router2/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/lambda/test-custom-router2/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Description": "For custom parsing and chunking logic",
        "Environment": {
          "Variables": {
            "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-bedrock-builder-main-44df0df3",
        "Handler": "test.lambda_handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Role": "arn:test-partition:iam::test-acct:role/test-lambda-role",
        "Runtime": "python3.13",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/lambda/test-custom-transformer/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/lambda/test-custom-transformer/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "BlockedInputMessaging": "Your input contains restricted content",
        "BlockedOutputsMessaging": "Response blocked due to policy restrictions",
        "ContentPolicyConfig": {
          "FiltersConfig": [
            {
              "InputStrength": "MEDIUM",
              "OutputStrength": "MEDIUM",
              "Type": "HATE",
            },
          ],
        },
        "ContextualGroundingPolicyConfig": {
          "FiltersConfig": [
            {
              "Threshold": 0.95,
              "Type": "GROUNDING",
            },
            {
              "Threshold": 0.9,
              "Type": "RELEVANCE",
            },
          ],
        },
        "Description": "Enterprise content safety guardrail",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Name": "REPLACED-S3-BUCKET-NAME",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::Bedrock::Guardrail",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/aurora-pgvector.ts:LINE:COL] Managed policy used by RDS for monitoring and is least privileged.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "monitoring.rds.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
              ],
            ],
          },
        ],
        "RoleName": "test-org-test-env-test-domain-test-bedrock-builder-main-3bb5491b",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/aurora-pgvector.ts:LINE:COL] Managed policy used by RDS for monitoring and is least privileged.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/role/monitoring-role-test-vector-store/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/aurora-pgvector.ts:LINE:COL] Managed policy used by RDS for monitoring and is least privileged.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/role/monitoring-role-test-vector-store/id",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/aurora-pgvector.ts:LINE:COL] Managed policy used by RDS for monitoring and is least privileged.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/role/monitoring-role-test-vector-store/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-bedrock-builder-mai--6dfb5f12",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "bedrock:InvokeModel",
                "bedrock:InvokeModelWithResponseStream",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:bedrock::aws:foundation-model/amazon.titan-embed-text-v1",
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":bedrock:",
                      {
                        "Ref": "AWS::Region",
                      },
                      "::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0",
                    ],
                  ],
                },
              ],
              "Sid": "InvokeFoundationModels",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:DescribeKey",
                "kms:CreateGrant",
              ],
              "Condition": {
                "StringLike": {
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "bedrock.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
              "Sid": "BedrockKms",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleReskbexecutionrole",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/managed-policy/kb-foundation-model-test-knowledge-base/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/managed-policy/kb-foundation-model-test-knowledge-base/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-bedrock-builder-main-17bf5f5a",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "REPLACED-CFN-LOGICAL-ID",
              },
              "Sid": "DBSecretAccess",
            },
            {
              "Action": [
                "rds-data:ExecuteStatement",
                "rds-data:BatchExecuteStatement",
                "rds:DescribeDBClusters",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":cluster:",
                    {
                      "Ref": "REPLACED-CFN-LOGICAL-ID",
                    },
                  ],
                ],
              },
              "Sid": "DBQuery",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
              "Sid": "KMSUsage",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleReskbexecutionrole",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/managed-policy/kb-access-test-vector-store/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/managed-policy/kb-access-test-vector-store/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/bedrock-knowledge-base-l3-construct/lib/bedrock-knowledge-base-l3-construct.ts:LINE:COL] Permissions scoped to datasources restricted to specific Knowledgebase for sync acitvity",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-bedrock-builder-main-42b4aea4",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "bedrock:StartIngestionJob",
                "bedrock:GetIngestionJob",
                "bedrock:ListIngestionJobs",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":bedrock:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":knowledge-base/",
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "KnowledgeBaseId",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "DataSourceSync",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleReskbexecutionrole",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/bedrock-knowledge-base-l3-construct/lib/bedrock-knowledge-base-l3-construct.ts:LINE:COL] Permissions scoped to datasources restricted to specific Knowledgebase for sync acitvity",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/managed-policy/kb-datasync-test-knowledge-base/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/bedrock-knowledge-base-l3-construct/lib/bedrock-knowledge-base-l3-construct.ts:LINE:COL] Permissions scoped to datasources restricted to specific Knowledgebase for sync acitvity",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/managed-policy/kb-datasync-test-knowledge-base/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "cluster_arn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":rds:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":cluster:",
              {
                "Ref": "REPLACED-CFN-LOGICAL-ID",
              },
            ],
          ],
        },
        "on_create_sql_statements": [
          "CREATE DATABASE test_knowledge_base",
        ],
        "secret_arn": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "Custom::RDS-Data",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "cluster_arn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":rds:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":cluster:",
              {
                "Ref": "REPLACED-CFN-LOGICAL-ID",
              },
            ],
          ],
        },
        "database_name": "test_knowledge_base",
        "on_create_sql_statements": [
          "CREATE EXTENSION IF NOT EXISTS vector",
          "
      CREATE TABLE IF NOT EXISTS embeddings_3f4c89b3_1536
      (
        id UUID PRIMARY KEY,
      content TEXT NOT NULL,
      metadata JSON,
      custom_metadata JSONB,
      embedding VECTOR(1536)
      );
    ",
          "CREATE INDEX IF NOT EXISTS idx_embedding_vector ON embeddings_3f4c89b3_1536 USING hnsw (embedding vector_cosine_ops) WITH (ef_construction=256);",
          "CREATE INDEX IF NOT EXISTS idx_content ON embeddings_3f4c89b3_1536 USING gin (to_tsvector('simple', content))",
          "CREATE INDEX IF NOT EXISTS idx_custom_metadata ON embeddings_3f4c89b3_1536 USING gin (custom_metadata);",
        ],
        "secret_arn": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "Custom::RDS-Data",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "DeliveryDestinationArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "DeliverySourceName": "test-org-test-env-test-domain-test-bedrock-builder--5e46d10a",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::Logs::Delivery",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "DestinationResourceArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Name": "test-org-test-env-test-domain-test-bedrock-builder--5e46d10a",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::Logs::DeliveryDestination",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-CloudWatchLogGroupRetentionPeriod",
              "reason": "[MDAA:@aws-mdaa/cloudwatch-constructs/lib/loggroup.ts:LINE:COL] LogGroup retention is set to RetentionDays.INFINITE.",
            },
            {
              "id": "HIPAA.Security-CloudWatchLogGroupRetentionPeriod",
              "reason": "[MDAA:@aws-mdaa/cloudwatch-constructs/lib/loggroup.ts:LINE:COL] LogGroup retention is set to RetentionDays.INFINITE.",
            },
            {
              "id": "PCI.DSS.321-CloudWatchLogGroupRetentionPeriod",
              "reason": "[MDAA:@aws-mdaa/cloudwatch-constructs/lib/loggroup.ts:LINE:COL] LogGroup retention is set to RetentionDays.INFINITE.",
            },
          ],
        },
      },
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "LogGroupName": "/aws/vendedlogs/bedrock/knowledge-base/test-org-test-env-test-domain-test-bedrock-builder-main-test-knowledge-base",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/loggroup/test-knowledge-base/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "/aws/vendedlogs/bedrock/knowledge-base/test-org-test-env-test-domain-test-bedrock-builder-main-test-knowledge-base",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "LogType": "APPLICATION_LOGS",
        "Name": "test-org-test-env-test-domain-test-bedrock-builder--5e46d10a",
        "ResourceArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "KnowledgeBaseArn",
          ],
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::Logs::DeliverySource",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/knowledgebase/test-knowledge-base/id",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "KnowledgeBaseId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "LogExport::postgresql",
              ],
              "id": "AwsSolutions-RDS16",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Remediated through property override. Log export for postgresql is enabled.",
            },
            {
              "applies_to": [
                "LogExport::postgresql",
              ],
              "id": "NIST.800.53.R5-RDSLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Remediated through property override. Log export for postgresql is enabled.",
            },
            {
              "applies_to": [
                "LogExport::postgresql",
              ],
              "id": "HIPAA.Security-RDSLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Remediated through property override. Log export for postgresql is enabled.",
            },
            {
              "applies_to": [
                "LogExport::postgresql",
              ],
              "id": "PCI.DSS.321-RDSLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Remediated through property override. Log export for postgresql is enabled.",
            },
            {
              "id": "AwsSolutions-RDS6",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Remediated through property override.",
            },
            {
              "id": "AwsSolutions-RDS11",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Remediated through property override.",
            },
            {
              "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "PCI.DSS.321-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "HIPAA.Security-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "PCI.DSS.321-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
          ],
        },
      },
      "Properties": {
        "BackupRetentionPeriod": 20,
        "CopyTagsToSnapshot": true,
        "DBClusterIdentifier": "REPLACED-S3-BUCKET-NAME",
        "DBClusterParameterGroupName": "default.aurora-postgresql16",
        "DBSubnetGroupName": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "DeletionProtection": true,
        "EnableCloudwatchLogsExports": [
          "postgresql",
        ],
        "EnableHttpEndpoint": true,
        "EnableIAMDatabaseAuthentication": true,
        "Engine": "aurora-postgresql",
        "EngineVersion": "16.6",
        "KmsKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "REPLACED-CFN-LOGICAL-ID",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "REPLACED-CFN-LOGICAL-ID",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "Port": 15530,
        "ServerlessV2ScalingConfiguration": {
          "MaxCapacity": 8,
          "MinCapacity": 1,
        },
        "StorageEncrypted": true,
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "PCI.DSS.321-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "HIPAA.Security-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "PCI.DSS.321-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
          ],
        },
      },
      "Properties": {
        "Location": {
          "ApplicationId": {
            "Fn::FindInMap": [
              "REPLACED-CFN-LOGICAL-ID",
              {
                "Ref": "AWS::Partition",
              },
              "applicationId",
            ],
          },
          "SemanticVersion": {
            "Fn::FindInMap": [
              "REPLACED-CFN-LOGICAL-ID",
              {
                "Ref": "AWS::Partition",
              },
              "semanticVersion",
            ],
          },
        },
        "Parameters": {
          "endpoint": {
            "Fn::Join": [
              "",
              [
                "https://secretsmanager.",
                {
                  "Ref": "AWS::Region",
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix",
                },
              ],
            ],
          },
          "excludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "functionName": "REPLACED-CFN-LOGICAL-ID",
          "kmsKeyArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "vpcSecurityGroupIds": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "vpcSubnetIds": "test-subnet-id1,test-subnet-id2",
        },
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
      },
      "Type": "AWS::Serverless::Application",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "PCI.DSS.321-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "HIPAA.Security-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "PCI.DSS.321-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
          ],
        },
      },
      "Properties": {
        "GroupDescription": "test-org-test-env-test-domain-test-bedrock-builder-main/bedrock-builder/bedrock-kb-test-knowledge-base/pgvector-test-vector-store/RotationSingleUser/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "VpcId": "test-vpc-id",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "PCI.DSS.321-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "HIPAA.Security-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "PCI.DSS.321-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
          ],
        },
      },
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"postgres"}",
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "PCI.DSS.321-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "HIPAA.Security-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "PCI.DSS.321-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
          ],
        },
      },
      "Properties": {
        "SecretId": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "TargetId": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "PCI.DSS.321-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "HIPAA.Security-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "PCI.DSS.321-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
          ],
        },
      },
      "Properties": {
        "ResourcePolicy": {
          "Statement": [
            {
              "Action": "secretsmanager:DeleteSecret",
              "Effect": "Deny",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "SecretId": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SecretsManager::ResourcePolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "PCI.DSS.321-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "HIPAA.Security-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "PCI.DSS.321-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
          ],
        },
      },
      "Properties": {
        "RotationLambdaARN": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Outputs.RotationLambdaARN",
          ],
        },
        "RotationRules": {
          "ScheduleExpression": "rate(60 days)",
        },
        "SecretId": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SecretsManager::RotationSchedule",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "PCI.DSS.321-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "HIPAA.Security-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "PCI.DSS.321-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
          ],
        },
      },
      "Properties": {
        "DBSubnetGroupDescription": "Subnets for pgvector-test-vector-store database",
        "SubnetIds": [
          "test-subnet-id1",
          "test-subnet-id2",
        ],
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "PCI.DSS.321-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "HIPAA.Security-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "PCI.DSS.321-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
          ],
        },
      },
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "DBInstanceClass": "db.serverless",
        "Engine": "aurora-postgresql",
        "MonitoringInterval": 60,
        "MonitoringRoleArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "PromotionTier": 2,
        "PubliclyAccessible": false,
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "PCI.DSS.321-RDSEnhancedMonitoringEnabled",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Monitoring role required and monitoring intervals set with a minimum default.",
            },
            {
              "id": "HIPAA.Security-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "PCI.DSS.321-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInstancePublicAccess",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Deployed within private subnets and vpc along with iam auth enforced and security group.",
            },
            {
              "id": "NIST.800.53.R5-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "HIPAA.Security-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
            {
              "id": "PCI.DSS.321-RDSInBackupPlan",
              "reason": "[MDAA:@aws-mdaa/rds-constructs/lib/serverless-cluster.ts:LINE:COL] Instance is serverless and has a backup retention policy defaulting to 1.",
            },
          ],
        },
      },
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "DBInstanceClass": "db.serverless",
        "Engine": "aurora-postgresql",
        "MonitoringInterval": 60,
        "MonitoringRoleArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "PromotionTier": 0,
        "PubliclyAccessible": false,
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "DataSourceConfiguration": {
          "S3Configuration": {
            "BucketArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":s3:::customer-docs-bucket",
                ],
              ],
            },
            "InclusionPrefixes": [
              "support-documents-2/",
            ],
          },
          "Type": "S3",
        },
        "KnowledgeBaseId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "KnowledgeBaseId",
          ],
        },
        "Name": "test-ds-bda-parsing",
        "ServerSideEncryptionConfiguration": {
          "KmsKeyArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "VectorIngestionConfiguration": {
          "ChunkingConfiguration": {
            "ChunkingStrategy": "FIXED_SIZE",
            "FixedSizeChunkingConfiguration": {
              "MaxTokens": 512,
              "OverlapPercentage": 20,
            },
          },
          "ParsingConfiguration": {
            "BedrockDataAutomationConfiguration": {
              "ParsingModality": "MULTIMODAL",
            },
            "ParsingStrategy": "BEDROCK_DATA_AUTOMATION",
          },
        },
      },
      "Type": "AWS::Bedrock::DataSource",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "DataSourceConfiguration": {
          "S3Configuration": {
            "BucketArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":s3:::customer-docs-bucket",
                ],
              ],
            },
            "InclusionPrefixes": [
              "support-documents-4/",
            ],
          },
          "Type": "S3",
        },
        "KnowledgeBaseId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "KnowledgeBaseId",
          ],
        },
        "Name": "test-ds-custom-parsing",
        "ServerSideEncryptionConfiguration": {
          "KmsKeyArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "VectorIngestionConfiguration": {
          "ChunkingConfiguration": {
            "ChunkingStrategy": "NONE",
          },
          "CustomTransformationConfiguration": {
            "IntermediateStorage": {
              "S3Location": {
                "URI": "s3://custom-transform-intermediate-bucket/path/to/data/objects/",
              },
            },
            "Transformations": [
              {
                "StepToApply": "POST_CHUNKING",
                "TransformationFunction": {
                  "TransformationLambdaConfiguration": {
                    "LambdaArn": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:lambda:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":function:test-custom-transformer",
                        ],
                      ],
                    },
                  },
                },
              },
              {
                "StepToApply": "POST_CHUNKING",
                "TransformationFunction": {
                  "TransformationLambdaConfiguration": {
                    "LambdaArn": {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                  },
                },
              },
            ],
          },
          "ParsingConfiguration": {
            "BedrockDataAutomationConfiguration": {
              "ParsingModality": "MULTIMODAL",
            },
            "ParsingStrategy": "BEDROCK_DATA_AUTOMATION",
          },
        },
      },
      "Type": "AWS::Bedrock::DataSource",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "DataSourceConfiguration": {
          "S3Configuration": {
            "BucketArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":s3:::customer-docs-bucket",
                ],
              ],
            },
            "InclusionPrefixes": [
              "support-documents/",
            ],
          },
          "Type": "S3",
        },
        "KnowledgeBaseId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "KnowledgeBaseId",
          ],
        },
        "Name": "test-ds-default-parsing",
        "ServerSideEncryptionConfiguration": {
          "KmsKeyArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Bedrock::DataSource",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "DataSourceConfiguration": {
          "S3Configuration": {
            "BucketArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":s3:::customer-docs-bucket",
                ],
              ],
            },
            "InclusionPrefixes": [
              "support-documents-3/",
            ],
          },
          "Type": "S3",
        },
        "KnowledgeBaseId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "KnowledgeBaseId",
          ],
        },
        "Name": "test-ds-foundation-model-parsing",
        "ServerSideEncryptionConfiguration": {
          "KmsKeyArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "VectorIngestionConfiguration": {
          "ParsingConfiguration": {
            "BedrockFoundationModelConfiguration": {
              "ModelArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":bedrock:",
                    {
                      "Ref": "AWS::Region",
                    },
                    "::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0",
                  ],
                ],
              },
              "ParsingModality": "MULTIMODAL",
              "ParsingPrompt": {
                "ParsingPromptText": "Extract key information from this document",
              },
            },
            "ParsingStrategy": "BEDROCK_FOUNDATION_MODEL",
          },
        },
      },
      "Type": "AWS::Bedrock::DataSource",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "KnowledgeBaseConfiguration": {
          "Type": "VECTOR",
          "VectorKnowledgeBaseConfiguration": {
            "EmbeddingModelArn": "arn:aws:bedrock::aws:foundation-model/amazon.titan-embed-text-v1",
            "SupplementalDataStorageConfiguration": {
              "SupplementalDataStorageLocations": [
                {
                  "S3Location": {
                    "URI": "s3://supplemental-image-storage-bucket",
                  },
                  "SupplementalDataStorageLocationType": "S3",
                },
              ],
            },
          },
        },
        "Name": "test-org-test-env-test-domain-test-bedrock-builder-main-test-knowledge-base",
        "RoleArn": {
          "Fn::GetAtt": [
            "RoleReskbexecutionrole",
            "arn",
          ],
        },
        "StorageConfiguration": {
          "RdsConfiguration": {
            "CredentialsSecretArn": {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
            "DatabaseName": "test_knowledge_base",
            "FieldMapping": {
              "CustomMetadataField": "custom_metadata",
              "MetadataField": "metadata",
              "PrimaryKeyField": "id",
              "TextField": "content",
              "VectorField": "embedding",
            },
            "ResourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":rds:",
                  {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":cluster:",
                  {
                    "Ref": "REPLACED-CFN-LOGICAL-ID",
                  },
                ],
              ],
            },
            "TableName": "embeddings_3f4c89b3_1536",
          },
          "Type": "RDS",
        },
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
      },
      "Type": "AWS::Bedrock::KnowledgeBase",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "QueueName": "test-org-test-env-test-domain-test-bedrock-builder-main-test-knowledge--1d2f4406",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "EnforceSSL",
            },
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "RoleReskbexecutionrole",
                    "arn",
                  ],
                },
              },
              "Resource": "*",
              "Sid": "SendMessage",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "QueueName": "test-org-test-env-test-domain-test-bedrock-builder-main-test-knowledge--577175fc",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "EnforceSSL",
            },
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
              "Sid": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-knowledge-base-test-ds-default-parsing-sync-events-dlq/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-knowledge-base-test-ds-default-parsing-sync-events-dlq/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "QueueName",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-knowledge-base-test-ds-default-parsing-sync-events-dlq/url",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-knowledge-base-test-ds-default-parsing-sync-dlq/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-knowledge-base-test-ds-default-parsing-sync-dlq/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "QueueName",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SQS3",
              "reason": "[MDAA:@aws-mdaa/sqs-constructs/lib/index.ts:LINE:COL] Queue is a DLQ.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/queue/test-knowledge-base-test-ds-default-parsing-sync-dlq/url",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "Event Rule for triggering test-knowledge-base-test-ds-default-parsing-sync-test-knowledge-base-test-ds-default-parsing-sync-rule with S3 events",
        "EventPattern": {
          "detail": {
            "bucket": {
              "name": [
                "customer-docs-bucket",
              ],
            },
            "object": {
              "key": [
                {
                  "prefix": "support-documents/",
                },
              ],
            },
          },
          "detail-type": [
            "Object Created",
          ],
          "source": [
            "aws.s3",
          ],
        },
        "Name": "test-org-test-env-test-domain-test-bedrock-builder-main-774d420b",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
            "DeadLetterConfig": {
              "Arn": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
            "Id": "Target0",
            "RetryPolicy": {
              "MaximumEventAgeInSeconds": 3600,
              "MaximumRetryAttempts": 3,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Description": "Auto-sync data source test-ds-default-parsing for knowledge base test-knowledge-base",
        "Environment": {
          "Variables": {
            "DATA_SOURCE_ID": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "DataSourceId",
              ],
            },
            "KNOWLEDGE_BASE_ID": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "KnowledgeBaseId",
              ],
            },
            "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-bedrock-builder-main-53c6a15e",
        "Handler": "datasource_sync.lambda_handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Role": {
          "Fn::GetAtt": [
            "RoleReskbexecutionrole",
            "arn",
          ],
        },
        "Runtime": "python3.13",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/lambda/test-knowledge-base-test-ds-default-parsing-sync/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] Concurrency Limits not required.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-lambda-l3-construct/lib/dataops-lambda-l3-construct.ts:LINE:COL] VPC Not Required",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/lambda/test-knowledge-base-test-ds-default-parsing-sync/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "GroupDescription": "test-org-test-env-test-domain-test-bedrock-builder-main/bedrock-builder/bedrock-kb-test-knowledge-base/test-vector-store-vector-store-sg",
        "GroupName": "test-org-test-env-test-domain-test-bedrock-builder-main-test-vector-store",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "VpcId": "test-vpc-id",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "from testorgtestenvtestdomaintestbedrockbuildermainbedrockbuilderbedrockkbtestknowledgebasepgvectortestvectorstoreRotationSingleUserSecurityGroup6006C605:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
            {
              "id": "HIPAA.Security-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
            {
              "id": "PCI.DSS.321-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
          ],
        },
      },
      "Properties": {
        "Description": "Self-Ref",
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/security-group/test-vector-store/id",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "Enabled": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataAdmin0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "test-org-test-env-test-domain-test-bedrock-builder-main-usage-stmt",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
              ],
              "Condition": {
                "ArnEquals": {
                  "kms:EncryptionContext:aws:logs:arn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:*",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "logs.",
                      {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
              "Resource": "*",
              "Sid": "CloudWatchLogsEncryption",
            },
            {
              "Action": [
                "kms:GenerateDataKey*",
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "bedrock.amazonaws.com",
              },
              "Resource": "*",
              "Sid": "AllowBedrockServiceForAgents",
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:ListGrants",
                "kms:RevokeGrant",
              ],
              "Condition": {
                "Bool": {
                  "kms:GrantIsForAWSResource": "true",
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "bedrock.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "bedrock.amazonaws.com",
              },
              "Resource": "*",
              "Sid": "AllowBedrockServiceToManageGrants",
            },
            {
              "Action": [
                "kms:GenerateDataKey*",
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Condition": {
                "StringLike": {
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "bedrock.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "RoleResagentexecutionrole",
                      "arn",
                    ],
                  },
                  {
                    "Fn::GetAtt": [
                      "RoleReskbexecutionrole",
                      "arn",
                    ],
                  },
                ],
              },
              "Resource": "*",
              "Sid": "AllowExecutionRolesToUseKeyWithContext",
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:DescribeKey",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                  "kms:GrantOperations": [
                    "Decrypt",
                    "GenerateDataKey*",
                    "DescribeKey",
                  ],
                },
                "StringLike": {
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "bedrock.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "RoleResagentexecutionrole",
                      "arn",
                    ],
                  },
                  {
                    "Fn::GetAtt": [
                      "RoleReskbexecutionrole",
                      "arn",
                    ],
                  },
                ],
              },
              "Resource": "*",
              "Sid": "AllowCreateGrantForBedrockResources",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "secretsmanager.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:DescribeKey",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "secretsmanager.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AliasName": "alias/test-org-test-env-test-domain-test-bedrock-builder-main",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/kms/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/kms/id",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-bedrock-builder-mai--6efe19c8",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 660,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/lambda/rds-data-handler/arn",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-bedrock-builder-main/lambda/rds-data-handler/name",
        "Tags": {
          "mdaa_cdk_app": "bedrock-builder",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-bedrock-builder-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "rds-data:ExecuteStatement",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":cluster:",
                    {
                      "Ref": "REPLACED-CFN-LOGICAL-ID",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RDS-Data-handler",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
        "RoleName": "test-org-test-env-test-domain-test-bedrock-builder-mai--6efe19c8",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-bedrock-builder-mai--6efe19c8*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-bedrock-builder-mai--6efe19c8*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
            },
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-bedrock-builder-main/custom-RDS-Data-provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-bedrock-builder-main-543f54c3",
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "CR Role",
        "RoleName": "test-org-test-env-test-domain-test-bedrock-builder-main-543f54c3",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "bedrock-builder",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-bedrock-builder-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-bedrock-builder-main-543f54c3*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-bedrock-builder-main-543f54c3*",
                  ],
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
  "Transform": "AWS::Serverless-2016-10-31",
}
`;
