// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`data-science-team Snapshot Tests Data Science Team Stack Snapshot Test 1`] = `
{
  "Description": "(SO0320-datascience-team) Modern Data Architecture Accelerator. Version 1.0.0",
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs22.x",
      },
      "ap-east-1": {
        "value": "nodejs22.x",
      },
      "ap-east-2": {
        "value": "nodejs22.x",
      },
      "ap-northeast-1": {
        "value": "nodejs22.x",
      },
      "ap-northeast-2": {
        "value": "nodejs22.x",
      },
      "ap-northeast-3": {
        "value": "nodejs22.x",
      },
      "ap-south-1": {
        "value": "nodejs22.x",
      },
      "ap-south-2": {
        "value": "nodejs22.x",
      },
      "ap-southeast-1": {
        "value": "nodejs22.x",
      },
      "ap-southeast-2": {
        "value": "nodejs22.x",
      },
      "ap-southeast-3": {
        "value": "nodejs22.x",
      },
      "ap-southeast-4": {
        "value": "nodejs22.x",
      },
      "ap-southeast-5": {
        "value": "nodejs22.x",
      },
      "ap-southeast-7": {
        "value": "nodejs22.x",
      },
      "ca-central-1": {
        "value": "nodejs22.x",
      },
      "ca-west-1": {
        "value": "nodejs22.x",
      },
      "cn-north-1": {
        "value": "nodejs22.x",
      },
      "cn-northwest-1": {
        "value": "nodejs22.x",
      },
      "eu-central-1": {
        "value": "nodejs22.x",
      },
      "eu-central-2": {
        "value": "nodejs22.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs22.x",
      },
      "eu-south-1": {
        "value": "nodejs22.x",
      },
      "eu-south-2": {
        "value": "nodejs22.x",
      },
      "eu-west-1": {
        "value": "nodejs22.x",
      },
      "eu-west-2": {
        "value": "nodejs22.x",
      },
      "eu-west-3": {
        "value": "nodejs22.x",
      },
      "il-central-1": {
        "value": "nodejs22.x",
      },
      "me-central-1": {
        "value": "nodejs22.x",
      },
      "me-south-1": {
        "value": "nodejs22.x",
      },
      "mx-central-1": {
        "value": "nodejs22.x",
      },
      "sa-east-1": {
        "value": "nodejs22.x",
      },
      "us-east-1": {
        "value": "nodejs22.x",
      },
      "us-east-2": {
        "value": "nodejs22.x",
      },
      "us-gov-east-1": {
        "value": "nodejs22.x",
      },
      "us-gov-west-1": {
        "value": "nodejs22.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-isob-west-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs22.x",
      },
      "us-west-2": {
        "value": "nodejs22.x",
      },
    },
  },
  "Outputs": {
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:role:deployment:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:role:deployment:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:role:deployment:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:lambda:studiodomainupdatehandler:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:lambda:studiodomainupdatehandler:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:lambda:studiolifecycleconfighandler:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:lambda:studiolifecycleconfighandler:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team-athena:workgroup:name",
      },
      "Value": "test-org-test-env-test-domain-test-data-science-team-athena",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team-minilake:bucket:projects:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team-minilake:bucket:projects:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team-minilake:kms:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team-minilake:kms:id",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:managed-policy:someprefixsmwrite:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:managed-policy:someprefixsmwrite:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team-minilake:role:lakeformation:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team-minilake:role:lakeformation:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team-minilake:role:lakeformation:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:managed-policy:someprefixsmread:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:managed-policy:someprefixsmread:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:security-group:testorgtestenvtestdomaintestdatascienceteam:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "GroupId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:managed-policy:someprefixsmguardrail:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:managed-policy:someprefixsmguardrail:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:managed-policy:someprefixsmwrite2:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:managed-policy:someprefixsmwrite2:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:layer-version:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:domain:id",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:domain:subnet-ids",
      },
      "Value": "subnet-id",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:domain:vpc-id",
      },
      "Value": "vpc-id",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:studiolifecycleconfig:jupyterserver:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "StudioLifecycleConfigArn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:studiolifecycleconfig:kernelgateway:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "StudioLifecycleConfigArn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:managed-policy:someprefix:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team:managed-policy:someprefix:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team-athena:managed-policy:someprefixathenawgusage:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-data-science-team-athena:managed-policy:someprefixathenawgusage:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/ml/sm/sg/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/test-org/test-domain/caef-bootstrap/role-helper-service-token",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/test-org/test-domain/generated-role/data-scientist/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuetestorgtestdomaingeneratedroleteamexecutionroleidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/test-org/test-domain/generated-role/team-execution-role/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment and interacts only with S3.",
            },
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment. Errors will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment and interacts only with S3.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment and interacts only with S3.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment. Errors will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment. Errors will be handled by CloudFormation.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "RoleResDataAdminRootAccessrws0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "name": "Admin",
          "refId": "DataAdminRootAccess-rws-0",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResTeamAthenaResultsAccessrw0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "arn": {
            "Fn::GetAtt": [
              "RoleResteamexecutionrole",
              "arn",
            ],
          },
          "refId": "TeamAthenaResultsAccess-rw-0",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResTeamAthenaResultsAccessrw1": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "id": {
            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "refId": "TeamAthenaResultsAccess-rw-1",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResTeamAthenaResultsAccessrw2": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "immutable": true,
          "name": "AWSReservedSSO_datascientist_abcdefg",
          "refId": "TeamAthenaResultsAccess-rw-2",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResTeamLifecycleAssetsAccessrw0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "arn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "refId": "TeamLifecycleAssetsAccess-rw-0",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResteamexecutionrole": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "id": {
            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroleteamexecutionroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "refId": "team-execution-role",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "Stack description parameter to update on version changes",
        "Name": "/test-org/test-domain/test-data-science-team/aws-solution",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "(SO0320-datascience-team) Modern Data Architecture Accelerator. Version 1.0.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "test-org-test-env-test-domain-test-data-science-team-deployment",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/*CustomCDK**",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/*CustomCDK**",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/role/deployment/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/role/deployment/id",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/role/deployment/name",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
            "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-data-science-team-s--16227506",
        "Handler": "update_domain.lambda_handler",
        "Layers": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/lambda/studiodomainupdate-handler/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/lambda/studiodomainupdate-handler/name",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sagemaker:UpdateDomain",
                "sagemaker:DescribeDomain",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "DomainArn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RoleResteamexecutionrole",
                  "arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StudioDomainUpdate-handler",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "test-org-test-env-test-domain-test-data-science-team-s--16227506",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-s--16227506*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-s--16227506*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
            },
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-data-science-team/custom-StudioDomainUpdate-provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-data-science-team-st-16d84841",
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "CR Role",
        "RoleName": "test-org-test-env-test-domain-test-data-science-team-st-16d84841",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-st-16d84841*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-st-16d84841*",
                  ],
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
            "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-data-science-team-s--44c7e747",
        "Handler": "lifecycle.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/lambda/studiolifecycleconfig-handler/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/lambda/studiolifecycleconfig-handler/name",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Lifecycle names not known at deployment time.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sagemaker:CreateStudioLifecycleConfig",
                "sagemaker:DeleteStudioLifecycleConfig",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":studio-lifecycle-config/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StudioLifecycleConfig-handler",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "test-org-test-env-test-domain-test-data-science-team-s--44c7e747",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-s--44c7e747*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-s--44c7e747*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
            },
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-data-science-team/custom-StudioLifecycleConfig-provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-data-science-team-st-70cf7262",
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "CR Role",
        "RoleName": "test-org-test-env-test-domain-test-data-science-team-st-70cf7262",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-st-70cf7262*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-st-70cf7262*",
                  ],
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "test-org-test-env-test-domain-test-data-science-team-athena",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "WorkGroupConfiguration": {
          "EnforceWorkGroupConfiguration": true,
          "PublishCloudWatchMetricsEnabled": true,
          "ResultConfiguration": {
            "EncryptionConfiguration": {
              "EncryptionOption": "SSE_KMS",
              "KmsKey": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
            "OutputLocation": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "REPLACED-CFN-LOGICAL-ID",
                  },
                  "/athena-results/",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team-athena/workgroup/name",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test-org-test-env-test-domain-test-data-science-team-athena",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "HIPAA.Security-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "PCI.DSS.321-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "BucketKeyEnabled": true,
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "BucketName": "test-org-test-env-test-domain-test-data-science-team---3ff78959",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "HIPAA.Security-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "PCI.DSS.321-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-server-side-encryption": "AES256",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "DenyAES",
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringNotLikeIfExists": {
                  "s3:x-amz-server-side-encryption-aws-kms-key-id": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "ForceKMS",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:PutObject",
                "s3:PutObjectTagging",
                "s3:DeleteObject",
                "s3:DeleteObjectVersion",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataAdminRootAccessrws0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "/_ReadWriteSuper",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:PutObject",
                "s3:PutObjectTagging",
                "s3:DeleteObject",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw2",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/athena-results/*",
                  ],
                ],
              },
              "Sid": "/athena-results_ReadWrite",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:PutObject",
                "s3:PutObjectTagging",
                "s3:DeleteObject",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw2",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/projects/*",
                  ],
                ],
              },
              "Sid": "/projects/_ReadWrite",
            },
            {
              "Action": "s3:GetObject*",
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw2",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/sagemaker-lifecycle-assets/*",
                  ],
                ],
              },
              "Sid": "/sagemaker-lifecycle-assets/_Read",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:PutObject",
                "s3:PutObjectTagging",
                "s3:DeleteObject",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamLifecycleAssetsAccessrw0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/sagemaker-lifecycle-assets/*",
                  ],
                ],
              },
              "Sid": "/sagemaker-lifecycle-assets/_ReadWrite",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:PutObject",
                "s3:PutObjectTagging",
                "s3:DeleteObject",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw2",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/sagemaker/*",
                  ],
                ],
              },
              "Sid": "/sagemaker/_ReadWrite",
            },
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/athena-results/",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/projects/",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/sagemaker-lifecycle-assets/",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/sagemaker/",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:List*",
                "s3:GetBucket*",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataAdminRootAccessrws0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw2",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamLifecycleAssetsAccessrw0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              ],
              "Sid": "BucketAllow",
            },
            {
              "Action": [
                "s3:PutObject*",
                "s3:GetObject*",
                "s3:DeleteObject*",
              ],
              "Condition": {
                "ForAnyValue:StringNotLike": {
                  "aws:PrincipalArn": [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                  ],
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataAdminRootAccessrws0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw2",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamLifecycleAssetsAccessrw0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Deny",
              "NotResource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/inventory/*",
                  ],
                ],
              },
              "Principal": {
                "AWS": "*",
              },
              "Sid": "BucketDeny",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team-minilake/bucket/projects/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team-minilake/bucket/projects/name",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AliasName": "alias/test-org-test-env-test-domain-test-data-science-team-minilake",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "Enabled": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataAdminRootAccessrws0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw2",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw2",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw2",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamLifecycleAssetsAccessrw0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw2",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "test-org-test-env-test-domain-test-data-science-team-minilake-usage-stmt",
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team-minilake/kms/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team-minilake/kms/id",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
            },
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-data-science-team/team/datalake-folder-cr-provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-data-science-team-mi-60472015",
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "bucket_name": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "folder_name": "/athena-results",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "bucket_name": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "folder_name": "/sagemaker-lifecycle-assets/",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "bucket_name": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "folder_name": "/projects/",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "bucket_name": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "folder_name": "/sagemaker/",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":*job/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":*job-definition/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Jobs not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                "Action::sagemaker:Create*Job",
                "Action::sagemaker:Create*JobDefinition",
                "Action::sagemaker:Delete*JobDefinition",
                "Action::sagemaker:Delete*Job",
                "Action::sagemaker:Update*Job",
                "Action::sagemaker:Stop*Job",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Actions scoped for job management permissions, taking into account policy length limits. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":monitoring-schedule/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for monitoring schedules not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model-card/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for model cards not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":pipeline/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Pipelines not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Models not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model-package/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model-package-group/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for model packages not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":project/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Projects not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint-config/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for endpoints are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":experiment*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for experiments are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":notebook-instance/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Notebook Instances not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":notebook-instance-lifecycle-config/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Notebook Lifecycle Configs not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":feature-group/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":feature-group/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":feature-group/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":experiment/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Experiments not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "some-prefix-sm-write",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RoleResteamexecutionrole",
                  "arn",
                ],
              },
              "Sid": "TeamRole",
            },
            {
              "Action": [
                "sagemaker:Create*Job",
                "sagemaker:Create*JobDefinition",
                "sagemaker:Delete*JobDefinition",
                "sagemaker:Update*Job",
                "sagemaker:Stop*Job",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":*job/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":*job-definition/*",
                    ],
                  ],
                },
              ],
              "Sid": "CreateandManageJobs",
            },
            {
              "Action": [
                "sagemaker:CreateMonitoringSchedule",
                "sagemaker:UpdateMonitoringSchedule",
                "sagemaker:DeleteMonitoringSchedule",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":monitoring-schedule/*",
                  ],
                ],
              },
              "Sid": "CreateandManageModelMonitoring",
            },
            {
              "Action": [
                "sagemaker:CreateModelCard",
                "sagemaker:DeleteModelCard",
                "sagemaker:UpdateModelCard",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":model-card/*",
                  ],
                ],
              },
              "Sid": "CreateandManageModelCards",
            },
            {
              "Action": [
                "sagemaker:CreatePipeline",
                "sagemaker:DeletePipeline",
                "sagemaker:RetryPipelineExecution",
                "sagemaker:StartPipelineExecution",
                "sagemaker:StopPipelineExecution",
                "sagemaker:SendPipelineExecutionStepSuccess",
                "sagemaker:SendPipelineExecutionStepFailure",
                "sagemaker:UpdatePipeline",
                "sagemaker:UpdatePipelineExecution",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":pipeline/*",
                  ],
                ],
              },
              "Sid": "CreateandManagePipelines",
            },
            {
              "Action": [
                "sagemaker:CreateModel",
                "sagemaker:DeleteModel",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":model/*",
                  ],
                ],
              },
              "Sid": "CreateAndManageModels",
            },
            {
              "Action": [
                "sagemaker:CreateModelPackage",
                "sagemaker:DeleteModelPackage",
                "sagemaker:UpdateModelPackage",
                "sagemaker:BatchDescribeModelPackage",
                "sagemaker:CreateModelPackageGroup",
                "sagemaker:DeleteModelPackageGroup",
                "sagemaker:DeleteModelPackageGroupPolicy",
                "sagemaker:PutModelPackageGroupPolicy",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model-package/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model-package-group/*",
                    ],
                  ],
                },
              ],
              "Sid": "CreateAndManageModelPackages",
            },
            {
              "Action": [
                "sagemaker:CreateProject",
                "sagemaker:DeleteProject",
                "sagemaker:UpdateProject",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":project/*",
                  ],
                ],
              },
              "Sid": "CreateAndManageProjects",
            },
            {
              "Action": "kms:CreateGrant",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
              "Sid": "SageMakerKmsAccess",
            },
            {
              "Action": [
                "sagemaker:CreateEndpoint",
                "sagemaker:DeleteEndpoint",
                "sagemaker:UpdateEndpoint",
                "sagemaker:UpdateEndpointWeightsAndCapacities",
                "sagemaker:CreateEndpointConfig",
                "sagemaker:DeleteEndpointConfig",
                "sagemaker:InvokeEndpoint",
                "sagemaker:InvokeEndpointAsync",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint-config/*",
                    ],
                  ],
                },
              ],
              "Sid": "CreateAndManageEndpoints",
            },
            {
              "Action": [
                "sagemaker:CreateTrial",
                "sagemaker:CreateTrialComponent",
                "sagemaker:AssociateTrialComponent",
                "sagemaker:DisassociateTrialComponent",
                "sagemaker:DeleteTrial",
                "sagemaker:DeleteTrialComponent",
                "sagemaker:UpdateTrial",
                "sagemaker:UpdateTrialComponent",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":experiment*",
                  ],
                ],
              },
              "Sid": "CreateAndManageTrials",
            },
            {
              "Action": [
                "sagemaker:CreateNotebookInstance",
                "sagemaker:UpdateNotebookInstance",
                "sagemaker:DeleteNotebookInstance",
                "sagemaker:StartNotebookInstance",
                "sagemaker:StopNotebookInstance",
                "sagemaker:CreatePresignedNotebookInstanceUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":notebook-instance/*",
                  ],
                ],
              },
              "Sid": "CreateAndManageNotebooks",
            },
            {
              "Action": [
                "sagemaker:CreateNotebookInstanceLifecycleConfig",
                "sagemaker:UpdateNotebookInstanceLifecycleConfig",
                "sagemaker:DeleteNotebookInstanceLifecycleConfig",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":notebook-instance-lifecycle-config/*",
                  ],
                ],
              },
              "Sid": "CreateAndManageNotebookLifecycles",
            },
            {
              "Action": [
                "sagemaker:PutRecord",
                "sagemaker:DeleteRecord",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":feature-group/*",
                  ],
                ],
              },
              "Sid": "PutRecordFeatureGroups",
            },
            {
              "Action": "sagemaker:CreateFeatureGroup",
              "Condition": {
                "StringEquals": {
                  "sagemaker:FeatureGroupOnlineStoreKmsKey": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":feature-group/*",
                  ],
                ],
              },
              "Sid": "CreateOnlineFeatureGroups",
            },
            {
              "Action": "sagemaker:CreateFeatureGroup",
              "Condition": {
                "StringEquals": {
                  "sagemaker:FeatureGroupOfflineStoreKmsKey": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
                "StringLike": {
                  "sagemaker:FeatureGroupOfflineStoreS3Uri": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":feature-group/*",
                  ],
                ],
              },
              "Sid": "CreateOfflineFeatureGroups",
            },
            {
              "Action": [
                "sagemaker:DeleteFeatureGroup",
                "sagemaker:UpdateFeatureGroup",
                "sagemaker:UpdateFeatureMetadata",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":feature-group/*",
                  ],
                ],
              },
              "Sid": "ManageFeatureGroups",
            },
            {
              "Action": [
                "sagemaker:CreateExperiment",
                "sagemaker:DeleteExperiment",
                "sagemaker:UpdateExperiment",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":experiment/*",
                  ],
                ],
              },
              "Sid": "CreateAndManageExperiments",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResteamexecutionrole",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw1",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":*job/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":*job-definition/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Jobs not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                "Action::sagemaker:Create*Job",
                "Action::sagemaker:Create*JobDefinition",
                "Action::sagemaker:Delete*JobDefinition",
                "Action::sagemaker:Delete*Job",
                "Action::sagemaker:Update*Job",
                "Action::sagemaker:Stop*Job",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Actions scoped for job management permissions, taking into account policy length limits. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":monitoring-schedule/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for monitoring schedules not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model-card/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for model cards not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":pipeline/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Pipelines not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Models not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model-package/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model-package-group/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for model packages not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":project/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Projects not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint-config/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for endpoints are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":experiment*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for experiments are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":notebook-instance/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Notebook Instances not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":notebook-instance-lifecycle-config/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Notebook Lifecycle Configs not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":feature-group/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":feature-group/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":feature-group/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":experiment/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Experiments not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/managed-policy/some-prefix-sm-write/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":*job/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":*job-definition/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Jobs not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                "Action::sagemaker:Create*Job",
                "Action::sagemaker:Create*JobDefinition",
                "Action::sagemaker:Delete*JobDefinition",
                "Action::sagemaker:Delete*Job",
                "Action::sagemaker:Update*Job",
                "Action::sagemaker:Stop*Job",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Actions scoped for job management permissions, taking into account policy length limits. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":monitoring-schedule/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for monitoring schedules not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model-card/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for model cards not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":pipeline/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Pipelines not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Models not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model-package/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model-package-group/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for model packages not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":project/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Projects not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":endpoint-config/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for endpoints are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":experiment*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for experiments are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":notebook-instance/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Notebook Instances not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":notebook-instance-lifecycle-config/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Notebook Lifecycle Configs not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":feature-group/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":feature-group/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":feature-group/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":experiment/*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Experiments not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/managed-policy/some-prefix-sm-write/name",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
            "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-data-science-team-m--6a337e5f",
        "Handler": "datalake_folder.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "CR Role",
        "RoleName": "test-org-test-env-test-domain-test-data-science-team-m--6a337e5f",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-minilake-folder-cr*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-minilake-folder-cr*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "CR Role",
        "RoleName": "test-org-test-env-test-domain-test-data-science-team-m--447e9da0",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-mi-60472015*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-mi-60472015*",
                  ],
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lakeformation.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role for accessing the data lake via LakeFormation.",
        "RoleName": "test-org-test-env-test-domain-test-data-science-team-m--59e221a0",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team-minilake/role/lake-formation/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team-minilake/role/lake-formation/id",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team-minilake/role/lake-formation/name",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SageMaker Search does not take a resource. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                "Resource::*",
                "Action::sagemaker:List*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SageMaker List does not take a resource. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                "Resource::*",
                "Action::sagemaker:Describe*",
                "Action::sagemaker:Get*",
                "Action::sagemaker:BatchDescribe*",
                "Action::sagemaker:BatchGet*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Describe and Get not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:*sagemaker*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Log Group and Stream names not known at deployment time.",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "some-prefix-sm-read",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sagemaker:Search",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "SageMakerSearch",
            },
            {
              "Action": "sagemaker:List*",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "SageMakerList",
            },
            {
              "Action": [
                "sagemaker:Describe*",
                "sagemaker:BatchDescribe*",
                "sagemaker:Get*",
                "sagemaker:BatchGet*",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "SageMakerDescribeGet",
            },
            {
              "Action": [
                "logs:GetLogEvents",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
                "logs:FilterLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:*sagemaker*",
                  ],
                ],
              },
              "Sid": "CloudWatchSageMaker",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResteamexecutionrole",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw1",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SageMaker Search does not take a resource. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                "Resource::*",
                "Action::sagemaker:List*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SageMaker List does not take a resource. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                "Resource::*",
                "Action::sagemaker:Describe*",
                "Action::sagemaker:Get*",
                "Action::sagemaker:BatchDescribe*",
                "Action::sagemaker:BatchGet*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Describe and Get not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:*sagemaker*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Log Group and Stream names not known at deployment time.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/managed-policy/some-prefix-sm-read/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SageMaker Search does not take a resource. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                "Resource::*",
                "Action::sagemaker:List*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SageMaker List does not take a resource. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                "Resource::*",
                "Action::sagemaker:Describe*",
                "Action::sagemaker:Get*",
                "Action::sagemaker:BatchDescribe*",
                "Action::sagemaker:BatchGet*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Describe and Get not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:*sagemaker*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Log Group and Stream names not known at deployment time.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/managed-policy/some-prefix-sm-read/name",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "GroupDescription": "test-org-test-env-test-domain-test-data-science-team/team/security-group",
        "GroupName": "test-org-test-env-test-domain-test-data-science-team-test-org-test-env-test-domain-test-data-science-team",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "VpcId": "vpc-id",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "CidrIp": "10.0.0.0/24",
        "Description": "from 10.0.0.0/24:tcp PORT 443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "from ",
              {
                "Ref": "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter",
              },
              ":tcp PORT 443",
            ],
          ],
        },
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Ref": "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
            {
              "id": "HIPAA.Security-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
            {
              "id": "PCI.DSS.321-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
          ],
        },
      },
      "Properties": {
        "Description": "Self-Ref",
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/security-group/test-org-test-env-test-domain-test-data-science-team/id",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "CidrIp": "0.0.0.0/0",
        "Description": "to 0.0.0.0/0:tcp PORT 443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "to ",
              {
                "Ref": "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter",
              },
              ":tcp PORT 443",
            ],
          ],
        },
        "DestinationSecurityGroupId": {
          "Ref": "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "prefix list for com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".dynamodb",
            ],
          ],
        },
        "DestinationPrefixListId": "pl-4ea54027",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "prefix list for com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "DestinationPrefixListId": "pl-7da54014",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
            {
              "id": "HIPAA.Security-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
            {
              "id": "PCI.DSS.321-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
          ],
        },
      },
      "Properties": {
        "Description": "Self-Ref",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "some-prefix-sm-guardrail",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sagemaker:CreateEndpointConfig",
                "sagemaker:CreateMonitoringSchedule",
                "sagemaker:UpdateMonitoringSchedule",
                "sagemaker:CreateNotebookInstance",
                "sagemaker:Create*Job*",
              ],
              "Condition": {
                "StringNotEquals": {
                  "sagemaker:VolumeKmsKey": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "forceVolumeKmsKey",
            },
            {
              "Action": [
                "sagemaker:CreateMonitoringSchedule",
                "sagemaker:UpdateMonitoringSchedule",
                "sagemaker:Create*Job*",
              ],
              "Condition": {
                "StringNotEquals": {
                  "sagemaker:OutputKmsKey": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "forceOutputKmsKey",
            },
            {
              "Action": [
                "sagemaker:CreateMonitoringSchedule",
                "sagemaker:UpdateMonitoringSchedule",
                "sagemaker:Create*Job*",
              ],
              "Condition": {
                "Null": {
                  "sagemaker:InterContainerTrafficEncryption": "true",
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "forceIntercontainerEncryptionNonNull",
            },
            {
              "Action": [
                "sagemaker:CreateMonitoringSchedule",
                "sagemaker:UpdateMonitoringSchedule",
                "sagemaker:Create*Job*",
              ],
              "Condition": {
                "Bool": {
                  "sagemaker:InterContainerTrafficEncryption": "false",
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "forceIntercontainerEncryptionTrue",
            },
            {
              "Action": [
                "sagemaker:Create*Job*",
                "sagemaker:CreateNotebookInstance",
                "sagemaker:CreateMonitoringSchedule",
                "sagemaker:UpdateMonitoringSchedule",
                "sagemaker:CreateModel",
              ],
              "Condition": {
                "Null": {
                  "sagemaker:VpcSubnets": "true",
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "forceJobNotebookVpc",
            },
            {
              "Action": [
                "sagemaker:Create*Job*",
                "sagemaker:CreateNotebookInstance",
                "sagemaker:CreateMonitoringSchedule",
                "sagemaker:UpdateMonitoringSchedule",
                "sagemaker:CreateModel",
              ],
              "Condition": {
                "Null": {
                  "sagemaker:VpcSecurityGroupIds": "true",
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "forceJobNotebookSecurityGroups",
            },
            {
              "Action": "sagemaker:CreateNotebookInstance",
              "Condition": {
                "Null": {
                  "sagemaker:DirectInternetAccess": "true",
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "forceNotebookNonPublicNonNull",
            },
            {
              "Action": "sagemaker:CreateNotebookInstance",
              "Condition": {
                "StringNotEquals": {
                  "sagemaker:DirectInternetAccess": "Disabled",
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "forceNotebookNonPublicDisabled",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResteamexecutionrole",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw1",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/managed-policy/some-prefix-sm-guardrail/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/managed-policy/some-prefix-sm-guardrail/name",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for tagged SageMaker resources are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Network Interface ID not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonec2.html#amazonec2-network-interface",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ecr:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":341280168497:repository/sagemaker*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for SageMaker ECR not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticcontainerregistry.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:*sagemaker*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Log Group and Stream names not known at deployment time.",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "some-prefix-sm-write-2",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sagemaker:AddTags",
                "sagemaker:DeleteTags",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":*",
                  ],
                ],
              },
              "Sid": "AddDeleteTagsSageMaker",
            },
            {
              "Action": [
                "ec2:CreateNetworkInterface",
                "ec2:CreateNetworkInterfacePermission",
                "ec2:CreateVpcEndpoint",
                "ec2:DeleteNetworkInterface",
                "ec2:DeleteNetworkInterfacePermission",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeVpcs",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcEndpoints",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "CreateEC2NetworkInterfaces",
            },
            {
              "Action": [
                "ecr:ListImages",
                "ecr:DescribeImages",
                "ecr:DescribeRepositories",
                "ecr:GetDownloadUrlForLayer",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":341280168497:repository/sagemaker*",
                  ],
                ],
              },
              "Sid": "SageMakerECRReadonly",
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:*sagemaker*",
                  ],
                ],
              },
              "Sid": "CloudWatchSageMaker",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResteamexecutionrole",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw1",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for tagged SageMaker resources are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Network Interface ID not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonec2.html#amazonec2-network-interface",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ecr:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":341280168497:repository/sagemaker*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for SageMaker ECR not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticcontainerregistry.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:*sagemaker*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Log Group and Stream names not known at deployment time.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/managed-policy/some-prefix-sm-write-2/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for tagged SageMaker resources are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
            },
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Network Interface ID not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonec2.html#amazonec2-network-interface",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ecr:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":341280168497:repository/sagemaker*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for SageMaker ECR not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticcontainerregistry.html",
            },
            {
              "applies_to": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "Resource::arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:*sagemaker*",
                    ],
                  ],
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Log Group and Stream names not known at deployment time.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/managed-policy/some-prefix-sm-write-2/name",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Inline policy used only for deployment.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Policy used only for deployment.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Policy used only for deployment.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Policy used only for deployment.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "Arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "DestinationBucketKeyPrefix": "sagemaker-lifecycle-assets/studio/JupyterServer/testing",
        "DestinationBucketName": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "Extract": true,
        "OutputObjectKeys": true,
        "Prune": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": [
          "REPLACED-GENERATED-NAME.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "DestinationBucketKeyPrefix": "sagemaker-lifecycle-assets/studio/KernelGateway/testing",
        "DestinationBucketName": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "Extract": true,
        "OutputObjectKeys": true,
        "Prune": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": [
          "REPLACED-GENERATED-NAME.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/sm-studio-domain-l3-construct/lib/sm-studio-domain-l3-construct.ts:LINE:COL] User Profile and App names not known at deployment time. ListStudioLifecycleConfigs does not take resource. LogStream names not know at deployment time.",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-data-science-team-basic-execution",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:CreateGrant",
                "kms:DescribeKey",
                "kms:ListAliases",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "sagemaker:CreateApp",
                "sagemaker:DeleteApp",
                "sagemaker:DescribeApp",
                "sagemaker:CreateSpace",
                "sagemaker:UpdateSpace",
                "sagemaker:DeleteSpace",
                "sagemaker:DescribeSpace",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":app/",
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "DomainId",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":space/",
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "DomainId",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sagemaker:DescribeDomain",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":domain/",
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "DomainId",
                      ],
                    },
                  ],
                ],
              },
            },
            {
              "Action": "sagemaker:ListStudioLifecycleConfigs",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sagemaker:DescribeStudioLifecycleConfig",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":sagemaker:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":studio-lifecycle-config/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/sagemaker/studio",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/sagemaker/studio:log-stream:*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResteamexecutionrole",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "AppNetworkAccessType": "VpcOnly",
        "AuthMode": "IAM",
        "DefaultUserSettings": {
          "ExecutionRole": {
            "Fn::GetAtt": [
              "RoleResteamexecutionrole",
              "arn",
            ],
          },
          "SecurityGroups": [
            {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "GroupId",
              ],
            },
          ],
        },
        "DomainName": "test-org-test-env-test-domain-test-data-science-team",
        "KmsKeyId": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "SubnetIds": [
          "subnet-id",
        ],
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "VpcId": "vpc-id",
      },
      "Type": "AWS::SageMaker::Domain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "LayerName": "test-org-test-env-test-domain-test-data-science-team-boto3",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/layer-version/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/domain/id",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/domain/subnet-ids",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "subnet-id",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/domain/vpc-id",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "vpc-id",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "DefaultUserSettings": {
          "ExecutionRole": {
            "Fn::GetAtt": [
              "RoleResteamexecutionrole",
              "arn",
            ],
          },
          "JupyterServerAppSettings": {
            "DefaultResourceSpec": {
              "InstanceType": "system",
              "LifecycleConfigArn": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "StudioLifecycleConfigArn",
                ],
              },
            },
            "LifecycleConfigArns": [
              {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "StudioLifecycleConfigArn",
                ],
              },
            ],
          },
          "KernelGatewayAppSettings": {
            "CustomImages": [
              {
                "AppImageConfigName": "appImageConfigName",
                "ImageName": "imageName",
              },
            ],
            "DefaultResourceSpec": {
              "InstanceType": "system",
              "LifecycleConfigArn": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "StudioLifecycleConfigArn",
                ],
              },
            },
            "LifecycleConfigArns": [
              {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "StudioLifecycleConfigArn",
                ],
              },
            ],
          },
          "SecurityGroups": [
            {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "GroupId",
              ],
            },
          ],
        },
        "DomainId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "DomainId",
          ],
        },
        "DomainSettingsForUpdate": {
          "ExecutionRoleIdentityConfig": "USER_PROFILE_NAME",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "Custom::StudioDomainUpdate",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "lifecycleConfigAppType": "JupyterServer",
        "lifecycleConfigContent": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "export ASSETS_DIR=/tmp/lifecycle-assets/JupyterServer
aws s3 cp --recursive s3://",
                {
                  "Ref": "REPLACED-CFN-LOGICAL-ID",
                },
                "/sagemaker-lifecycle-assets/studio/JupyterServer/ $ASSETS_DIR
echo "testing jupyter"
sh $ASSETS_DIR/testing/test.sh",
              ],
            ],
          },
        },
        "lifecycleConfigName": "REPLACED-S3-BUCKET-NAME",
      },
      "Type": "Custom::StudioLifecycleConfig",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/studiolifecycleconfig/jupyterserver/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "StudioLifecycleConfigArn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "lifecycleConfigAppType": "KernelGateway",
        "lifecycleConfigContent": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "export ASSETS_DIR=/tmp/lifecycle-assets/KernelGateway
aws s3 cp --recursive s3://",
                {
                  "Ref": "REPLACED-CFN-LOGICAL-ID",
                },
                "/sagemaker-lifecycle-assets/studio/KernelGateway/ $ASSETS_DIR
echo "testing kernel"
sh $ASSETS_DIR/testing/test.sh",
              ],
            ],
          },
        },
        "lifecycleConfigName": "REPLACED-S3-BUCKET-NAME",
      },
      "Type": "Custom::StudioLifecycleConfig",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/studiolifecycleconfig/kernelgateway/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "StudioLifecycleConfigArn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "DomainId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "DomainId",
          ],
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datascience-team",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-data-science-team",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
          {
            "Key": "userid",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                  },
                  ":example-user-id",
                ],
              ],
            },
          },
        ],
        "UserProfileName": "example-user-id",
        "UserSettings": {
          "ExecutionRole": {
            "Fn::GetAtt": [
              "RoleResteamexecutionrole",
              "arn",
            ],
          },
          "SharingSettings": {
            "NotebookOutputOption": "Allowed",
            "S3KmsKeyId": {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "Arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            "S3OutputPath": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "REPLACED-CFN-LOGICAL-ID",
                  },
                  "/notebooks",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::SageMaker::UserProfile",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SSM permissions scoped to team SSM params by path prefix",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "some-prefix",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:GetRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RoleResteamexecutionrole",
                  "arn",
                ],
              },
              "Sid": "TeamRole",
            },
            {
              "Action": [
                "s3:GetBucketVersioning",
                "s3:GetBucketTagging",
                "s3:GetEncryptionConfiguration",
                "s3:GetIntelligentTieringConfiguration",
                "s3:GetBucketPolicy",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
              "Sid": "TeamBucketGet",
            },
            {
              "Action": [
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
                "ssm:GetParameters",
                "ssm:GetParametersByPath",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/test-org/test-domain/*",
                  ],
                ],
              },
              "Sid": "TeamSSM",
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResteamexecutionrole",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw1",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SSM permissions scoped to team SSM params by path prefix",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/managed-policy/some-prefix/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SSM permissions scoped to team SSM params by path prefix",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team/managed-policy/some-prefix/name",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": {
          "Name": "test_org_test_env_test_domain_test_data_science_team_minilake_util",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "some-prefix-athena-wg-usage",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "athena:BatchGetQueryExecution",
                "athena:ListDataCatalogs",
                "athena:ListDatabases",
                "athena:ListEngineVersions",
                "athena:ListNamedQueries",
                "athena:ListPreparedStatements",
                "athena:ListQueryExecutions",
                "athena:ListTableMetadata",
                "athena:ListTagsForResource",
                "athena:ListWorkGroups",
                "athena:GetDataCatalog",
                "athena:GetDatabase",
                "athena:GetNamedQuery",
                "athena:GetPreparedStatement",
                "athena:GetQueryExecution",
                "athena:GetQueryResults",
                "athena:GetQueryResultsStream",
                "athena:GetTableMetadata",
                "athena:GetWorkGroup",
                "athena:BatchGetNamedQuery",
                "athena:StartQueryExecution",
                "athena:StopQueryExecution",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":athena:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":workgroup/test-org-test-env-test-domain-test-data-science-team-athena",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResteamexecutionrole",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResTeamAthenaResultsAccessrw1",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team-athena/managed-policy/some-prefix-athena-wg-usage/arn",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-data-science-team-athena/managed-policy/some-prefix-athena-wg-usage/name",
        "Tags": {
          "mdaa_cdk_app": "datascience-team",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-data-science-team",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`data-science-team Snapshot Tests DataScience Team App App Snapshot Test 1`] = `
{
  "test-org-test-env-test-domain-test-data-science-team-app": {
    "Description": "(SO0320-datascience-team) Modern Data Architecture Accelerator. Version 1.0.0",
    "Mappings": {
      "LatestNodeRuntimeMap": {
        "af-south-1": {
          "value": "nodejs22.x",
        },
        "ap-east-1": {
          "value": "nodejs22.x",
        },
        "ap-east-2": {
          "value": "nodejs22.x",
        },
        "ap-northeast-1": {
          "value": "nodejs22.x",
        },
        "ap-northeast-2": {
          "value": "nodejs22.x",
        },
        "ap-northeast-3": {
          "value": "nodejs22.x",
        },
        "ap-south-1": {
          "value": "nodejs22.x",
        },
        "ap-south-2": {
          "value": "nodejs22.x",
        },
        "ap-southeast-1": {
          "value": "nodejs22.x",
        },
        "ap-southeast-2": {
          "value": "nodejs22.x",
        },
        "ap-southeast-3": {
          "value": "nodejs22.x",
        },
        "ap-southeast-4": {
          "value": "nodejs22.x",
        },
        "ap-southeast-5": {
          "value": "nodejs22.x",
        },
        "ap-southeast-7": {
          "value": "nodejs22.x",
        },
        "ca-central-1": {
          "value": "nodejs22.x",
        },
        "ca-west-1": {
          "value": "nodejs22.x",
        },
        "cn-north-1": {
          "value": "nodejs22.x",
        },
        "cn-northwest-1": {
          "value": "nodejs22.x",
        },
        "eu-central-1": {
          "value": "nodejs22.x",
        },
        "eu-central-2": {
          "value": "nodejs22.x",
        },
        "eu-isoe-west-1": {
          "value": "nodejs18.x",
        },
        "eu-north-1": {
          "value": "nodejs22.x",
        },
        "eu-south-1": {
          "value": "nodejs22.x",
        },
        "eu-south-2": {
          "value": "nodejs22.x",
        },
        "eu-west-1": {
          "value": "nodejs22.x",
        },
        "eu-west-2": {
          "value": "nodejs22.x",
        },
        "eu-west-3": {
          "value": "nodejs22.x",
        },
        "il-central-1": {
          "value": "nodejs22.x",
        },
        "me-central-1": {
          "value": "nodejs22.x",
        },
        "me-south-1": {
          "value": "nodejs22.x",
        },
        "mx-central-1": {
          "value": "nodejs22.x",
        },
        "sa-east-1": {
          "value": "nodejs22.x",
        },
        "us-east-1": {
          "value": "nodejs22.x",
        },
        "us-east-2": {
          "value": "nodejs22.x",
        },
        "us-gov-east-1": {
          "value": "nodejs22.x",
        },
        "us-gov-west-1": {
          "value": "nodejs22.x",
        },
        "us-iso-east-1": {
          "value": "nodejs18.x",
        },
        "us-iso-west-1": {
          "value": "nodejs18.x",
        },
        "us-isob-east-1": {
          "value": "nodejs18.x",
        },
        "us-isob-west-1": {
          "value": "nodejs18.x",
        },
        "us-west-1": {
          "value": "nodejs22.x",
        },
        "us-west-2": {
          "value": "nodejs22.x",
        },
      },
    },
    "Outputs": {
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:role:deployment:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:role:deployment:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:role:deployment:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:lambda:studiodomainupdatehandler:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:lambda:studiodomainupdatehandler:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:lambda:studiolifecycleconfighandler:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:lambda:studiolifecycleconfighandler:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app-athena:workgroup:name",
        },
        "Value": "test-org-test-env-test-domain-test-data-science-team-app-athena",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app-minilake:bucket:projects:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app-minilake:bucket:projects:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app-minilake:kms:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app-minilake:kms:id",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:managed-policy:someprefixsmwrite:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:managed-policy:someprefixsmwrite:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app-minilake:role:lakeformation:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app-minilake:role:lakeformation:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app-minilake:role:lakeformation:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:managed-policy:someprefixsmread:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:managed-policy:someprefixsmread:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:security-group:testorgtestenvtestdomaintestdatascienceteamapp:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:managed-policy:someprefixsmguardrail:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:managed-policy:someprefixsmguardrail:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:managed-policy:someprefixsmwrite2:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:managed-policy:someprefixsmwrite2:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:layer-version:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:domain:id",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:domain:subnet-ids",
        },
        "Value": "subnet-id",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:domain:vpc-id",
        },
        "Value": "vpc-id",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:studiolifecycleconfig:jupyterserver:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "StudioLifecycleConfigArn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:studiolifecycleconfig:kernelgateway:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "StudioLifecycleConfigArn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:managed-policy:someprefix:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app:managed-policy:someprefix:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app-athena:managed-policy:someprefixathenawgusage:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-data-science-team-app-athena:managed-policy:someprefixathenawgusage:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
    },
    "Parameters": {
      "BootstrapVersion": {
        "Default": "/cdk-bootstrap/hnb659fds/version",
        "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/ml/sm/sg/id",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/test-org/test-domain/caef-bootstrap/role-helper-service-token",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/test-org/test-domain/generated-role/data-scientist/id",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuetestorgtestdomaingeneratedroleteamexecutionroleidC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/test-org/test-domain/generated-role/team-execution-role/id",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
    },
    "Resources": {
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-L1",
                "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment and interacts only with S3.",
              },
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment. Errors will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment and interacts only with S3.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment and interacts only with S3.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment. Errors will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Function is used only as custom resource during CDK deployment. Errors will be handled by CloudFormation.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Environment": {
            "Variables": {
              "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
            },
          },
          "Handler": "index.handler",
          "Layers": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": "python3.11",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 900,
        },
        "Type": "AWS::Lambda::Function",
      },
      "RoleResDataAdminRootAccessrws0": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "name": "Admin",
            "refId": "DataAdminRootAccess-rws-0",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResTeamAthenaResultsAccessrw0": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "arn": {
              "Fn::GetAtt": [
                "RoleResteamexecutionrole",
                "arn",
              ],
            },
            "refId": "TeamAthenaResultsAccess-rw-0",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResTeamAthenaResultsAccessrw1": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "id": {
              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
            "refId": "TeamAthenaResultsAccess-rw-1",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResTeamAthenaResultsAccessrw2": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "immutable": true,
            "name": "AWSReservedSSO_datascientist_abcdefg",
            "refId": "TeamAthenaResultsAccess-rw-2",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResTeamLifecycleAssetsAccessrw0": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "arn": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
            "refId": "TeamLifecycleAssetsAccess-rw-0",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResteamexecutionrole": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "id": {
              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroleteamexecutionroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
            "refId": "team-execution-role",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "Stack description parameter to update on version changes",
          "Name": "/test-org/test-domain/test-data-science-team-app/aws-solution",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "(SO0320-datascience-team) Modern Data Architecture Accelerator. Version 1.0.0",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "RoleName": "test-org-test-env-test-domain-test-data-science-team-ap-73b4f50b",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/*CustomCDK**",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/*CustomCDK**",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/role/deployment/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/role/deployment/id",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/role/deployment/name",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Environment": {
            "Variables": {
              "LOG_LEVEL": "INFO",
              "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-data-science-team-ap-44301926",
          "Handler": "update_domain.lambda_handler",
          "Layers": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": "python3.13",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 120,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/lambda/studiodomainupdate-handler/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/lambda/studiodomainupdate-handler/name",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "sagemaker:UpdateDomain",
                  "sagemaker:DescribeDomain",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "DomainArn",
                  ],
                },
              },
              {
                "Action": "iam:PassRole",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "RoleResteamexecutionrole",
                    "arn",
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "StudioDomainUpdate-handler",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "RoleName": "test-org-test-env-test-domain-test-data-science-team-ap-44301926",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-ap-44301926*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-ap-44301926*",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-L1",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
              },
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-data-science-team-app/custom-StudioDomainUpdate-provider)",
          "Environment": {
            "Variables": {
              "USER_ON_EVENT_FUNCTION_ARN": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-data-science-team-app-6d77f95",
          "Handler": "framework.onEvent",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": {
            "Fn::FindInMap": [
              "LatestNodeRuntimeMap",
              {
                "Ref": "AWS::Region",
              },
              "value",
            ],
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 900,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Description": "CR Role",
          "RoleName": "test-org-test-env-test-domain-test-data-science-team-app-6d77f95",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-app-6d77f95*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-app-6d77f95*",
                    ],
                  ],
                },
              },
              {
                "Action": "lambda:InvokeFunction",
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        ":*",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": "lambda:GetFunction",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Environment": {
            "Variables": {
              "LOG_LEVEL": "INFO",
              "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-data-science-team-a--57b934f3",
          "Handler": "lifecycle.lambda_handler",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": "python3.13",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 120,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/lambda/studiolifecycleconfig-handler/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/lambda/studiolifecycleconfig-handler/name",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Lifecycle names not known at deployment time.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "sagemaker:CreateStudioLifecycleConfig",
                  "sagemaker:DeleteStudioLifecycleConfig",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":studio-lifecycle-config/*",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "StudioLifecycleConfig-handler",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "RoleName": "test-org-test-env-test-domain-test-data-science-team-a--57b934f3",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-a--57b934f3*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-a--57b934f3*",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-L1",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
              },
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-data-science-team-app/custom-StudioLifecycleConfig-provider)",
          "Environment": {
            "Variables": {
              "USER_ON_EVENT_FUNCTION_ARN": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-data-science-team-ap-25970a8e",
          "Handler": "framework.onEvent",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": {
            "Fn::FindInMap": [
              "LatestNodeRuntimeMap",
              {
                "Ref": "AWS::Region",
              },
              "value",
            ],
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 900,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Description": "CR Role",
          "RoleName": "test-org-test-env-test-domain-test-data-science-team-ap-25970a8e",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-ap-25970a8e*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-ap-25970a8e*",
                    ],
                  ],
                },
              },
              {
                "Action": "lambda:InvokeFunction",
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        ":*",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": "lambda:GetFunction",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "test-org-test-env-test-domain-test-data-science-team-app-athena",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "WorkGroupConfiguration": {
            "EnforceWorkGroupConfiguration": true,
            "PublishCloudWatchMetricsEnabled": true,
            "ResultConfiguration": {
              "EncryptionConfiguration": {
                "EncryptionOption": "SSE_KMS",
                "KmsKey": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
              "OutputLocation": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "REPLACED-CFN-LOGICAL-ID",
                    },
                    "/athena-results/",
                  ],
                ],
              },
            },
          },
        },
        "Type": "AWS::Athena::WorkGroup",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app-athena/workgroup/name",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test-org-test-env-test-domain-test-data-science-team-app-athena",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-S1",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "HIPAA.Security-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "PCI.DSS.321-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "BucketEncryption": {
            "ServerSideEncryptionConfiguration": [
              {
                "BucketKeyEnabled": true,
                "ServerSideEncryptionByDefault": {
                  "KMSMasterKeyID": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  "SSEAlgorithm": "aws:kms",
                },
              },
            ],
          },
          "BucketName": "REPLACED-S3-BUCKET-NAME",
          "PublicAccessBlockConfiguration": {
            "BlockPublicAcls": true,
            "BlockPublicPolicy": true,
            "IgnorePublicAcls": true,
            "RestrictPublicBuckets": true,
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "VersioningConfiguration": {
            "Status": "Enabled",
          },
        },
        "Type": "AWS::S3::Bucket",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-S1",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "HIPAA.Security-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "PCI.DSS.321-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "Bucket": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "s3:*",
                "Condition": {
                  "Bool": {
                    "aws:SecureTransport": "false",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": "s3:PutObject",
                "Condition": {
                  "StringEquals": {
                    "s3:x-amz-server-side-encryption": "AES256",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "DenyAES",
              },
              {
                "Action": "s3:PutObject",
                "Condition": {
                  "StringNotLikeIfExists": {
                    "s3:x-amz-server-side-encryption-aws-kms-key-id": {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "ForceKMS",
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObjectTagging",
                  "s3:DeleteObject",
                  "s3:DeleteObjectVersion",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataAdminRootAccessrws0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "/_ReadWriteSuper",
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObjectTagging",
                  "s3:DeleteObject",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw2",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/athena-results/*",
                    ],
                  ],
                },
                "Sid": "/athena-results_ReadWrite",
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObjectTagging",
                  "s3:DeleteObject",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw2",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/projects/*",
                    ],
                  ],
                },
                "Sid": "/projects/_ReadWrite",
              },
              {
                "Action": "s3:GetObject*",
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw2",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/sagemaker-lifecycle-assets/*",
                    ],
                  ],
                },
                "Sid": "/sagemaker-lifecycle-assets/_Read",
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObjectTagging",
                  "s3:DeleteObject",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamLifecycleAssetsAccessrw0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/sagemaker-lifecycle-assets/*",
                    ],
                  ],
                },
                "Sid": "/sagemaker-lifecycle-assets/_ReadWrite",
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObjectTagging",
                  "s3:DeleteObject",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw2",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/sagemaker/*",
                    ],
                  ],
                },
                "Sid": "/sagemaker/_ReadWrite",
              },
              {
                "Action": "s3:PutObject",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        "/athena-results/",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        "/projects/",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        "/sagemaker-lifecycle-assets/",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        "/sagemaker/",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": [
                  "s3:List*",
                  "s3:GetBucket*",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataAdminRootAccessrws0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw2",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamLifecycleAssetsAccessrw0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                ],
                "Sid": "BucketAllow",
              },
              {
                "Action": [
                  "s3:PutObject*",
                  "s3:GetObject*",
                  "s3:DeleteObject*",
                ],
                "Condition": {
                  "ForAnyValue:StringNotLike": {
                    "aws:PrincipalArn": [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                    ],
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataAdminRootAccessrws0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw2",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamLifecycleAssetsAccessrw0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Deny",
                "NotResource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/inventory/*",
                    ],
                  ],
                },
                "Principal": {
                  "AWS": "*",
                },
                "Sid": "BucketDeny",
              },
            ],
            "Version": "2012-10-17",
          },
        },
        "Type": "AWS::S3::BucketPolicy",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app-minilake/bucket/projects/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app-minilake/bucket/projects/name",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AliasName": "alias/test-org-test-env-test-domain-test-data-science-team-app-minilake",
          "TargetKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::KMS::Alias",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Properties": {
          "EnableKeyRotation": true,
          "Enabled": true,
          "KeyPolicy": {
            "Statement": [
              {
                "Action": "kms:*",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
                "Resource": "*",
              },
              {
                "Action": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:ReEncryptFrom",
                  "kms:ReEncryptTo",
                  "kms:GenerateDataKey",
                  "kms:GenerateDataKeyWithoutPlaintext",
                  "kms:GenerateDataKeyPair",
                  "kms:GenerateDataKeyPairWithoutPlaintext",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataAdminRootAccessrws0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw2",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw2",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw2",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamLifecycleAssetsAccessrw0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw2",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "test-org-test-env-test-domain-test-data-science-team-app-minilake-usage-stmt",
              },
              {
                "Action": [
                  "kms:Encrypt",
                  "kms:ReEncryptFrom",
                  "kms:ReEncryptTo",
                  "kms:GenerateDataKey",
                  "kms:GenerateDataKeyWithoutPlaintext",
                  "kms:GenerateDataKeyPair",
                  "kms:GenerateDataKeyPairWithoutPlaintext",
                ],
                "Effect": "Allow",
                "Principal": {
                  "Service": "s3.amazonaws.com",
                },
                "Resource": "*",
              },
            ],
            "Version": "2012-10-17",
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::KMS::Key",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app-minilake/kms/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app-minilake/kms/id",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-L1",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
              },
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-data-science-team-app/team/datalake-folder-cr-provider)",
          "Environment": {
            "Variables": {
              "USER_ON_EVENT_FUNCTION_ARN": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-data-science-team-ap-218f2169",
          "Handler": "framework.onEvent",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": {
            "Fn::FindInMap": [
              "LatestNodeRuntimeMap",
              {
                "Ref": "AWS::Region",
              },
              "value",
            ],
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 900,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "bucket_name": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "folder_name": "/athena-results",
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "bucket_name": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "folder_name": "/sagemaker-lifecycle-assets/",
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "bucket_name": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "folder_name": "/projects/",
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "bucket_name": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "folder_name": "/sagemaker/",
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":*job/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":*job-definition/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Jobs not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  "Action::sagemaker:Create*Job",
                  "Action::sagemaker:Create*JobDefinition",
                  "Action::sagemaker:Delete*JobDefinition",
                  "Action::sagemaker:Delete*Job",
                  "Action::sagemaker:Update*Job",
                  "Action::sagemaker:Stop*Job",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Actions scoped for job management permissions, taking into account policy length limits. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":monitoring-schedule/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for monitoring schedules not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":model-card/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for model cards not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":pipeline/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Pipelines not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":model/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Models not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":model-package/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":model-package-group/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for model packages not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":project/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Projects not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":endpoint/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":endpoint-config/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for endpoints are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":experiment*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for experiments are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":notebook-instance/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Notebook Instances not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":notebook-instance-lifecycle-config/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Notebook Lifecycle Configs not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":feature-group/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":feature-group/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":feature-group/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":experiment/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Experiments not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "some-prefix-sm-write",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "iam:PassRole",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "RoleResteamexecutionrole",
                    "arn",
                  ],
                },
                "Sid": "TeamRole",
              },
              {
                "Action": [
                  "sagemaker:Create*Job",
                  "sagemaker:Create*JobDefinition",
                  "sagemaker:Delete*JobDefinition",
                  "sagemaker:Update*Job",
                  "sagemaker:Stop*Job",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":*job/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":*job-definition/*",
                      ],
                    ],
                  },
                ],
                "Sid": "CreateandManageJobs",
              },
              {
                "Action": [
                  "sagemaker:CreateMonitoringSchedule",
                  "sagemaker:UpdateMonitoringSchedule",
                  "sagemaker:DeleteMonitoringSchedule",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":monitoring-schedule/*",
                    ],
                  ],
                },
                "Sid": "CreateandManageModelMonitoring",
              },
              {
                "Action": [
                  "sagemaker:CreateModelCard",
                  "sagemaker:DeleteModelCard",
                  "sagemaker:UpdateModelCard",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model-card/*",
                    ],
                  ],
                },
                "Sid": "CreateandManageModelCards",
              },
              {
                "Action": [
                  "sagemaker:CreatePipeline",
                  "sagemaker:DeletePipeline",
                  "sagemaker:RetryPipelineExecution",
                  "sagemaker:StartPipelineExecution",
                  "sagemaker:StopPipelineExecution",
                  "sagemaker:SendPipelineExecutionStepSuccess",
                  "sagemaker:SendPipelineExecutionStepFailure",
                  "sagemaker:UpdatePipeline",
                  "sagemaker:UpdatePipelineExecution",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":pipeline/*",
                    ],
                  ],
                },
                "Sid": "CreateandManagePipelines",
              },
              {
                "Action": [
                  "sagemaker:CreateModel",
                  "sagemaker:DeleteModel",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":model/*",
                    ],
                  ],
                },
                "Sid": "CreateAndManageModels",
              },
              {
                "Action": [
                  "sagemaker:CreateModelPackage",
                  "sagemaker:DeleteModelPackage",
                  "sagemaker:UpdateModelPackage",
                  "sagemaker:BatchDescribeModelPackage",
                  "sagemaker:CreateModelPackageGroup",
                  "sagemaker:DeleteModelPackageGroup",
                  "sagemaker:DeleteModelPackageGroupPolicy",
                  "sagemaker:PutModelPackageGroupPolicy",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":model-package/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":model-package-group/*",
                      ],
                    ],
                  },
                ],
                "Sid": "CreateAndManageModelPackages",
              },
              {
                "Action": [
                  "sagemaker:CreateProject",
                  "sagemaker:DeleteProject",
                  "sagemaker:UpdateProject",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":project/*",
                    ],
                  ],
                },
                "Sid": "CreateAndManageProjects",
              },
              {
                "Action": "kms:CreateGrant",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "Sid": "SageMakerKmsAccess",
              },
              {
                "Action": [
                  "sagemaker:CreateEndpoint",
                  "sagemaker:DeleteEndpoint",
                  "sagemaker:UpdateEndpoint",
                  "sagemaker:UpdateEndpointWeightsAndCapacities",
                  "sagemaker:CreateEndpointConfig",
                  "sagemaker:DeleteEndpointConfig",
                  "sagemaker:InvokeEndpoint",
                  "sagemaker:InvokeEndpointAsync",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":endpoint/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":endpoint-config/*",
                      ],
                    ],
                  },
                ],
                "Sid": "CreateAndManageEndpoints",
              },
              {
                "Action": [
                  "sagemaker:CreateTrial",
                  "sagemaker:CreateTrialComponent",
                  "sagemaker:AssociateTrialComponent",
                  "sagemaker:DisassociateTrialComponent",
                  "sagemaker:DeleteTrial",
                  "sagemaker:DeleteTrialComponent",
                  "sagemaker:UpdateTrial",
                  "sagemaker:UpdateTrialComponent",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":experiment*",
                    ],
                  ],
                },
                "Sid": "CreateAndManageTrials",
              },
              {
                "Action": [
                  "sagemaker:CreateNotebookInstance",
                  "sagemaker:UpdateNotebookInstance",
                  "sagemaker:DeleteNotebookInstance",
                  "sagemaker:StartNotebookInstance",
                  "sagemaker:StopNotebookInstance",
                  "sagemaker:CreatePresignedNotebookInstanceUrl",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":notebook-instance/*",
                    ],
                  ],
                },
                "Sid": "CreateAndManageNotebooks",
              },
              {
                "Action": [
                  "sagemaker:CreateNotebookInstanceLifecycleConfig",
                  "sagemaker:UpdateNotebookInstanceLifecycleConfig",
                  "sagemaker:DeleteNotebookInstanceLifecycleConfig",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":notebook-instance-lifecycle-config/*",
                    ],
                  ],
                },
                "Sid": "CreateAndManageNotebookLifecycles",
              },
              {
                "Action": [
                  "sagemaker:PutRecord",
                  "sagemaker:DeleteRecord",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":feature-group/*",
                    ],
                  ],
                },
                "Sid": "PutRecordFeatureGroups",
              },
              {
                "Action": "sagemaker:CreateFeatureGroup",
                "Condition": {
                  "StringEquals": {
                    "sagemaker:FeatureGroupOnlineStoreKmsKey": {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":feature-group/*",
                    ],
                  ],
                },
                "Sid": "CreateOnlineFeatureGroups",
              },
              {
                "Action": "sagemaker:CreateFeatureGroup",
                "Condition": {
                  "StringEquals": {
                    "sagemaker:FeatureGroupOfflineStoreKmsKey": {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                  },
                  "StringLike": {
                    "sagemaker:FeatureGroupOfflineStoreS3Uri": {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "Arn",
                            ],
                          },
                          "/*",
                        ],
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":feature-group/*",
                    ],
                  ],
                },
                "Sid": "CreateOfflineFeatureGroups",
              },
              {
                "Action": [
                  "sagemaker:DeleteFeatureGroup",
                  "sagemaker:UpdateFeatureGroup",
                  "sagemaker:UpdateFeatureMetadata",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":feature-group/*",
                    ],
                  ],
                },
                "Sid": "ManageFeatureGroups",
              },
              {
                "Action": [
                  "sagemaker:CreateExperiment",
                  "sagemaker:DeleteExperiment",
                  "sagemaker:UpdateExperiment",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":experiment/*",
                    ],
                  ],
                },
                "Sid": "CreateAndManageExperiments",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResteamexecutionrole",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw1",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":*job/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":*job-definition/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Jobs not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  "Action::sagemaker:Create*Job",
                  "Action::sagemaker:Create*JobDefinition",
                  "Action::sagemaker:Delete*JobDefinition",
                  "Action::sagemaker:Delete*Job",
                  "Action::sagemaker:Update*Job",
                  "Action::sagemaker:Stop*Job",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Actions scoped for job management permissions, taking into account policy length limits. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":monitoring-schedule/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for monitoring schedules not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":model-card/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for model cards not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":pipeline/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Pipelines not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":model/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Models not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":model-package/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":model-package-group/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for model packages not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":project/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Projects not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":endpoint/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":endpoint-config/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for endpoints are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":experiment*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for experiments are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":notebook-instance/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Notebook Instances not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":notebook-instance-lifecycle-config/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Notebook Lifecycle Configs not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":feature-group/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":feature-group/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":feature-group/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":experiment/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Experiments not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/managed-policy/some-prefix-sm-write/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":*job/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":*job-definition/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Jobs not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  "Action::sagemaker:Create*Job",
                  "Action::sagemaker:Create*JobDefinition",
                  "Action::sagemaker:Delete*JobDefinition",
                  "Action::sagemaker:Delete*Job",
                  "Action::sagemaker:Update*Job",
                  "Action::sagemaker:Stop*Job",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Actions scoped for job management permissions, taking into account policy length limits. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":monitoring-schedule/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for monitoring schedules not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":model-card/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for model cards not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":pipeline/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Pipelines not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":model/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Models not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":model-package/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":model-package-group/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for model packages not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":project/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Projects not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":endpoint/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":endpoint-config/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for endpoints are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":experiment*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for experiments are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":notebook-instance/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Notebook Instances not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":notebook-instance-lifecycle-config/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Notebook Lifecycle Configs not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":feature-group/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":feature-group/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":feature-group/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for FeatureGroups not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":experiment/*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Experiments not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/managed-policy/some-prefix-sm-write/name",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Environment": {
            "Variables": {
              "LOG_LEVEL": "INFO",
              "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-data-science-team-a--6f8a0433",
          "Handler": "datalake_folder.lambda_handler",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": "python3.13",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 120,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Description": "CR Role",
          "RoleName": "test-org-test-env-test-domain-test-data-science-team-a--6f8a0433",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-app-minilake-folder-cr*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-app-minilake-folder-cr*",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Description": "CR Role",
          "RoleName": "test-org-test-env-test-domain-test-data-science-team-a--576feb4c",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-ap-218f2169*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-data-science-team-ap-218f2169*",
                    ],
                  ],
                },
              },
              {
                "Action": "lambda:InvokeFunction",
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        ":*",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": "lambda:GetFunction",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lakeformation.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Description": "Role for accessing the data lake via LakeFormation.",
          "RoleName": "test-org-test-env-test-domain-test-data-science-team-ap-6765dfb4",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app-minilake/role/lake-formation/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app-minilake/role/lake-formation/id",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app-minilake/role/lake-formation/name",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "applies_to": [
                  "Resource::*",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SageMaker Search does not take a resource. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  "Resource::*",
                  "Action::sagemaker:List*",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SageMaker List does not take a resource. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  "Resource::*",
                  "Action::sagemaker:Describe*",
                  "Action::sagemaker:Get*",
                  "Action::sagemaker:BatchDescribe*",
                  "Action::sagemaker:BatchGet*",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Describe and Get not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:*sagemaker*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Log Group and Stream names not known at deployment time.",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "some-prefix-sm-read",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "sagemaker:Search",
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "SageMakerSearch",
              },
              {
                "Action": "sagemaker:List*",
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "SageMakerList",
              },
              {
                "Action": [
                  "sagemaker:Describe*",
                  "sagemaker:BatchDescribe*",
                  "sagemaker:Get*",
                  "sagemaker:BatchGet*",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "SageMakerDescribeGet",
              },
              {
                "Action": [
                  "logs:GetLogEvents",
                  "logs:DescribeLogGroups",
                  "logs:DescribeLogStreams",
                  "logs:FilterLogEvents",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:*sagemaker*",
                    ],
                  ],
                },
                "Sid": "CloudWatchSageMaker",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResteamexecutionrole",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw1",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "applies_to": [
                  "Resource::*",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SageMaker Search does not take a resource. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  "Resource::*",
                  "Action::sagemaker:List*",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SageMaker List does not take a resource. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  "Resource::*",
                  "Action::sagemaker:Describe*",
                  "Action::sagemaker:Get*",
                  "Action::sagemaker:BatchDescribe*",
                  "Action::sagemaker:BatchGet*",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Describe and Get not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:*sagemaker*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Log Group and Stream names not known at deployment time.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/managed-policy/some-prefix-sm-read/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "applies_to": [
                  "Resource::*",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SageMaker Search does not take a resource. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  "Resource::*",
                  "Action::sagemaker:List*",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SageMaker List does not take a resource. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  "Resource::*",
                  "Action::sagemaker:Describe*",
                  "Action::sagemaker:Get*",
                  "Action::sagemaker:BatchDescribe*",
                  "Action::sagemaker:BatchGet*",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for Describe and Get not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:*sagemaker*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Log Group and Stream names not known at deployment time.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/managed-policy/some-prefix-sm-read/name",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "GroupDescription": "test-org-test-env-test-domain-test-data-science-team-app/team/security-group",
          "GroupName": "test-org-test-env-test-domain-test-data-science-team-app-test-org-test-env-test-domain-test-data-science-team-app",
          "SecurityGroupEgress": [
            {
              "CidrIp": "255.255.255.255/32",
              "Description": "Disallow all traffic",
              "FromPort": 252,
              "IpProtocol": "icmp",
              "ToPort": 86,
            },
          ],
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "VpcId": "vpc-id",
        },
        "Type": "AWS::EC2::SecurityGroup",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "CidrIp": "10.0.0.0/24",
          "Description": "from 10.0.0.0/24:tcp PORT 443",
          "FromPort": 443,
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "tcp",
          "ToPort": 443,
        },
        "Type": "AWS::EC2::SecurityGroupIngress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": {
            "Fn::Join": [
              "",
              [
                "from ",
                {
                  "Ref": "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter",
                },
                ":tcp PORT 443",
              ],
            ],
          },
          "FromPort": 443,
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "tcp",
          "SourceSecurityGroupId": {
            "Ref": "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "ToPort": 443,
        },
        "Type": "AWS::EC2::SecurityGroupIngress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
              {
                "id": "HIPAA.Security-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
              {
                "id": "PCI.DSS.321-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
            ],
          },
        },
        "Properties": {
          "Description": "Self-Ref",
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "-1",
          "SourceSecurityGroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
        },
        "Type": "AWS::EC2::SecurityGroupIngress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/security-group/test-org-test-env-test-domain-test-data-science-team-app/id",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "CidrIp": "0.0.0.0/0",
          "Description": "to 0.0.0.0/0:tcp PORT 443",
          "FromPort": 443,
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "tcp",
          "ToPort": 443,
        },
        "Type": "AWS::EC2::SecurityGroupEgress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": {
            "Fn::Join": [
              "",
              [
                "to ",
                {
                  "Ref": "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter",
                },
                ":tcp PORT 443",
              ],
            ],
          },
          "DestinationSecurityGroupId": {
            "Ref": "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "FromPort": 443,
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "tcp",
          "ToPort": 443,
        },
        "Type": "AWS::EC2::SecurityGroupEgress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": {
            "Fn::Join": [
              "",
              [
                "prefix list for com.amazonaws.",
                {
                  "Ref": "AWS::Region",
                },
                ".dynamodb",
              ],
            ],
          },
          "DestinationPrefixListId": "pl-4ea54027",
          "FromPort": 443,
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "tcp",
          "ToPort": 443,
        },
        "Type": "AWS::EC2::SecurityGroupEgress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": {
            "Fn::Join": [
              "",
              [
                "prefix list for com.amazonaws.",
                {
                  "Ref": "AWS::Region",
                },
                ".s3",
              ],
            ],
          },
          "DestinationPrefixListId": "pl-7da54014",
          "FromPort": 443,
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "tcp",
          "ToPort": 443,
        },
        "Type": "AWS::EC2::SecurityGroupEgress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
              {
                "id": "HIPAA.Security-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
              {
                "id": "PCI.DSS.321-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
            ],
          },
        },
        "Properties": {
          "Description": "Self-Ref",
          "DestinationSecurityGroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "-1",
        },
        "Type": "AWS::EC2::SecurityGroupEgress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "some-prefix-sm-guardrail",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "sagemaker:CreateEndpointConfig",
                  "sagemaker:CreateMonitoringSchedule",
                  "sagemaker:UpdateMonitoringSchedule",
                  "sagemaker:CreateNotebookInstance",
                  "sagemaker:Create*Job*",
                ],
                "Condition": {
                  "StringNotEquals": {
                    "sagemaker:VolumeKmsKey": {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                  },
                },
                "Effect": "Deny",
                "Resource": "*",
                "Sid": "forceVolumeKmsKey",
              },
              {
                "Action": [
                  "sagemaker:CreateMonitoringSchedule",
                  "sagemaker:UpdateMonitoringSchedule",
                  "sagemaker:Create*Job*",
                ],
                "Condition": {
                  "StringNotEquals": {
                    "sagemaker:OutputKmsKey": {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                  },
                },
                "Effect": "Deny",
                "Resource": "*",
                "Sid": "forceOutputKmsKey",
              },
              {
                "Action": [
                  "sagemaker:CreateMonitoringSchedule",
                  "sagemaker:UpdateMonitoringSchedule",
                  "sagemaker:Create*Job*",
                ],
                "Condition": {
                  "Null": {
                    "sagemaker:InterContainerTrafficEncryption": "true",
                  },
                },
                "Effect": "Deny",
                "Resource": "*",
                "Sid": "forceIntercontainerEncryptionNonNull",
              },
              {
                "Action": [
                  "sagemaker:CreateMonitoringSchedule",
                  "sagemaker:UpdateMonitoringSchedule",
                  "sagemaker:Create*Job*",
                ],
                "Condition": {
                  "Bool": {
                    "sagemaker:InterContainerTrafficEncryption": "false",
                  },
                },
                "Effect": "Deny",
                "Resource": "*",
                "Sid": "forceIntercontainerEncryptionTrue",
              },
              {
                "Action": [
                  "sagemaker:Create*Job*",
                  "sagemaker:CreateNotebookInstance",
                  "sagemaker:CreateMonitoringSchedule",
                  "sagemaker:UpdateMonitoringSchedule",
                  "sagemaker:CreateModel",
                ],
                "Condition": {
                  "Null": {
                    "sagemaker:VpcSubnets": "true",
                  },
                },
                "Effect": "Deny",
                "Resource": "*",
                "Sid": "forceJobNotebookVpc",
              },
              {
                "Action": [
                  "sagemaker:Create*Job*",
                  "sagemaker:CreateNotebookInstance",
                  "sagemaker:CreateMonitoringSchedule",
                  "sagemaker:UpdateMonitoringSchedule",
                  "sagemaker:CreateModel",
                ],
                "Condition": {
                  "Null": {
                    "sagemaker:VpcSecurityGroupIds": "true",
                  },
                },
                "Effect": "Deny",
                "Resource": "*",
                "Sid": "forceJobNotebookSecurityGroups",
              },
              {
                "Action": "sagemaker:CreateNotebookInstance",
                "Condition": {
                  "Null": {
                    "sagemaker:DirectInternetAccess": "true",
                  },
                },
                "Effect": "Deny",
                "Resource": "*",
                "Sid": "forceNotebookNonPublicNonNull",
              },
              {
                "Action": "sagemaker:CreateNotebookInstance",
                "Condition": {
                  "StringNotEquals": {
                    "sagemaker:DirectInternetAccess": "Disabled",
                  },
                },
                "Effect": "Deny",
                "Resource": "*",
                "Sid": "forceNotebookNonPublicDisabled",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResteamexecutionrole",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw1",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/managed-policy/some-prefix-sm-guardrail/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/managed-policy/some-prefix-sm-guardrail/name",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for tagged SageMaker resources are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  "Resource::*",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Network Interface ID not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonec2.html#amazonec2-network-interface",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":ecr:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":341280168497:repository/sagemaker*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for SageMaker ECR not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticcontainerregistry.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:*sagemaker*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Log Group and Stream names not known at deployment time.",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "some-prefix-sm-write-2",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "sagemaker:AddTags",
                  "sagemaker:DeleteTags",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":*",
                    ],
                  ],
                },
                "Sid": "AddDeleteTagsSageMaker",
              },
              {
                "Action": [
                  "ec2:CreateNetworkInterface",
                  "ec2:CreateNetworkInterfacePermission",
                  "ec2:CreateVpcEndpoint",
                  "ec2:DeleteNetworkInterface",
                  "ec2:DeleteNetworkInterfacePermission",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeVpcs",
                  "ec2:DescribeDhcpOptions",
                  "ec2:DescribeVpcEndpoints",
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "CreateEC2NetworkInterfaces",
              },
              {
                "Action": [
                  "ecr:ListImages",
                  "ecr:DescribeImages",
                  "ecr:DescribeRepositories",
                  "ecr:GetDownloadUrlForLayer",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ecr:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":341280168497:repository/sagemaker*",
                    ],
                  ],
                },
                "Sid": "SageMakerECRReadonly",
              },
              {
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:*sagemaker*",
                    ],
                  ],
                },
                "Sid": "CloudWatchSageMaker",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResteamexecutionrole",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw1",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for tagged SageMaker resources are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  "Resource::*",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Network Interface ID not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonec2.html#amazonec2-network-interface",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":ecr:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":341280168497:repository/sagemaker*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for SageMaker ECR not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticcontainerregistry.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:*sagemaker*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Log Group and Stream names not known at deployment time.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/managed-policy/some-prefix-sm-write-2/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for tagged SageMaker resources are not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsagemaker.html",
              },
              {
                "applies_to": [
                  "Resource::*",
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Network Interface ID not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonec2.html#amazonec2-network-interface",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":ecr:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":341280168497:repository/sagemaker*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Resource names for SageMaker ECR not known at deployment time. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticcontainerregistry.html",
              },
              {
                "applies_to": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "Resource::arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:*sagemaker*",
                      ],
                    ],
                  },
                ],
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] Log Group and Stream names not known at deployment time.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/managed-policy/some-prefix-sm-write-2/name",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Inline policy used only for deployment.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Policy used only for deployment.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Policy used only for deployment.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/ai/sm-shared/lib/sm-shared.ts:LINE:COL] Policy used only for deployment.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:GetBucket*",
                  "s3:List*",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":s3:::",
                        {
                          "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                        },
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":s3:::",
                        {
                          "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                        },
                        "/*",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:GetBucket*",
                  "s3:List*",
                  "s3:DeleteObject*",
                  "s3:PutObject",
                  "s3:PutObjectLegalHold",
                  "s3:PutObjectRetention",
                  "s3:PutObjectTagging",
                  "s3:PutObjectVersionTagging",
                  "s3:Abort*",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":s3:::",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":s3:::",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                        "/*",
                      ],
                    ],
                  },
                ],
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "Arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "Content": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Description": "/opt/awscli/aws",
        },
        "Type": "AWS::Lambda::LayerVersion",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "DestinationBucketKeyPrefix": "sagemaker-lifecycle-assets/studio/JupyterServer/testing",
          "DestinationBucketName": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "Extract": true,
          "OutputObjectKeys": true,
          "Prune": true,
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "SourceBucketNames": [
            {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
          ],
          "SourceObjectKeys": [
            "REPLACED-GENERATED-NAME.zip",
          ],
        },
        "Type": "Custom::CDKBucketDeployment",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "Content": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Description": "/opt/awscli/aws",
        },
        "Type": "AWS::Lambda::LayerVersion",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "DestinationBucketKeyPrefix": "sagemaker-lifecycle-assets/studio/KernelGateway/testing",
          "DestinationBucketName": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "Extract": true,
          "OutputObjectKeys": true,
          "Prune": true,
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "SourceBucketNames": [
            {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
          ],
          "SourceObjectKeys": [
            "REPLACED-GENERATED-NAME.zip",
          ],
        },
        "Type": "Custom::CDKBucketDeployment",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/sm-studio-domain-l3-construct/lib/sm-studio-domain-l3-construct.ts:LINE:COL] User Profile and App names not known at deployment time. ListStudioLifecycleConfigs does not take resource. LogStream names not know at deployment time.",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-data-science-team-app-basic-execution",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:ReEncryptFrom",
                  "kms:ReEncryptTo",
                  "kms:GenerateDataKey",
                  "kms:GenerateDataKeyWithoutPlaintext",
                  "kms:GenerateDataKeyPair",
                  "kms:GenerateDataKeyPairWithoutPlaintext",
                  "kms:CreateGrant",
                  "kms:DescribeKey",
                  "kms:ListAliases",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
              {
                "Action": [
                  "sagemaker:CreateApp",
                  "sagemaker:DeleteApp",
                  "sagemaker:DescribeApp",
                  "sagemaker:CreateSpace",
                  "sagemaker:UpdateSpace",
                  "sagemaker:DeleteSpace",
                  "sagemaker:DescribeSpace",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":app/",
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "DomainId",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":sagemaker:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":space/",
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "DomainId",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": "sagemaker:DescribeDomain",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":domain/",
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "DomainId",
                        ],
                      },
                    ],
                  ],
                },
              },
              {
                "Action": "sagemaker:ListStudioLifecycleConfigs",
                "Effect": "Allow",
                "Resource": "*",
              },
              {
                "Action": "sagemaker:DescribeStudioLifecycleConfig",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sagemaker:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":studio-lifecycle-config/*",
                    ],
                  ],
                },
              },
              {
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:DescribeLogGroups",
                  "logs:DescribeLogStreams",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/sagemaker/studio",
                    ],
                  ],
                },
              },
              {
                "Action": [
                  "logs:CreateLogStream",
                  "logs:PutLogEvents",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/sagemaker/studio:log-stream:*",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResteamexecutionrole",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "AppNetworkAccessType": "VpcOnly",
          "AuthMode": "IAM",
          "DefaultUserSettings": {
            "ExecutionRole": {
              "Fn::GetAtt": [
                "RoleResteamexecutionrole",
                "arn",
              ],
            },
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "GroupId",
                ],
              },
            ],
          },
          "DomainName": "test-org-test-env-test-domain-test-data-science-team-app",
          "KmsKeyId": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "Arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          "SubnetIds": [
            "subnet-id",
          ],
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "VpcId": "vpc-id",
        },
        "Type": "AWS::SageMaker::Domain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "Content": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "LayerName": "test-org-test-env-test-domain-test-data-science-team-app-boto3",
        },
        "Type": "AWS::Lambda::LayerVersion",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/layer-version/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/domain/id",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/domain/subnet-ids",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "subnet-id",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/domain/vpc-id",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "vpc-id",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "DefaultUserSettings": {
            "ExecutionRole": {
              "Fn::GetAtt": [
                "RoleResteamexecutionrole",
                "arn",
              ],
            },
            "JupyterServerAppSettings": {
              "DefaultResourceSpec": {
                "InstanceType": "system",
                "LifecycleConfigArn": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "StudioLifecycleConfigArn",
                  ],
                },
              },
              "LifecycleConfigArns": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "StudioLifecycleConfigArn",
                  ],
                },
              ],
            },
            "KernelGatewayAppSettings": {
              "CustomImages": [
                {
                  "AppImageConfigName": "appImageConfigName",
                  "ImageName": "imageName",
                },
              ],
              "DefaultResourceSpec": {
                "InstanceType": "system",
                "LifecycleConfigArn": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "StudioLifecycleConfigArn",
                  ],
                },
              },
              "LifecycleConfigArns": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "StudioLifecycleConfigArn",
                  ],
                },
              ],
            },
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "GroupId",
                ],
              },
            ],
          },
          "DomainId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "DomainId",
            ],
          },
          "DomainSettingsForUpdate": {
            "ExecutionRoleIdentityConfig": "USER_PROFILE_NAME",
          },
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "Custom::StudioDomainUpdate",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "lifecycleConfigAppType": "JupyterServer",
          "lifecycleConfigContent": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "export ASSETS_DIR=/tmp/lifecycle-assets/JupyterServer
aws s3 cp --recursive s3://",
                  {
                    "Ref": "REPLACED-CFN-LOGICAL-ID",
                  },
                  "/sagemaker-lifecycle-assets/studio/JupyterServer/ $ASSETS_DIR
echo "testing jupyter"
sh $ASSETS_DIR/testing/test.sh",
                ],
              ],
            },
          },
          "lifecycleConfigName": "REPLACED-S3-BUCKET-NAME",
        },
        "Type": "Custom::StudioLifecycleConfig",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/studiolifecycleconfig/jupyterserver/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "StudioLifecycleConfigArn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "lifecycleConfigAppType": "KernelGateway",
          "lifecycleConfigContent": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "export ASSETS_DIR=/tmp/lifecycle-assets/KernelGateway
aws s3 cp --recursive s3://",
                  {
                    "Ref": "REPLACED-CFN-LOGICAL-ID",
                  },
                  "/sagemaker-lifecycle-assets/studio/KernelGateway/ $ASSETS_DIR
echo "testing kernel"
sh $ASSETS_DIR/testing/test.sh",
                ],
              ],
            },
          },
          "lifecycleConfigName": "REPLACED-S3-BUCKET-NAME",
        },
        "Type": "Custom::StudioLifecycleConfig",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/studiolifecycleconfig/kernelgateway/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "StudioLifecycleConfigArn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "DomainId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "DomainId",
            ],
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datascience-team",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-data-science-team-app",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
            {
              "Key": "userid",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                    },
                    ":example-user-id",
                  ],
                ],
              },
            },
          ],
          "UserProfileName": "example-user-id",
          "UserSettings": {
            "ExecutionRole": {
              "Fn::GetAtt": [
                "RoleResteamexecutionrole",
                "arn",
              ],
            },
            "SharingSettings": {
              "NotebookOutputOption": "Allowed",
              "S3KmsKeyId": {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::Select": [
                          5,
                          {
                            "Fn::Split": [
                              ":",
                              {
                                "Fn::GetAtt": [
                                  "REPLACED-CFN-LOGICAL-ID",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              "S3OutputPath": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "REPLACED-CFN-LOGICAL-ID",
                    },
                    "/notebooks",
                  ],
                ],
              },
            },
          },
        },
        "Type": "AWS::SageMaker::UserProfile",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SSM permissions scoped to team SSM params by path prefix",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "some-prefix",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "iam:GetRole",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "RoleResteamexecutionrole",
                    "arn",
                  ],
                },
                "Sid": "TeamRole",
              },
              {
                "Action": [
                  "s3:GetBucketVersioning",
                  "s3:GetBucketTagging",
                  "s3:GetEncryptionConfiguration",
                  "s3:GetIntelligentTieringConfiguration",
                  "s3:GetBucketPolicy",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "Sid": "TeamBucketGet",
              },
              {
                "Action": [
                  "ssm:GetParameter",
                  "ssm:GetParameterHistory",
                  "ssm:GetParameters",
                  "ssm:GetParametersByPath",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/test-org/test-domain/*",
                    ],
                  ],
                },
                "Sid": "TeamSSM",
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResteamexecutionrole",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw1",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SSM permissions scoped to team SSM params by path prefix",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/managed-policy/some-prefix/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/ai/datascience-team-l3-construct/lib/datascience-team-l3-construct.ts:LINE:COL] SSM permissions scoped to team SSM params by path prefix",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app/managed-policy/some-prefix/name",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "CatalogId": {
            "Ref": "AWS::AccountId",
          },
          "DatabaseInput": {
            "Name": "test_org_test_env_test_domain_test_data_science_team_app_minilake_util",
          },
        },
        "Type": "AWS::Glue::Database",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "some-prefix-athena-wg-usage",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "athena:BatchGetQueryExecution",
                  "athena:ListDataCatalogs",
                  "athena:ListDatabases",
                  "athena:ListEngineVersions",
                  "athena:ListNamedQueries",
                  "athena:ListPreparedStatements",
                  "athena:ListQueryExecutions",
                  "athena:ListTableMetadata",
                  "athena:ListTagsForResource",
                  "athena:ListWorkGroups",
                  "athena:GetDataCatalog",
                  "athena:GetDatabase",
                  "athena:GetNamedQuery",
                  "athena:GetPreparedStatement",
                  "athena:GetQueryExecution",
                  "athena:GetQueryResults",
                  "athena:GetQueryResultsStream",
                  "athena:GetTableMetadata",
                  "athena:GetWorkGroup",
                  "athena:BatchGetNamedQuery",
                  "athena:StartQueryExecution",
                  "athena:StopQueryExecution",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":athena:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":workgroup/test-org-test-env-test-domain-test-data-science-team-app-athena",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResteamexecutionrole",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResTeamAthenaResultsAccessrw1",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app-athena/managed-policy/some-prefix-athena-wg-usage/arn",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-data-science-team-app-athena/managed-policy/some-prefix-athena-wg-usage/name",
          "Tags": {
            "mdaa_cdk_app": "datascience-team",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-data-science-team-app",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
    },
    "Rules": {
      "CheckBootstrapVersion": {
        "Assertions": [
          {
            "Assert": {
              "Fn::Not": [
                {
                  "Fn::Contains": [
                    [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                    ],
                    {
                      "Ref": "BootstrapVersion",
                    },
                  ],
                },
              ],
            },
            "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
          },
        ],
      },
    },
  },
}
`;
