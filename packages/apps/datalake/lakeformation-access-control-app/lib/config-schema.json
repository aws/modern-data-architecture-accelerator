{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "CaefNagSuppressionByPath": {
            "additionalProperties": false,
            "properties": {
                "path": {
                    "type": "string"
                },
                "suppressions": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "reason"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "path",
                "suppressions"
            ],
            "type": "object"
        },
        "CaefNagSuppressions": {
            "additionalProperties": false,
            "properties": {
                "by_path": {
                    "items": {
                        "$ref": "#/definitions/CaefNagSuppressionByPath"
                    },
                    "type": "array"
                }
            },
            "required": [
                "by_path"
            ],
            "type": "object"
        },
        "CaefRoleRef": {
            "additionalProperties": false,
            "description": "A reference to an IAM role. Roles can be referenced by name, arn, and/or id.",
            "properties": {
                "arn": {
                    "description": "Reference role by arn",
                    "type": "string"
                },
                "id": {
                    "description": "Reference role by id",
                    "type": "string"
                },
                "immutable": {
                    "description": "Indicates whether the role should be considered immutable (defaults false)",
                    "type": "boolean"
                },
                "name": {
                    "description": "Reference role by name",
                    "type": "string"
                },
                "refId": {
                    "description": "A string which uniquely identifies the CaefRoleRef within a scope.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CaefServiceCatalogConstraintConfig": {
            "additionalProperties": false,
            "properties": {
                "description": {
                    "type": "string"
                },
                "rules": {
                    "additionalProperties": {
                        "$ref": "#/definitions/CaefServiceCatalogConstraintRuleConfig"
                    },
                    "type": "object"
                }
            },
            "required": [
                "description",
                "rules"
            ],
            "type": "object"
        },
        "CaefServiceCatalogConstraintRuleAssertionConfig": {
            "additionalProperties": false,
            "properties": {
                "assert": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "required": [
                "assert",
                "description"
            ],
            "type": "object"
        },
        "CaefServiceCatalogConstraintRuleCondititionConfig": {
            "additionalProperties": false,
            "type": "object"
        },
        "CaefServiceCatalogConstraintRuleConfig": {
            "additionalProperties": false,
            "properties": {
                "assertions": {
                    "items": {
                        "$ref": "#/definitions/CaefServiceCatalogConstraintRuleAssertionConfig"
                    },
                    "type": "array"
                },
                "condition": {
                    "$ref": "#/definitions/CaefServiceCatalogConstraintRuleCondititionConfig"
                }
            },
            "required": [
                "assertions",
                "condition"
            ],
            "type": "object"
        },
        "CaefServiceCatalogParameterConfig": {
            "additionalProperties": false,
            "properties": {
                "constraints": {
                    "$ref": "#/definitions/CaefServiceCatalogConstraintConfig"
                },
                "props": {
                    "$ref": "#/definitions/CfnParameterProps"
                }
            },
            "required": [
                "props"
            ],
            "type": "object"
        },
        "CaefServiceCatalogProductConfig": {
            "additionalProperties": false,
            "properties": {
                "launch_role_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/CaefServiceCatalogParameterConfig"
                    },
                    "type": "object"
                },
                "portfolio_arn": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "owner",
                "portfolio_arn"
            ],
            "type": "object"
        },
        "CfnParameterProps": {
            "additionalProperties": false,
            "properties": {
                "allowedPattern": {
                    "default": "- No constraints on patterns allowed for parameter.",
                    "description": "A regular expression that represents the patterns to allow for String types.",
                    "type": "string"
                },
                "allowedValues": {
                    "default": "- No constraints on values allowed for parameter.",
                    "description": "An array containing the list of values allowed for the parameter.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "constraintDescription": {
                    "default": "- No description with customized error message when user specifies invalid values.",
                    "description": "A string that explains a constraint when the constraint is violated.\nFor example, without a constraint description, a parameter that has an allowed\npattern of [A-Za-z0-9]+ displays the following error message when the user specifies\nan invalid value:",
                    "type": "string"
                },
                "default": {
                    "default": "- No default value for parameter.",
                    "description": "A value of the appropriate type for the template to use if no value is specified\nwhen a stack is created. If you define constraints for the parameter, you must specify\na value that adheres to those constraints."
                },
                "description": {
                    "default": "- No description for the parameter.",
                    "description": "A string of up to 4000 characters that describes the parameter.",
                    "type": "string"
                },
                "maxLength": {
                    "default": "- None.",
                    "description": "An integer value that determines the largest number of characters you want to allow for String types.",
                    "type": "number"
                },
                "maxValue": {
                    "default": "- None.",
                    "description": "A numeric value that determines the largest numeric value you want to allow for Number types.",
                    "type": "number"
                },
                "minLength": {
                    "default": "- None.",
                    "description": "An integer value that determines the smallest number of characters you want to allow for String types.",
                    "type": "number"
                },
                "minValue": {
                    "default": "- None.",
                    "description": "A numeric value that determines the smallest numeric value you want to allow for Number types.",
                    "type": "number"
                },
                "noEcho": {
                    "default": "- Parameter values are not masked.",
                    "description": "Whether to mask the parameter value when anyone makes a call that describes the stack.\nIf you set the value to ``true``, the parameter value is masked with asterisks (``*****``).",
                    "type": "boolean"
                },
                "type": {
                    "default": "String",
                    "description": "The data type for the parameter (DataType).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FederationProviderConfig": {
            "additionalProperties": {
                "type": "string"
            },
            "type": "object"
        },
        "GrantConfig": {
            "additionalProperties": false,
            "properties": {
                "database": {
                    "description": "Name of the existing Glue Database to perform the grant against.",
                    "type": "string"
                },
                "databasePermissions": {
                    "description": "Permissions to Grant on database.  Must be 'read', 'write', or 'super'. Defaults to 'read'.",
                    "enum": [
                        "read",
                        "super",
                        "write"
                    ],
                    "type": "string"
                },
                "principals": {
                    "description": "Array of strings representing principals to grant permissions to.  These must exist in the 'principals:' section.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "tablePermissions": {
                    "description": "Permissions to Grant on tables.  Must be 'read', 'write', or 'super'. Defaults to 'read'.",
                    "enum": [
                        "read",
                        "super",
                        "write"
                    ],
                    "type": "string"
                },
                "tables": {
                    "description": "Array of strings representing Tables to perform the grant against.  Use a '*' for all tables.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "database",
                "principals"
            ],
            "type": "object"
        },
        "PrincipalConfig": {
            "additionalProperties": false,
            "properties": {
                "federatedGroup": {
                    "description": "Federated group name for the grant.",
                    "type": "string"
                },
                "federatedUser": {
                    "description": "Federated user name for the grant.",
                    "type": "string"
                },
                "federationProvider": {
                    "description": "Name of the federation provider from the federationProviders section of the config",
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/CaefRoleRef",
                    "description": "Arn of an IAM principal for the grant."
                }
            },
            "type": "object"
        },
        "ResourceLinkConfig": {
            "additionalProperties": false,
            "properties": {
                "fromAccount": {
                    "description": "The account in which the resource link should be created.\nIf not specified, will default to the local account.",
                    "type": "string"
                },
                "grantPrincipals": {
                    "description": "Array of strings representing principals to grant resource link DESCRIBE permissions to.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "targetAccount": {
                    "description": "The account where the target database exists",
                    "type": "string"
                },
                "targetDatabase": {
                    "description": "Name of the target database",
                    "type": "string"
                }
            },
            "required": [
                "targetDatabase"
            ],
            "type": "object"
        }
    },
    "properties": {
        "federationProviders": {
            "$ref": "#/definitions/FederationProviderConfig",
            "description": "Maps of Federation providers used in the principals: section to ARNs in IAM"
        },
        "grants": {
            "additionalProperties": {
                "$ref": "#/definitions/GrantConfig"
            },
            "description": "Array of Objects representing the grants",
            "type": "object"
        },
        "nag_suppressions": {
            "$ref": "#/definitions/CaefNagSuppressions",
            "description": "Nag suppressions"
        },
        "principals": {
            "additionalProperties": {
                "$ref": "#/definitions/PrincipalConfig"
            },
            "description": "Object representing the active directory users, groups, and federation provider used",
            "type": "object"
        },
        "resourceLinks": {
            "additionalProperties": {
                "$ref": "#/definitions/ResourceLinkConfig"
            },
            "description": "Resource links which will be created in the local account.",
            "type": "object"
        },
        "service_catalog_product_config": {
            "$ref": "#/definitions/CaefServiceCatalogProductConfig",
            "description": "Service Catalog Config\nIf specified, the configured module will be deployed as a Service Catalog product instead of directly to the environment"
        }
    },
    "required": [
        "grants",
        "principals"
    ],
    "type": "object"
}

