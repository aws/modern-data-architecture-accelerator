{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "AccessPolicyConfig": {
            "additionalProperties": false,
            "properties": {
                "rule": {
                    "$ref": "#/definitions/AccessPolicyRuleConfig",
                    "description": "The access policy rule"
                }
            },
            "required": [
                "rule"
            ],
            "type": "object"
        },
        "AccessPolicyRuleConfig": {
            "additionalProperties": false,
            "properties": {
                "ReadRoles": {
                    "description": "List of config roles which will be provided readonly access via this policy.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ReadWriteRoles": {
                    "description": "List of config roles which will be provided readwrite access via this policy.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ReadWriteSuperRoles": {
                    "description": "List of config roles which will be provided superuser access via this policy.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "prefix": {
                    "description": "The S3 Prefix where the policy will be applied.",
                    "type": "string"
                }
            },
            "required": [
                "prefix"
            ],
            "type": "object"
        },
        "BucketConfig": {
            "additionalProperties": false,
            "properties": {
                "accessPolicies": {
                    "description": "List of access policies names which will be applied to the bucket",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "createFolderSkeleton": {
                    "description": "If true (default), a \"folder\" object will be created on the bucket for each applied access policy.",
                    "type": "boolean"
                },
                "defaultDeny": {
                    "description": "If true (default), any roles not explicitely listed in the config will be blocked from reading/writing objects from this s3 bucket.",
                    "type": "boolean"
                },
                "enableEventBridgeNotifications": {
                    "description": "If true, EventBridgeNotifications will be enabled on the bucket, allowing bucket data events to be matched and actioned by EventBridge rules",
                    "type": "boolean"
                },
                "inventories": {
                    "additionalProperties": {
                        "$ref": "#/definitions/InventoryDefinition"
                    },
                    "description": "List of inventory configurations to be applied to the bucket",
                    "type": "object"
                },
                "lakeFormationLocations": {
                    "additionalProperties": {
                        "$ref": "#/definitions/LakeFormationLocationConfig"
                    },
                    "description": "Locations which will be created as LakeFormation resources using the specified role.",
                    "type": "object"
                },
                "lifecycleConfiguration": {
                    "description": "S3 Lifecycle configuration .",
                    "type": "string"
                }
            },
            "required": [
                "accessPolicies"
            ],
            "type": "object"
        },
        "CfnParameterProps": {
            "additionalProperties": false,
            "properties": {
                "allowedPattern": {
                    "default": "- No constraints on patterns allowed for parameter.",
                    "description": "A regular expression that represents the patterns to allow for String types.",
                    "type": "string"
                },
                "allowedValues": {
                    "default": "- No constraints on values allowed for parameter.",
                    "description": "An array containing the list of values allowed for the parameter.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "constraintDescription": {
                    "default": "- No description with customized error message when user specifies invalid values.",
                    "description": "A string that explains a constraint when the constraint is violated.\nFor example, without a constraint description, a parameter that has an allowed\npattern of [A-Za-z0-9]+ displays the following error message when the user specifies\nan invalid value:",
                    "type": "string"
                },
                "default": {
                    "default": "- No default value for parameter.",
                    "description": "A value of the appropriate type for the template to use if no value is specified\nwhen a stack is created. If you define constraints for the parameter, you must specify\na value that adheres to those constraints."
                },
                "description": {
                    "default": "- No description for the parameter.",
                    "description": "A string of up to 4000 characters that describes the parameter.",
                    "type": "string"
                },
                "maxLength": {
                    "default": "- None.",
                    "description": "An integer value that determines the largest number of characters you want to allow for String types.",
                    "type": "number"
                },
                "maxValue": {
                    "default": "- None.",
                    "description": "A numeric value that determines the largest numeric value you want to allow for Number types.",
                    "type": "number"
                },
                "minLength": {
                    "default": "- None.",
                    "description": "An integer value that determines the smallest number of characters you want to allow for String types.",
                    "type": "number"
                },
                "minValue": {
                    "default": "- None.",
                    "description": "A numeric value that determines the smallest numeric value you want to allow for Number types.",
                    "type": "number"
                },
                "noEcho": {
                    "default": "- Parameter values are not masked.",
                    "description": "Whether to mask the parameter value when anyone makes a call that describes the stack.\nIf you set the value to ``true``, the parameter value is masked with asterisks (``*****``).",
                    "type": "boolean"
                },
                "type": {
                    "default": "String",
                    "description": "The data type for the parameter (DataType).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InventoryDefinition": {
            "additionalProperties": false,
            "properties": {
                "destinationAccount": {
                    "description": "The destination account to which the destinationBucket should belong. Used by S3 service to validate bucket ownership before writing inventory.",
                    "type": "string"
                },
                "destinationBucket": {
                    "description": "The bucket to which inventory will be written. If not specified, will be written back to the inventoried bucket under /inventory.",
                    "type": "string"
                },
                "destinationPrefix": {
                    "description": "The S3 prefix (on the destinationBucket) to which inventory will be written. If not specified, defaults to /inventory.",
                    "type": "string"
                },
                "prefix": {
                    "description": "The S3 prefix which will be inventoried",
                    "type": "string"
                }
            },
            "required": [
                "prefix"
            ],
            "type": "object"
        },
        "LakeFormationLocationConfig": {
            "additionalProperties": false,
            "properties": {
                "prefix": {
                    "description": "The S3 prefix of the location",
                    "type": "string"
                },
                "write": {
                    "description": "If true, LF role will be granted read-write access to the location",
                    "type": "boolean"
                }
            },
            "required": [
                "prefix"
            ],
            "type": "object"
        },
        "LifecycleConfigurationConfig": {
            "additionalProperties": {
                "$ref": "#/definitions/LifecycleConfigurationRuleConfig"
            },
            "type": "object"
        },
        "LifecycleConfigurationRuleConfig": {
            "additionalProperties": false,
            "properties": {
                "AbortIncompleteMultipartUploadAfter": {
                    "type": "number"
                },
                "ExpirationDays": {
                    "type": "number"
                },
                "ExpiredObjectDeleteMarker": {
                    "type": "boolean"
                },
                "NoncurrentVersionExpirationDays": {
                    "type": "number"
                },
                "NoncurrentVersionTransitions": {
                    "items": {
                        "$ref": "#/definitions/LifecycleTransitionConfig"
                    },
                    "type": "array"
                },
                "NoncurrentVersionsToRetain": {
                    "type": "number"
                },
                "ObjectSizeGreaterThan": {
                    "type": "number"
                },
                "ObjectSizeLessThan": {
                    "type": "number"
                },
                "Prefix": {
                    "type": "string"
                },
                "Status": {
                    "description": "Lifecycle configuration rule",
                    "type": "string"
                },
                "Transitions": {
                    "items": {
                        "$ref": "#/definitions/LifecycleTransitionConfig"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Status"
            ],
            "type": "object"
        },
        "LifecycleTransitionConfig": {
            "additionalProperties": false,
            "properties": {
                "Days": {
                    "description": "Lifecycle Transition Rule",
                    "type": "number"
                },
                "NewerNoncurrentVersions": {
                    "type": "number"
                },
                "StorageClass": {
                    "type": "string"
                }
            },
            "required": [
                "Days",
                "StorageClass"
            ],
            "type": "object"
        },
        "MdaaNagSuppressionByPath": {
            "additionalProperties": false,
            "properties": {
                "path": {
                    "type": "string"
                },
                "suppressions": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "reason"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "path",
                "suppressions"
            ],
            "type": "object"
        },
        "MdaaNagSuppressionConfigs": {
            "additionalProperties": false,
            "properties": {
                "by_path": {
                    "items": {
                        "$ref": "#/definitions/MdaaNagSuppressionByPath"
                    },
                    "type": "array"
                }
            },
            "required": [
                "by_path"
            ],
            "type": "object"
        },
        "MdaaRoleRef": {
            "additionalProperties": false,
            "description": "A reference to an IAM role. Roles can be referenced by name, arn, and/or id.",
            "properties": {
                "arn": {
                    "description": "Reference role by arn",
                    "type": "string"
                },
                "id": {
                    "description": "Reference role by id",
                    "type": "string"
                },
                "immutable": {
                    "description": "Indicates whether the role should be considered immutable (defaults false)",
                    "type": "boolean"
                },
                "name": {
                    "description": "Reference role by name",
                    "type": "string"
                },
                "refId": {
                    "description": "A string which uniquely identifies the MdaaRoleRef within a scope.",
                    "type": "string"
                },
                "sso": {
                    "description": "If true, role name will be resolved to an SSO auto-generated role. Also implies immutability.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "MdaaServiceCatalogConstraintConfig": {
            "additionalProperties": false,
            "properties": {
                "description": {
                    "type": "string"
                },
                "rules": {
                    "additionalProperties": {
                        "$ref": "#/definitions/MdaaServiceCatalogConstraintRuleConfig"
                    },
                    "type": "object"
                }
            },
            "required": [
                "description",
                "rules"
            ],
            "type": "object"
        },
        "MdaaServiceCatalogConstraintRuleAssertionConfig": {
            "additionalProperties": false,
            "properties": {
                "assert": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "required": [
                "assert",
                "description"
            ],
            "type": "object"
        },
        "MdaaServiceCatalogConstraintRuleCondititionConfig": {
            "additionalProperties": false,
            "type": "object"
        },
        "MdaaServiceCatalogConstraintRuleConfig": {
            "additionalProperties": false,
            "properties": {
                "assertions": {
                    "items": {
                        "$ref": "#/definitions/MdaaServiceCatalogConstraintRuleAssertionConfig"
                    },
                    "type": "array"
                },
                "condition": {
                    "$ref": "#/definitions/MdaaServiceCatalogConstraintRuleCondititionConfig"
                }
            },
            "required": [
                "assertions",
                "condition"
            ],
            "type": "object"
        },
        "MdaaServiceCatalogParameterConfig": {
            "additionalProperties": false,
            "properties": {
                "constraints": {
                    "$ref": "#/definitions/MdaaServiceCatalogConstraintConfig"
                },
                "props": {
                    "$ref": "#/definitions/CfnParameterProps"
                }
            },
            "required": [
                "props"
            ],
            "type": "object"
        },
        "MdaaServiceCatalogProductConfig": {
            "additionalProperties": false,
            "properties": {
                "launch_role_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/MdaaServiceCatalogParameterConfig"
                    },
                    "type": "object"
                },
                "portfolio_arn": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "owner",
                "portfolio_arn"
            ],
            "type": "object"
        }
    },
    "properties": {
        "accessPolicies": {
            "additionalProperties": {
                "$ref": "#/definitions/AccessPolicyConfig"
            },
            "description": "Map of named accessPolicies which will be referenced by bucket definitions.",
            "type": "object"
        },
        "buckets": {
            "additionalProperties": {
                "$ref": "#/definitions/BucketConfig"
            },
            "description": "List of bucket definitions",
            "type": "object"
        },
        "lifecycleConfigurations": {
            "additionalProperties": {
                "$ref": "#/definitions/LifecycleConfigurationConfig"
            },
            "description": "/**\n Map of named lifecycleConfigurations which will be referenced by bucket definitions.",
            "type": "object"
        },
        "nag_suppressions": {
            "$ref": "#/definitions/MdaaNagSuppressionConfigs",
            "description": "Nag suppressions"
        },
        "roles": {
            "additionalProperties": {
                "items": {
                    "$ref": "#/definitions/MdaaRoleRef"
                },
                "type": "array"
            },
            "description": "Map of named role references to be used within accessPolicies. A single config role\ncan reference multiple physical roles.",
            "type": "object"
        },
        "service_catalog_product_config": {
            "$ref": "#/definitions/MdaaServiceCatalogProductConfig",
            "description": "Service Catalog Config\nIf specified, the configured module will be deployed as a Service Catalog product instead of directly to the environment"
        }
    },
    "required": [
        "accessPolicies",
        "buckets",
        "roles"
    ],
    "type": "object"
}

