// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataLake Snapshot Tests Datalake App App Snapshot Test 1`] = `
{
  "test-org-test-env-test-domain-test-datalake-main": {
    "Description": "(SO0320-datalake) Modern Data Architecture Accelerator. Version 1.0.0",
    "Mappings": {
      "LatestNodeRuntimeMap": {
        "af-south-1": {
          "value": "nodejs22.x",
        },
        "ap-east-1": {
          "value": "nodejs22.x",
        },
        "ap-east-2": {
          "value": "nodejs22.x",
        },
        "ap-northeast-1": {
          "value": "nodejs22.x",
        },
        "ap-northeast-2": {
          "value": "nodejs22.x",
        },
        "ap-northeast-3": {
          "value": "nodejs22.x",
        },
        "ap-south-1": {
          "value": "nodejs22.x",
        },
        "ap-south-2": {
          "value": "nodejs22.x",
        },
        "ap-southeast-1": {
          "value": "nodejs22.x",
        },
        "ap-southeast-2": {
          "value": "nodejs22.x",
        },
        "ap-southeast-3": {
          "value": "nodejs22.x",
        },
        "ap-southeast-4": {
          "value": "nodejs22.x",
        },
        "ap-southeast-5": {
          "value": "nodejs22.x",
        },
        "ap-southeast-7": {
          "value": "nodejs22.x",
        },
        "ca-central-1": {
          "value": "nodejs22.x",
        },
        "ca-west-1": {
          "value": "nodejs22.x",
        },
        "cn-north-1": {
          "value": "nodejs22.x",
        },
        "cn-northwest-1": {
          "value": "nodejs22.x",
        },
        "eu-central-1": {
          "value": "nodejs22.x",
        },
        "eu-central-2": {
          "value": "nodejs22.x",
        },
        "eu-isoe-west-1": {
          "value": "nodejs18.x",
        },
        "eu-north-1": {
          "value": "nodejs22.x",
        },
        "eu-south-1": {
          "value": "nodejs22.x",
        },
        "eu-south-2": {
          "value": "nodejs22.x",
        },
        "eu-west-1": {
          "value": "nodejs22.x",
        },
        "eu-west-2": {
          "value": "nodejs22.x",
        },
        "eu-west-3": {
          "value": "nodejs22.x",
        },
        "il-central-1": {
          "value": "nodejs22.x",
        },
        "me-central-1": {
          "value": "nodejs22.x",
        },
        "me-south-1": {
          "value": "nodejs22.x",
        },
        "mx-central-1": {
          "value": "nodejs22.x",
        },
        "sa-east-1": {
          "value": "nodejs22.x",
        },
        "us-east-1": {
          "value": "nodejs22.x",
        },
        "us-east-2": {
          "value": "nodejs22.x",
        },
        "us-gov-east-1": {
          "value": "nodejs22.x",
        },
        "us-gov-west-1": {
          "value": "nodejs22.x",
        },
        "us-iso-east-1": {
          "value": "nodejs18.x",
        },
        "us-iso-west-1": {
          "value": "nodejs18.x",
        },
        "us-isob-east-1": {
          "value": "nodejs18.x",
        },
        "us-isob-west-1": {
          "value": "nodejs18.x",
        },
        "us-west-1": {
          "value": "nodejs22.x",
        },
        "us-west-2": {
          "value": "nodejs22.x",
        },
      },
    },
    "Outputs": {
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-datalake-main:bucket:raw:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-datalake-main:bucket:raw:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-datalake-main:bucket:transformed:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-datalake-main:bucket:transformed:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-datalake-main:kms:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-datalake-main:kms:id",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-datalake-main:role:lakeformation:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-datalake-main:role:lakeformation:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-datalake-main:role:lakeformation:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
    },
    "Parameters": {
      "BootstrapVersion": {
        "Default": "/cdk-bootstrap/hnb659fds/version",
        "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuesampleorginstance1generatedroledatascientistarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/sample-org/instance1/generated-role/data-scientist/arn",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/sample-org/instance1/generated-role/test-role/id",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/test-org/test-domain/caef-bootstrap/role-helper-service-token",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/test-org/test-domain/generated-role/data-scientist/id",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/test-org/test-domain/generated-role/test-role/id",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
    },
    "Resources": {
      "RoleResDatar1": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "arn": {
              "Ref": "SsmParameterValuesampleorginstance1generatedroledatascientistarnC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
            "refId": "Data-r-1",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResDatar4": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "name": "data_scientist",
            "refId": "Data-r-4",
            "sso": true,
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResRootrws0": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/Admin",
                ],
              ],
            },
            "refId": "Root-rws-0",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResRootrws1": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "name": "Admin",
            "refId": "Root-rws-1",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "Stack description parameter to update on version changes",
          "Name": "/test-org/test-domain/test-datalake-main/aws-solution",
          "Tags": {
            "mdaa_cdk_app": "datalake",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-datalake-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "(SO0320-datalake) Modern Data Architecture Accelerator. Version 1.0.0",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-S1",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "HIPAA.Security-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "PCI.DSS.321-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "BucketEncryption": {
            "ServerSideEncryptionConfiguration": [
              {
                "BucketKeyEnabled": true,
                "ServerSideEncryptionByDefault": {
                  "KMSMasterKeyID": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  "SSEAlgorithm": "aws:kms",
                },
              },
            ],
          },
          "BucketName": "test-org-test-env-test-domain-test-datalake-main-raw",
          "InventoryConfigurations": [
            {
              "Destination": {
                "BucketArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::test-org-test-env-test-domain-test-datalake-main-raw",
                    ],
                  ],
                },
                "Format": "Parquet",
                "Prefix": "inventory",
              },
              "Enabled": true,
              "Id": "all-data",
              "IncludedObjectVersions": "All",
              "OptionalFields": [
                "Size",
                "LastModifiedDate",
                "StorageClass",
                "ETag",
                "IsMultipartUploaded",
                "ReplicationStatus",
                "EncryptionStatus",
                "ObjectLockRetainUntilDate",
                "ObjectLockMode",
                "ObjectLockLegalHoldStatus",
                "IntelligentTieringAccessTier",
              ],
              "Prefix": "data/",
              "ScheduleFrequency": "Daily",
            },
          ],
          "LifecycleConfiguration": {
            "Rules": [
              {
                "AbortIncompleteMultipartUpload": {
                  "DaysAfterInitiation": 2,
                },
                "ExpirationInDays": 270,
                "Id": "SampleRule1",
                "NoncurrentVersionExpiration": {
                  "NewerNoncurrentVersions": 5,
                  "NoncurrentDays": 270,
                },
                "NoncurrentVersionTransitions": [
                  {
                    "NewerNoncurrentVersions": 1,
                    "StorageClass": "STANDARD_IA",
                    "TransitionInDays": 30,
                  },
                  {
                    "NewerNoncurrentVersions": 2,
                    "StorageClass": "GLACIER_IR",
                    "TransitionInDays": 60,
                  },
                  {
                    "NewerNoncurrentVersions": 3,
                    "StorageClass": "GLACIER",
                    "TransitionInDays": 150,
                  },
                  {
                    "NewerNoncurrentVersions": 4,
                    "StorageClass": "DEEP_ARCHIVE",
                    "TransitionInDays": 240,
                  },
                ],
                "ObjectSizeGreaterThan": 500,
                "ObjectSizeLessThan": 10000,
                "Prefix": "test_prefix",
                "Status": "Enabled",
                "Transitions": [
                  {
                    "StorageClass": "STANDARD_IA",
                    "TransitionInDays": 30,
                  },
                  {
                    "StorageClass": "GLACIER_IR",
                    "TransitionInDays": 60,
                  },
                  {
                    "StorageClass": "GLACIER",
                    "TransitionInDays": 150,
                  },
                  {
                    "StorageClass": "DEEP_ARCHIVE",
                    "TransitionInDays": 240,
                  },
                ],
              },
              {
                "AbortIncompleteMultipartUpload": {
                  "DaysAfterInitiation": 2,
                },
                "ExpiredObjectDeleteMarker": true,
                "Id": "SampleRule2",
                "NoncurrentVersionExpiration": {
                  "NewerNoncurrentVersions": 5,
                  "NoncurrentDays": 270,
                },
                "NoncurrentVersionTransitions": [
                  {
                    "NewerNoncurrentVersions": 1,
                    "StorageClass": "STANDARD_IA",
                    "TransitionInDays": 30,
                  },
                  {
                    "NewerNoncurrentVersions": 2,
                    "StorageClass": "GLACIER_IR",
                    "TransitionInDays": 60,
                  },
                  {
                    "NewerNoncurrentVersions": 3,
                    "StorageClass": "GLACIER",
                    "TransitionInDays": 150,
                  },
                  {
                    "NewerNoncurrentVersions": 4,
                    "StorageClass": "DEEP_ARCHIVE",
                    "TransitionInDays": 240,
                  },
                ],
                "ObjectSizeGreaterThan": 500,
                "ObjectSizeLessThan": 10000,
                "Prefix": "test_prefix",
                "Status": "Enabled",
                "Transitions": [
                  {
                    "StorageClass": "STANDARD_IA",
                    "TransitionInDays": 30,
                  },
                  {
                    "StorageClass": "GLACIER_IR",
                    "TransitionInDays": 60,
                  },
                  {
                    "StorageClass": "GLACIER",
                    "TransitionInDays": 150,
                  },
                  {
                    "StorageClass": "DEEP_ARCHIVE",
                    "TransitionInDays": 240,
                  },
                ],
              },
            ],
          },
          "PublicAccessBlockConfiguration": {
            "BlockPublicAcls": true,
            "BlockPublicPolicy": true,
            "IgnorePublicAcls": true,
            "RestrictPublicBuckets": true,
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datalake",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-datalake-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "VersioningConfiguration": {
            "Status": "Enabled",
          },
        },
        "Type": "AWS::S3::Bucket",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-S1",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "HIPAA.Security-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "PCI.DSS.321-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "Bucket": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "s3:*",
                "Condition": {
                  "Bool": {
                    "aws:SecureTransport": "false",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": "s3:PutObject",
                "Condition": {
                  "StringEquals": {
                    "s3:x-amz-server-side-encryption": "AES256",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "DenyAES",
              },
              {
                "Action": "s3:PutObject",
                "Condition": {
                  "StringNotLikeIfExists": {
                    "s3:x-amz-server-side-encryption-aws-kms-key-id": {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "ForceKMS",
              },
              {
                "Action": "s3:PutObject",
                "Condition": {
                  "ArnLike": {
                    "aws:SourceArn": {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                  },
                  "StringEquals": {
                    "aws:SourceAccount": {
                      "Ref": "AWS::AccountId",
                    },
                    "s3:x-amz-acl": "bucket-owner-full-control",
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "Service": "s3.amazonaws.com",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/inventory/*",
                    ],
                  ],
                },
                "Sid": "AllowS3Inventory",
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObjectTagging",
                  "s3:DeleteObject",
                  "s3:DeleteObjectVersion",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResRootrws0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResRootrws1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      "AROA1234567890:*",
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "/_ReadWriteSuper",
              },
              {
                "Action": "s3:GetObject*",
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDatar1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDatar4",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/data/*",
                    ],
                  ],
                },
                "Sid": "/data_Read",
              },
              {
                "Action": [
                  "s3:List*",
                  "s3:GetBucket*",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResRootrws0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResRootrws1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      "AROA1234567890:*",
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDatar1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDatar4",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                ],
                "Sid": "BucketAllow",
              },
            ],
            "Version": "2012-10-17",
          },
        },
        "Type": "AWS::S3::BucketPolicy",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-datalake-main/bucket/raw/arn",
          "Tags": {
            "mdaa_cdk_app": "datalake",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-datalake-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-datalake-main/bucket/raw/name",
          "Tags": {
            "mdaa_cdk_app": "datalake",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-datalake-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-S1",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "HIPAA.Security-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "PCI.DSS.321-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "BucketEncryption": {
            "ServerSideEncryptionConfiguration": [
              {
                "BucketKeyEnabled": true,
                "ServerSideEncryptionByDefault": {
                  "KMSMasterKeyID": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  "SSEAlgorithm": "aws:kms",
                },
              },
            ],
          },
          "BucketName": "test-org-test-env-test-domain-test-datalake-main-transformed",
          "LifecycleConfiguration": {
            "Rules": [
              {
                "Id": "SampleRule1",
                "Prefix": "test_prefix",
                "Status": "Enabled",
                "Transitions": [
                  {
                    "StorageClass": "STANDARD_IA",
                    "TransitionInDays": 30,
                  },
                ],
              },
              {
                "Id": "SampleRule2",
                "NoncurrentVersionTransitions": [
                  {
                    "NewerNoncurrentVersions": 1,
                    "StorageClass": "STANDARD_IA",
                    "TransitionInDays": 30,
                  },
                ],
                "Prefix": "test_prefix",
                "Status": "Enabled",
              },
            ],
          },
          "NotificationConfiguration": {
            "EventBridgeConfiguration": {
              "EventBridgeEnabled": true,
            },
          },
          "PublicAccessBlockConfiguration": {
            "BlockPublicAcls": true,
            "BlockPublicPolicy": true,
            "IgnorePublicAcls": true,
            "RestrictPublicBuckets": true,
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datalake",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-datalake-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "VersioningConfiguration": {
            "Status": "Enabled",
          },
        },
        "Type": "AWS::S3::Bucket",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-S1",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "HIPAA.Security-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "PCI.DSS.321-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "Bucket": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "s3:*",
                "Condition": {
                  "Bool": {
                    "aws:SecureTransport": "false",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": "s3:PutObject",
                "Condition": {
                  "StringEquals": {
                    "s3:x-amz-server-side-encryption": "AES256",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "DenyAES",
              },
              {
                "Action": "s3:PutObject",
                "Condition": {
                  "StringNotLikeIfExists": {
                    "s3:x-amz-server-side-encryption-aws-kms-key-id": {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "ForceKMS",
              },
              {
                "Action": "s3:GetObject*",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/data/*",
                    ],
                  ],
                },
                "Sid": "data_Read",
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObjectTagging",
                  "s3:DeleteObject",
                ],
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/data/*",
                    ],
                  ],
                },
                "Sid": "data_ReadWrite",
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObjectTagging",
                  "s3:DeleteObject",
                  "s3:DeleteObjectVersion",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResRootrws0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResRootrws1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      "AROA1234567890:*",
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "/_ReadWriteSuper",
              },
              {
                "Action": "s3:GetObject*",
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDatar1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDatar4",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/data/*",
                    ],
                  ],
                },
                "Sid": "/data_Read",
              },
              {
                "Action": "s3:PutObject",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/data/",
                    ],
                  ],
                },
              },
              {
                "Action": [
                  "s3:List*",
                  "s3:GetBucket*",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResRootrws0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResRootrws1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      "AROA1234567890:*",
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDatar1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDatar4",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                ],
                "Sid": "BucketAllow",
              },
              {
                "Action": [
                  "s3:PutObject*",
                  "s3:GetObject*",
                  "s3:DeleteObject*",
                ],
                "Condition": {
                  "ForAnyValue:StringNotLike": {
                    "aws:PrincipalArn": [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                    ],
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResRootrws0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResRootrws1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      "AROA1234567890:*",
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDatar1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDatar4",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Deny",
                "NotResource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/inventory/*",
                    ],
                  ],
                },
                "Principal": {
                  "AWS": "*",
                },
                "Sid": "BucketDeny",
              },
            ],
            "Version": "2012-10-17",
          },
        },
        "Type": "AWS::S3::BucketPolicy",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-datalake-main/bucket/transformed/arn",
          "Tags": {
            "mdaa_cdk_app": "datalake",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-datalake-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-datalake-main/bucket/transformed/name",
          "Tags": {
            "mdaa_cdk_app": "datalake",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-datalake-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Properties": {
          "EnableKeyRotation": true,
          "Enabled": true,
          "KeyPolicy": {
            "Statement": [
              {
                "Action": "kms:*",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
                "Resource": "*",
              },
              {
                "Action": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:ReEncryptFrom",
                  "kms:ReEncryptTo",
                  "kms:GenerateDataKey",
                  "kms:GenerateDataKeyWithoutPlaintext",
                  "kms:GenerateDataKeyPair",
                  "kms:GenerateDataKeyPairWithoutPlaintext",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResRootrws0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResRootrws1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      "AROA1234567890:*",
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDatar1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDatar4",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResRootrws0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResRootrws1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      "AROA1234567890:*",
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDatar1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDatar4",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "test-org-test-env-test-domain-test-datalake-main-usage-stmt",
              },
              {
                "Action": [
                  "kms:Encrypt",
                  "kms:ReEncryptFrom",
                  "kms:ReEncryptTo",
                  "kms:GenerateDataKey",
                  "kms:GenerateDataKeyWithoutPlaintext",
                  "kms:GenerateDataKeyPair",
                  "kms:GenerateDataKeyPairWithoutPlaintext",
                ],
                "Effect": "Allow",
                "Principal": {
                  "Service": "s3.amazonaws.com",
                },
                "Resource": "*",
              },
            ],
            "Version": "2012-10-17",
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datalake",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-datalake-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::KMS::Key",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AliasName": "alias/test-org-test-env-test-domain-test-datalake-main",
          "TargetKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::KMS::Alias",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-datalake-main/kms/arn",
          "Tags": {
            "mdaa_cdk_app": "datalake",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-datalake-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-datalake-main/kms/id",
          "Tags": {
            "mdaa_cdk_app": "datalake",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-datalake-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-L1",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
              },
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-datalake-main/datalake-folder-cr-provider)",
          "Environment": {
            "Variables": {
              "USER_ON_EVENT_FUNCTION_ARN": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-datalake-main-folder-cr-prov",
          "Handler": "framework.onEvent",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": {
            "Fn::FindInMap": [
              "LatestNodeRuntimeMap",
              {
                "Ref": "AWS::Region",
              },
              "value",
            ],
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datalake",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-datalake-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 900,
        },
        "Type": "AWS::Lambda::Function",
      },
      "datalakefoldertransformedData": {
        "DeletionPolicy": "Delete",
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "bucket_name": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "folder_name": "/data",
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Environment": {
            "Variables": {
              "LOG_LEVEL": "INFO",
              "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-datalake-main-folder-cr",
          "Handler": "datalake_folder.lambda_handler",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": "python3.13",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datalake",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-datalake-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 120,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Description": "CR Role",
          "RoleName": "test-org-test-env-test-domain-test-datalake-main-folder-cr",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datalake",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-datalake-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-datalake-main-folder-cr*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-datalake-main-folder-cr*",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Description": "CR Role",
          "RoleName": "test-org-test-env-test-domain-test-datalake-main-folder-137b0769",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datalake",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-datalake-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-datalake-main-folder-cr-prov*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-datalake-main-folder-cr-prov*",
                    ],
                  ],
                },
              },
              {
                "Action": "lambda:InvokeFunction",
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        ":*",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": "lambda:GetFunction",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "invtableraw": {
        "Properties": {
          "CatalogId": {
            "Ref": "AWS::AccountId",
          },
          "DatabaseName": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "TableInput": {
            "Name": "raw_inv",
            "Parameters": {
              "EXTERNAL": "TRUE",
              "projection.bucket_inventory.type": "enum",
              "projection.bucket_inventory.values": "test-org-test-env-test-domain-test-datalake-main-raw/all-data",
              "projection.dt.format": "yyyy-MM-dd-HH-mm",
              "projection.dt.interval": "1",
              "projection.dt.interval.unit": "HOURS",
              "projection.dt.range": "2022-01-01-00-00,NOW",
              "projection.dt.type": "date",
              "projection.enabled": "true",
              "storage.location.template": "s3://test-org-test-env-test-domain-test-datalake-main-raw/inventory/\${bucket_inventory}/hive/dt=\${dt}",
            },
            "PartitionKeys": [
              {
                "Name": "bucket_inventory",
                "Type": "string",
              },
              {
                "Name": "dt",
                "Type": "string",
              },
            ],
            "StorageDescriptor": {
              "Columns": [
                {
                  "Name": "bucket",
                  "Type": "string",
                },
                {
                  "Name": "key",
                  "Type": "string",
                },
                {
                  "Name": "version_id",
                  "Type": "string",
                },
                {
                  "Name": "is_latest",
                  "Type": "boolean",
                },
                {
                  "Name": "is_delete_marker",
                  "Type": "boolean",
                },
                {
                  "Name": "size",
                  "Type": "bigint",
                },
                {
                  "Name": "last_modified_date",
                  "Type": "timestamp",
                },
                {
                  "Name": "e_tag",
                  "Type": "string",
                },
                {
                  "Name": "storage_class",
                  "Type": "string",
                },
                {
                  "Name": "is_multipart_uploaded",
                  "Type": "boolean",
                },
                {
                  "Name": "replication_status",
                  "Type": "string",
                },
                {
                  "Name": "encryption_status",
                  "Type": "string",
                },
                {
                  "Name": "intelligent_tiering_tier",
                  "Type": "string",
                },
              ],
              "Compressed": false,
              "InputFormat": "org.apache.hadoop.hive.ql.io.SymlinkTextInputFormat",
              "Location": "s3://test-org-test-env-test-domain-test-datalake-main-raw/inventory/",
              "NumberOfBuckets": -1,
              "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
              "SerdeInfo": {
                "Parameters": {
                  "serialization.format": "1",
                },
                "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
              },
            },
            "TableType": "EXTERNAL_TABLE",
          },
        },
        "Type": "AWS::Glue::Table",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lakeformation.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Description": "Role for accessing the data lake via LakeFormation.",
          "RoleName": "test-org-test-env-test-domain-test-datalake-main-lake-formation",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "datalake",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-datalake-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-datalake-main/role/lake-formation/arn",
          "Tags": {
            "mdaa_cdk_app": "datalake",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-datalake-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-datalake-main/role/lake-formation/id",
          "Tags": {
            "mdaa_cdk_app": "datalake",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-datalake-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-datalake-main/role/lake-formation/name",
          "Tags": {
            "mdaa_cdk_app": "datalake",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-datalake-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "lfresourcetransformedreaddata": {
        "Properties": {
          "ResourceArn": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "/data",
              ],
            ],
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "UseServiceLinkedRole": false,
        },
        "Type": "AWS::LakeFormation::Resource",
      },
      "lfresourcetransformedreadwritedata": {
        "Properties": {
          "ResourceArn": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "/data",
              ],
            ],
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "UseServiceLinkedRole": false,
        },
        "Type": "AWS::LakeFormation::Resource",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "CatalogId": {
            "Ref": "AWS::AccountId",
          },
          "DatabaseInput": {
            "Name": "test_org_test_env_test_domain_test_datalake_main_util",
          },
        },
        "Type": "AWS::Glue::Database",
      },
    },
    "Rules": {
      "CheckBootstrapVersion": {
        "Assertions": [
          {
            "Assert": {
              "Fn::Not": [
                {
                  "Fn::Contains": [
                    [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                    ],
                    {
                      "Ref": "BootstrapVersion",
                    },
                  ],
                },
              ],
            },
            "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
          },
        ],
      },
    },
  },
}
`;

exports[`DataLake Snapshot Tests Datalake Stack Snapshot Test 1`] = `
{
  "Description": "(SO0320-datalake) Modern Data Architecture Accelerator. Version 1.0.0",
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs22.x",
      },
      "ap-east-1": {
        "value": "nodejs22.x",
      },
      "ap-east-2": {
        "value": "nodejs22.x",
      },
      "ap-northeast-1": {
        "value": "nodejs22.x",
      },
      "ap-northeast-2": {
        "value": "nodejs22.x",
      },
      "ap-northeast-3": {
        "value": "nodejs22.x",
      },
      "ap-south-1": {
        "value": "nodejs22.x",
      },
      "ap-south-2": {
        "value": "nodejs22.x",
      },
      "ap-southeast-1": {
        "value": "nodejs22.x",
      },
      "ap-southeast-2": {
        "value": "nodejs22.x",
      },
      "ap-southeast-3": {
        "value": "nodejs22.x",
      },
      "ap-southeast-4": {
        "value": "nodejs22.x",
      },
      "ap-southeast-5": {
        "value": "nodejs22.x",
      },
      "ap-southeast-7": {
        "value": "nodejs22.x",
      },
      "ca-central-1": {
        "value": "nodejs22.x",
      },
      "ca-west-1": {
        "value": "nodejs22.x",
      },
      "cn-north-1": {
        "value": "nodejs22.x",
      },
      "cn-northwest-1": {
        "value": "nodejs22.x",
      },
      "eu-central-1": {
        "value": "nodejs22.x",
      },
      "eu-central-2": {
        "value": "nodejs22.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs22.x",
      },
      "eu-south-1": {
        "value": "nodejs22.x",
      },
      "eu-south-2": {
        "value": "nodejs22.x",
      },
      "eu-west-1": {
        "value": "nodejs22.x",
      },
      "eu-west-2": {
        "value": "nodejs22.x",
      },
      "eu-west-3": {
        "value": "nodejs22.x",
      },
      "il-central-1": {
        "value": "nodejs22.x",
      },
      "me-central-1": {
        "value": "nodejs22.x",
      },
      "me-south-1": {
        "value": "nodejs22.x",
      },
      "mx-central-1": {
        "value": "nodejs22.x",
      },
      "sa-east-1": {
        "value": "nodejs22.x",
      },
      "us-east-1": {
        "value": "nodejs22.x",
      },
      "us-east-2": {
        "value": "nodejs22.x",
      },
      "us-gov-east-1": {
        "value": "nodejs22.x",
      },
      "us-gov-west-1": {
        "value": "nodejs22.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-isob-west-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs22.x",
      },
      "us-west-2": {
        "value": "nodejs22.x",
      },
    },
  },
  "Outputs": {
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-datalake-main:bucket:raw:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-datalake-main:bucket:raw:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-datalake-main:bucket:transformed:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-datalake-main:bucket:transformed:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-datalake-main:kms:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-datalake-main:kms:id",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-datalake-main:role:lakeformation:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-datalake-main:role:lakeformation:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-datalake-main:role:lakeformation:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuesampleorginstance1generatedroledatascientistarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/sample-org/instance1/generated-role/data-scientist/arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/sample-org/instance1/generated-role/test-role/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/test-org/test-domain/caef-bootstrap/role-helper-service-token",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/test-org/test-domain/generated-role/data-scientist/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/test-org/test-domain/generated-role/test-role/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "RoleResDatar1": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "arn": {
            "Ref": "SsmParameterValuesampleorginstance1generatedroledatascientistarnC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "refId": "Data-r-1",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResDatar4": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "name": "data_scientist",
          "refId": "Data-r-4",
          "sso": true,
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResRootrws0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "arn": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/Admin",
              ],
            ],
          },
          "refId": "Root-rws-0",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResRootrws1": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "name": "Admin",
          "refId": "Root-rws-1",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "Stack description parameter to update on version changes",
        "Name": "/test-org/test-domain/test-datalake-main/aws-solution",
        "Tags": {
          "mdaa_cdk_app": "datalake",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-datalake-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "(SO0320-datalake) Modern Data Architecture Accelerator. Version 1.0.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "HIPAA.Security-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "PCI.DSS.321-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "BucketKeyEnabled": true,
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "BucketName": "test-org-test-env-test-domain-test-datalake-main-raw",
        "InventoryConfigurations": [
          {
            "Destination": {
              "BucketArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::test-org-test-env-test-domain-test-datalake-main-raw",
                  ],
                ],
              },
              "Format": "Parquet",
              "Prefix": "inventory",
            },
            "Enabled": true,
            "Id": "all-data",
            "IncludedObjectVersions": "All",
            "OptionalFields": [
              "Size",
              "LastModifiedDate",
              "StorageClass",
              "ETag",
              "IsMultipartUploaded",
              "ReplicationStatus",
              "EncryptionStatus",
              "ObjectLockRetainUntilDate",
              "ObjectLockMode",
              "ObjectLockLegalHoldStatus",
              "IntelligentTieringAccessTier",
            ],
            "Prefix": "data/",
            "ScheduleFrequency": "Daily",
          },
        ],
        "LifecycleConfiguration": {
          "Rules": [
            {
              "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 2,
              },
              "ExpirationInDays": 270,
              "Id": "SampleRule1",
              "NoncurrentVersionExpiration": {
                "NewerNoncurrentVersions": 5,
                "NoncurrentDays": 270,
              },
              "NoncurrentVersionTransitions": [
                {
                  "NewerNoncurrentVersions": 1,
                  "StorageClass": "STANDARD_IA",
                  "TransitionInDays": 30,
                },
                {
                  "NewerNoncurrentVersions": 2,
                  "StorageClass": "GLACIER_IR",
                  "TransitionInDays": 60,
                },
                {
                  "NewerNoncurrentVersions": 3,
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 150,
                },
                {
                  "NewerNoncurrentVersions": 4,
                  "StorageClass": "DEEP_ARCHIVE",
                  "TransitionInDays": 240,
                },
              ],
              "ObjectSizeGreaterThan": 500,
              "ObjectSizeLessThan": 10000,
              "Prefix": "test_prefix",
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "STANDARD_IA",
                  "TransitionInDays": 30,
                },
                {
                  "StorageClass": "GLACIER_IR",
                  "TransitionInDays": 60,
                },
                {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 150,
                },
                {
                  "StorageClass": "DEEP_ARCHIVE",
                  "TransitionInDays": 240,
                },
              ],
            },
            {
              "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 2,
              },
              "ExpiredObjectDeleteMarker": true,
              "Id": "SampleRule2",
              "NoncurrentVersionExpiration": {
                "NewerNoncurrentVersions": 5,
                "NoncurrentDays": 270,
              },
              "NoncurrentVersionTransitions": [
                {
                  "NewerNoncurrentVersions": 1,
                  "StorageClass": "STANDARD_IA",
                  "TransitionInDays": 30,
                },
                {
                  "NewerNoncurrentVersions": 2,
                  "StorageClass": "GLACIER_IR",
                  "TransitionInDays": 60,
                },
                {
                  "NewerNoncurrentVersions": 3,
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 150,
                },
                {
                  "NewerNoncurrentVersions": 4,
                  "StorageClass": "DEEP_ARCHIVE",
                  "TransitionInDays": 240,
                },
              ],
              "ObjectSizeGreaterThan": 500,
              "ObjectSizeLessThan": 10000,
              "Prefix": "test_prefix",
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "STANDARD_IA",
                  "TransitionInDays": 30,
                },
                {
                  "StorageClass": "GLACIER_IR",
                  "TransitionInDays": 60,
                },
                {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 150,
                },
                {
                  "StorageClass": "DEEP_ARCHIVE",
                  "TransitionInDays": 240,
                },
              ],
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datalake",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-datalake-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "HIPAA.Security-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "PCI.DSS.321-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-server-side-encryption": "AES256",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "DenyAES",
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringNotLikeIfExists": {
                  "s3:x-amz-server-side-encryption-aws-kms-key-id": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "ForceKMS",
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/inventory/*",
                  ],
                ],
              },
              "Sid": "AllowS3Inventory",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:PutObject",
                "s3:PutObjectTagging",
                "s3:DeleteObject",
                "s3:DeleteObjectVersion",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResRootrws0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResRootrws1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    "AROA1234567890:*",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "/_ReadWriteSuper",
            },
            {
              "Action": "s3:GetObject*",
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDatar1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDatar4",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/data/*",
                  ],
                ],
              },
              "Sid": "/data_Read",
            },
            {
              "Action": [
                "s3:List*",
                "s3:GetBucket*",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResRootrws0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResRootrws1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    "AROA1234567890:*",
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDatar1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDatar4",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              ],
              "Sid": "BucketAllow",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-datalake-main/bucket/raw/arn",
        "Tags": {
          "mdaa_cdk_app": "datalake",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-datalake-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-datalake-main/bucket/raw/name",
        "Tags": {
          "mdaa_cdk_app": "datalake",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-datalake-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "HIPAA.Security-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "PCI.DSS.321-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "BucketKeyEnabled": true,
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "BucketName": "test-org-test-env-test-domain-test-datalake-main-transformed",
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "SampleRule1",
              "Prefix": "test_prefix",
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "STANDARD_IA",
                  "TransitionInDays": 30,
                },
              ],
            },
            {
              "Id": "SampleRule2",
              "NoncurrentVersionTransitions": [
                {
                  "NewerNoncurrentVersions": 1,
                  "StorageClass": "STANDARD_IA",
                  "TransitionInDays": 30,
                },
              ],
              "Prefix": "test_prefix",
              "Status": "Enabled",
            },
          ],
        },
        "NotificationConfiguration": {
          "EventBridgeConfiguration": {
            "EventBridgeEnabled": true,
          },
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datalake",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-datalake-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "HIPAA.Security-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "PCI.DSS.321-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-server-side-encryption": "AES256",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "DenyAES",
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringNotLikeIfExists": {
                  "s3:x-amz-server-side-encryption-aws-kms-key-id": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "ForceKMS",
            },
            {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/data/*",
                  ],
                ],
              },
              "Sid": "data_Read",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:PutObject",
                "s3:PutObjectTagging",
                "s3:DeleteObject",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/data/*",
                  ],
                ],
              },
              "Sid": "data_ReadWrite",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:PutObject",
                "s3:PutObjectTagging",
                "s3:DeleteObject",
                "s3:DeleteObjectVersion",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResRootrws0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResRootrws1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    "AROA1234567890:*",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "/_ReadWriteSuper",
            },
            {
              "Action": "s3:GetObject*",
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDatar1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDatar4",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/data/*",
                  ],
                ],
              },
              "Sid": "/data_Read",
            },
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/data/",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:List*",
                "s3:GetBucket*",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResRootrws0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResRootrws1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    "AROA1234567890:*",
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDatar1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDatar4",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              ],
              "Sid": "BucketAllow",
            },
            {
              "Action": [
                "s3:PutObject*",
                "s3:GetObject*",
                "s3:DeleteObject*",
              ],
              "Condition": {
                "ForAnyValue:StringNotLike": {
                  "aws:PrincipalArn": [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                  ],
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResRootrws0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResRootrws1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    "AROA1234567890:*",
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDatar1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDatar4",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Deny",
              "NotResource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/inventory/*",
                  ],
                ],
              },
              "Principal": {
                "AWS": "*",
              },
              "Sid": "BucketDeny",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-datalake-main/bucket/transformed/arn",
        "Tags": {
          "mdaa_cdk_app": "datalake",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-datalake-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] MDAA Data Lake does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-datalake-main/bucket/transformed/name",
        "Tags": {
          "mdaa_cdk_app": "datalake",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-datalake-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "Enabled": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResRootrws0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResRootrws1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    "AROA1234567890:*",
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDatar1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDatar4",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResRootrws0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResRootrws1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    "AROA1234567890:*",
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuesampleorginstance1generatedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDatar1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroletestroleidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatascientistidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDatar4",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "test-org-test-env-test-domain-test-datalake-main-usage-stmt",
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datalake",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-datalake-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AliasName": "alias/test-org-test-env-test-domain-test-datalake-main",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-datalake-main/kms/arn",
        "Tags": {
          "mdaa_cdk_app": "datalake",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-datalake-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-datalake-main/kms/id",
        "Tags": {
          "mdaa_cdk_app": "datalake",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-datalake-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
            },
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-datalake-main/datalake-folder-cr-provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-datalake-main-folder-cr-prov",
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datalake",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-datalake-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "datalakefoldertransformedData": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "bucket_name": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "folder_name": "/data",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will interact only with S3.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
            "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-datalake-main-folder-cr",
        "Handler": "datalake_folder.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datalake",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-datalake-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "CR Role",
        "RoleName": "test-org-test-env-test-domain-test-datalake-main-folder-cr",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datalake",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-datalake-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-datalake-main-folder-cr*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-datalake-main-folder-cr*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "CR Role",
        "RoleName": "test-org-test-env-test-domain-test-datalake-main-folder-137b0769",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datalake",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-datalake-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/datalake/datalake-l3-construct/lib/datalake-bucket-l3-construct.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-datalake-main-folder-cr-prov*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-datalake-main-folder-cr-prov*",
                  ],
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "invtableraw": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "TableInput": {
          "Name": "raw_inv",
          "Parameters": {
            "EXTERNAL": "TRUE",
            "projection.bucket_inventory.type": "enum",
            "projection.bucket_inventory.values": "test-org-test-env-test-domain-test-datalake-main-raw/all-data",
            "projection.dt.format": "yyyy-MM-dd-HH-mm",
            "projection.dt.interval": "1",
            "projection.dt.interval.unit": "HOURS",
            "projection.dt.range": "2022-01-01-00-00,NOW",
            "projection.dt.type": "date",
            "projection.enabled": "true",
            "storage.location.template": "s3://test-org-test-env-test-domain-test-datalake-main-raw/inventory/\${bucket_inventory}/hive/dt=\${dt}",
          },
          "PartitionKeys": [
            {
              "Name": "bucket_inventory",
              "Type": "string",
            },
            {
              "Name": "dt",
              "Type": "string",
            },
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "bucket",
                "Type": "string",
              },
              {
                "Name": "key",
                "Type": "string",
              },
              {
                "Name": "version_id",
                "Type": "string",
              },
              {
                "Name": "is_latest",
                "Type": "boolean",
              },
              {
                "Name": "is_delete_marker",
                "Type": "boolean",
              },
              {
                "Name": "size",
                "Type": "bigint",
              },
              {
                "Name": "last_modified_date",
                "Type": "timestamp",
              },
              {
                "Name": "e_tag",
                "Type": "string",
              },
              {
                "Name": "storage_class",
                "Type": "string",
              },
              {
                "Name": "is_multipart_uploaded",
                "Type": "boolean",
              },
              {
                "Name": "replication_status",
                "Type": "string",
              },
              {
                "Name": "encryption_status",
                "Type": "string",
              },
              {
                "Name": "intelligent_tiering_tier",
                "Type": "string",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.SymlinkTextInputFormat",
            "Location": "s3://test-org-test-env-test-domain-test-datalake-main-raw/inventory/",
            "NumberOfBuckets": -1,
            "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
            "SerdeInfo": {
              "Parameters": {
                "serialization.format": "1",
              },
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lakeformation.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role for accessing the data lake via LakeFormation.",
        "RoleName": "test-org-test-env-test-domain-test-datalake-main-lake-formation",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "datalake",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-datalake-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-datalake-main/role/lake-formation/arn",
        "Tags": {
          "mdaa_cdk_app": "datalake",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-datalake-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-datalake-main/role/lake-formation/id",
        "Tags": {
          "mdaa_cdk_app": "datalake",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-datalake-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-datalake-main/role/lake-formation/name",
        "Tags": {
          "mdaa_cdk_app": "datalake",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-datalake-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "lfresourcetransformedreaddata": {
      "Properties": {
        "ResourceArn": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
              "/data",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "UseServiceLinkedRole": false,
      },
      "Type": "AWS::LakeFormation::Resource",
    },
    "lfresourcetransformedreadwritedata": {
      "Properties": {
        "ResourceArn": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
              "/data",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "UseServiceLinkedRole": false,
      },
      "Type": "AWS::LakeFormation::Resource",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": {
          "Name": "test_org_test_env_test_domain_test_datalake_main_util",
        },
      },
      "Type": "AWS::Glue::Database",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
