// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`dataops-project Snapshot Tests Dataops Project App App Snapshot Test 1`] = `
{
  "test-org-test-env-test-domain-test-dataops-project-main": {
    "Description": "(SO0320-dataops-project) Modern Data Architecture Accelerator. Version 1.0.0",
    "Mappings": {
      "LatestNodeRuntimeMap": {
        "af-south-1": {
          "value": "nodejs22.x",
        },
        "ap-east-1": {
          "value": "nodejs22.x",
        },
        "ap-east-2": {
          "value": "nodejs22.x",
        },
        "ap-northeast-1": {
          "value": "nodejs22.x",
        },
        "ap-northeast-2": {
          "value": "nodejs22.x",
        },
        "ap-northeast-3": {
          "value": "nodejs22.x",
        },
        "ap-south-1": {
          "value": "nodejs22.x",
        },
        "ap-south-2": {
          "value": "nodejs22.x",
        },
        "ap-southeast-1": {
          "value": "nodejs22.x",
        },
        "ap-southeast-2": {
          "value": "nodejs22.x",
        },
        "ap-southeast-3": {
          "value": "nodejs22.x",
        },
        "ap-southeast-4": {
          "value": "nodejs22.x",
        },
        "ap-southeast-5": {
          "value": "nodejs22.x",
        },
        "ap-southeast-7": {
          "value": "nodejs22.x",
        },
        "ca-central-1": {
          "value": "nodejs22.x",
        },
        "ca-west-1": {
          "value": "nodejs22.x",
        },
        "cn-north-1": {
          "value": "nodejs22.x",
        },
        "cn-northwest-1": {
          "value": "nodejs22.x",
        },
        "eu-central-1": {
          "value": "nodejs22.x",
        },
        "eu-central-2": {
          "value": "nodejs22.x",
        },
        "eu-isoe-west-1": {
          "value": "nodejs18.x",
        },
        "eu-north-1": {
          "value": "nodejs22.x",
        },
        "eu-south-1": {
          "value": "nodejs22.x",
        },
        "eu-south-2": {
          "value": "nodejs22.x",
        },
        "eu-west-1": {
          "value": "nodejs22.x",
        },
        "eu-west-2": {
          "value": "nodejs22.x",
        },
        "eu-west-3": {
          "value": "nodejs22.x",
        },
        "il-central-1": {
          "value": "nodejs22.x",
        },
        "me-central-1": {
          "value": "nodejs22.x",
        },
        "me-south-1": {
          "value": "nodejs22.x",
        },
        "mx-central-1": {
          "value": "nodejs22.x",
        },
        "sa-east-1": {
          "value": "nodejs22.x",
        },
        "us-east-1": {
          "value": "nodejs22.x",
        },
        "us-east-2": {
          "value": "nodejs22.x",
        },
        "us-gov-east-1": {
          "value": "nodejs22.x",
        },
        "us-gov-west-1": {
          "value": "nodejs22.x",
        },
        "us-iso-east-1": {
          "value": "nodejs18.x",
        },
        "us-iso-west-1": {
          "value": "nodejs18.x",
        },
        "us-isob-east-1": {
          "value": "nodejs18.x",
        },
        "us-isob-west-1": {
          "value": "nodejs18.x",
        },
        "us-west-1": {
          "value": "nodejs22.x",
        },
        "us-west-2": {
          "value": "nodejs22.x",
        },
      },
    },
    "Outputs": {
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:bucket:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:bucket:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:kms:cmk:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:kms:cmk:id",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:workgroup:name",
        },
        "Value": "test-org-test-env-test-domain-test-dataops-project-main",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:project:name",
        },
        "Value": "test-org-test-env-test-domain-test-dataops-project-main",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:security-group:testsecuritygroup:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:role:dzmanageaccess:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:role:dzmanageaccess:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:role:dzmanageaccess:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:managed-policy:wgusage:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:managed-policy:wgusage:name",
        },
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:lambda:domainconfigparserhandler:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:lambda:domainconfigparserhandler:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:topic:dataopssnstopic:arn",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:topic:dataopssnstopic:name",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "TopicName",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:role:dzuser:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:role:dzuser:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:role:dzuser:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:role:lakeformation:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:role:lakeformation:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:role:lakeformation:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:role:deployment:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:role:deployment:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-dataops-project-main:role:deployment:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
    },
    "Parameters": {
      "BootstrapVersion": {
        "Default": "/cdk-bootstrap/hnb659fds/version",
        "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuesampleorginstance1datalakekmsidC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/sample-org/instance1/datalake/kms/id",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/sample-org/instance1/generated-role/glue-role/arn",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuesampleorgsharedgluecatalogkmsarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/sample-org/shared/glue-catalog/kms/arn",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/test-org/test-domain/caef-bootstrap/role-helper-service-token",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/test-org/test-domain/generated-role/databrew/id",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
    },
    "Resources": {
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-S1",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "HIPAA.Security-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "PCI.DSS.321-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "BucketEncryption": {
            "ServerSideEncryptionConfiguration": [
              {
                "BucketKeyEnabled": true,
                "ServerSideEncryptionByDefault": {
                  "KMSMasterKeyID": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  "SSEAlgorithm": "aws:kms",
                },
              },
            ],
          },
          "BucketName": "test-org-test-env-test-domain-test-dataops-project-main",
          "PublicAccessBlockConfiguration": {
            "BlockPublicAcls": true,
            "BlockPublicPolicy": true,
            "IgnorePublicAcls": true,
            "RestrictPublicBuckets": true,
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "dataops-project",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-dataops-project-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "VersioningConfiguration": {
            "Status": "Enabled",
          },
        },
        "Type": "AWS::S3::Bucket",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-S1",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "HIPAA.Security-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "PCI.DSS.321-S3BucketLoggingEnabled",
                "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
              },
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "Bucket": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "s3:*",
                "Condition": {
                  "Bool": {
                    "aws:SecureTransport": "false",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": "s3:PutObject",
                "Condition": {
                  "StringEquals": {
                    "s3:x-amz-server-side-encryption": "AES256",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "DenyAES",
              },
              {
                "Action": "s3:PutObject",
                "Condition": {
                  "ForAllValues:StringNotLikeIfExists": {
                    "s3:x-amz-server-side-encryption-aws-kms-key-id": [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      {
                        "Ref": "SsmParameterValuesampleorginstance1datalakekmsidC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                    ],
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "ForceKMS",
              },
              {
                "Action": "s3:GetObject*",
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataEngineer0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "/_Read",
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObjectTagging",
                  "s3:DeleteObject",
                  "s3:DeleteObjectVersion",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataAdmin0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "/_ReadWriteSuper",
              },
              {
                "Action": "s3:GetObject*",
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataEngineer0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/athena-results/*",
                    ],
                  ],
                },
                "Sid": "/athena-results_Read",
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObjectTagging",
                  "s3:DeleteObject",
                ],
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/athena-results/*",
                    ],
                  ],
                },
                "Sid": "/athena-results_ReadWrite",
              },
              {
                "Action": "s3:GetObject*",
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResProjectExRoles0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/deployment/*",
                    ],
                  ],
                },
                "Sid": "/deployment_Read",
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObjectTagging",
                  "s3:DeleteObject",
                ],
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/deployment/*",
                    ],
                  ],
                },
                "Sid": "/deployment_ReadWrite",
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObjectTagging",
                  "s3:DeleteObject",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataEngineer0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResProjectExRoles0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/data/*",
                    ],
                  ],
                },
                "Sid": "/data_ReadWrite",
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObjectTagging",
                  "s3:DeleteObject",
                ],
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/data/*",
                    ],
                  ],
                },
                "Sid": "/data_ReadWrite",
              },
              {
                "Action": [
                  "s3:GetObject*",
                  "s3:PutObject",
                  "s3:PutObjectTagging",
                  "s3:DeleteObject",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResProjectExRoles0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/temp/*",
                    ],
                  ],
                },
                "Sid": "/temp_ReadWrite",
              },
              {
                "Action": [
                  "s3:PutObject*",
                  "s3:GetObject*",
                  "s3:DeleteObject*",
                ],
                "Condition": {
                  "ForAnyValue:StringNotLike": {
                    "aws:PrincipalArn": [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                    ],
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataAdmin0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataEngineer0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResProjectExRoles0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                "Sid": "BucketDeny",
              },
              {
                "Action": [
                  "s3:List*",
                  "s3:GetBucket*",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataAdmin0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataEngineer0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResProjectExRoles0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                ],
                "Sid": "BucketAllow",
              },
            ],
            "Version": "2012-10-17",
          },
        },
        "Type": "AWS::S3::BucketPolicy",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/bucket/arn",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
              },
              {
                "id": "HIPAA.Security-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
              },
              {
                "id": "PCI.DSS.321-S3BucketReplicationEnabled",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/bucket/name",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Properties": {
          "EnableKeyRotation": true,
          "Enabled": true,
          "KeyPolicy": {
            "Statement": [
              {
                "Action": "kms:*",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
                "Resource": "*",
              },
              {
                "Action": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:ReEncryptFrom",
                  "kms:ReEncryptTo",
                  "kms:GenerateDataKey",
                  "kms:GenerateDataKeyWithoutPlaintext",
                  "kms:GenerateDataKeyPair",
                  "kms:GenerateDataKeyPairWithoutPlaintext",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataAdmin0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataEngineer0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResProjectExRoles0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "RoleId",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "test-org-test-env-test-domain-test-dataops-project-main-usage-stmt",
              },
              {
                "Action": [
                  "kms:Create*",
                  "kms:Describe*",
                  "kms:Enable*",
                  "kms:List*",
                  "kms:Put*",
                  "kms:Update*",
                  "kms:Revoke*",
                  "kms:Disable*",
                  "kms:Get*",
                  "kms:Delete*",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "kms:ScheduleKeyDeletion",
                  "kms:CancelKeyDeletion",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResDataAdmin0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "test-org-test-env-test-domain-test-dataops-project-main-usage-stmt",
              },
              {
                "Action": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:ReEncryptFrom",
                  "kms:ReEncryptTo",
                  "kms:GenerateDataKey",
                  "kms:GenerateDataKeyWithoutPlaintext",
                  "kms:GenerateDataKeyPair",
                  "kms:GenerateDataKeyPairWithoutPlaintext",
                ],
                "Condition": {
                  "ArnEquals": {
                    "kms:EncryptionContext:aws:logs:arn": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":logs:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":log-group:*",
                        ],
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "Service": {
                    "Fn::Join": [
                      "",
                      [
                        "logs.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
                "Resource": "*",
                "Sid": "CloudWatchLogsEncryption",
              },
              {
                "Action": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:ReEncryptFrom",
                  "kms:ReEncryptTo",
                  "kms:GenerateDataKey",
                  "kms:GenerateDataKeyWithoutPlaintext",
                  "kms:GenerateDataKeyPair",
                  "kms:GenerateDataKeyPairWithoutPlaintext",
                ],
                "Effect": "Allow",
                "Principal": {
                  "AWS": [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                  ],
                },
                "Resource": "*",
                "Sid": "ProjectDeployment",
              },
              {
                "Action": [
                  "kms:GenerateDataKey",
                  "kms:Decrypt",
                ],
                "Condition": {
                  "StringEquals": {
                    "kms:CallerAccount": {
                      "Ref": "AWS::AccountId",
                    },
                    "kms:ViaService": {
                      "Fn::Join": [
                        "",
                        [
                          "sqs.",
                          {
                            "Ref": "AWS::Region",
                          },
                          ".amazonaws.com",
                        ],
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "sqsEncryption",
              },
              {
                "Action": [
                  "kms:GenerateDataKey",
                  "kms:Decrypt",
                ],
                "Effect": "Allow",
                "Principal": {
                  "Service": "events.amazonaws.com",
                },
                "Resource": "*",
                "Sid": "eventBridgeEncryption",
              },
            ],
            "Version": "2012-10-17",
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "dataops-project",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-dataops-project-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::KMS::Key",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AliasName": "alias/test-org-test-env-test-domain-test-dataops-project-main-cmk",
          "TargetKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::KMS::Alias",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/kms/cmk/arn",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/kms/cmk/id",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "RoleResDataAdmin0": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "name": "Admin",
            "refId": "DataAdmin-0",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResDataEngineer0": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/sample-org-dev-instance1-roles-data-engineer",
                ],
              ],
            },
            "refId": "DataEngineer-0",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResProjectExRoles0": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "arn": {
              "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
            "refId": "ProjectExRoles-0",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResProjectExRoles1": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "id": {
              "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
            "refId": "ProjectExRoles-1",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "Stack description parameter to update on version changes",
          "Name": "/test-org/test-domain/test-dataops-project-main/aws-solution",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "(SO0320-dataops-project) Modern Data Architecture Accelerator. Version 1.0.0",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-dataops-project-main-catalog-key-access",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "kms:Decrypt",
                "Effect": "Allow",
                "Resource": {
                  "Ref": "SsmParameterValuesampleorgsharedgluecatalogkmsarnC96584B6F00A464EAD1953AFF4B05118Parameter",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResProjectExRoles1",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "classifierCsvclassifier": {
        "Properties": {
          "CsvClassifier": {
            "AllowSingleColumn": false,
            "ContainsHeader": "PRESENT",
            "Delimiter": "~",
            "DisableValueTrimming": false,
            "Header": [
              "columnA",
              "columnB",
            ],
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-classifiercsv",
            "QuoteSymbol": "^",
          },
        },
        "Type": "AWS::Glue::Classifier",
      },
      "classifierGrokclassifier": {
        "Properties": {
          "GrokClassifier": {
            "Classification": "special-logs",
            "CustomPatterns": "MESSAGEPREFIX .*-.*-.*-.*-.*",
            "GrokPattern": "%{TIMESTAMP_ISO8601:timestamp} \\[%{MESSAGEPREFIX:message_prefix}\\] %{CRAWLERLOGLEVEL:loglevel} : %{GREEDYDATA:message}",
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-classifiergrok",
          },
        },
        "Type": "AWS::Glue::Classifier",
      },
      "classifierJsonclassifier": {
        "Properties": {
          "JsonClassifier": {
            "JsonPath": "$[*]",
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-classifierjson",
          },
        },
        "Type": "AWS::Glue::Classifier",
      },
      "classifierXmlclassifier": {
        "Properties": {
          "XMLClassifier": {
            "Classification": "xml-data",
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-classifierxml",
            "RowTag": "<row item_a="A" item_b="B"></row>",
          },
        },
        "Type": "AWS::Glue::Classifier",
      },
      "connectionJdbcconnection": {
        "Properties": {
          "CatalogId": {
            "Ref": "AWS::AccountId",
          },
          "ConnectionInput": {
            "ConnectionProperties": {
              "JDBC_CONNECTION_URL": "jdbc:awsathena://AwsRegion=[REGION];UID=[ACCESS KEY];PWD=[SECRET KEY];S3OutputLocation=[LOCATION]",
              "JDBC_ENFORCE_SSL": true,
            },
            "ConnectionType": "JDBC",
            "Description": "JDBC Connection Example",
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-connectionjdbc",
            "PhysicalConnectionRequirements": {
              "AvailabilityZone": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "AWS::Region",
                    },
                    "a",
                  ],
                ],
              },
              "SecurityGroupIdList": [
                "sg-890abc123asc",
              ],
              "SubnetId": "subnet-123abc456def",
            },
          },
        },
        "Type": "AWS::Glue::Connection",
      },
      "connectionVpcWithProjectSGconnection": {
        "Properties": {
          "CatalogId": {
            "Ref": "AWS::AccountId",
          },
          "ConnectionInput": {
            "ConnectionType": "NETWORK",
            "Description": "VPC Connection Example",
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-connectionvpcwithprojectsg",
            "PhysicalConnectionRequirements": {
              "AvailabilityZone": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "AWS::Region",
                    },
                    "a",
                  ],
                ],
              },
              "SecurityGroupIdList": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "GroupId",
                  ],
                },
              ],
              "SubnetId": "subnet-09ba402b76a346ffb",
            },
          },
        },
        "Type": "AWS::Glue::Connection",
      },
      "connectionVpcconnection": {
        "Properties": {
          "CatalogId": {
            "Ref": "AWS::AccountId",
          },
          "ConnectionInput": {
            "ConnectionType": "NETWORK",
            "Description": "VPC Connection Example",
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-connectionvpc",
            "PhysicalConnectionRequirements": {
              "AvailabilityZone": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "AWS::Region",
                    },
                    "a",
                  ],
                ],
              },
              "SecurityGroupIdList": [
                "sg-890abc123asc",
              ],
              "SubnetId": "subnet-123abc456def",
            },
          },
        },
        "Type": "AWS::Glue::Connection",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "Amazon Athena",
          "DomainIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "domainId",
            ],
          },
          "EnvironmentIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Id",
            ],
          },
          "Name": "Query data",
          "Parameters": {
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "https://us-east-1.console.aws.amazon.com/athena/home?region=",
                  {
                    "Ref": "AWS::Region",
                  },
                  "#/query-editor",
                ],
              ],
            },
          },
        },
        "Type": "AWS::DataZone::EnvironmentActions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "test-org-test-env-test-domain-test-dataops-project-main",
          "Tags": [
            {
              "Key": "AmazonDataZoneDomain",
              "Value": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "domainId",
                ],
              },
            },
            {
              "Key": "AmazonDataZoneEnvironment",
              "Value": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Id",
                ],
              },
            },
            {
              "Key": "AmazonDataZoneProject",
              "Value": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Id",
                ],
              },
            },
            {
              "Key": "mdaa_cdk_app",
              "Value": "dataops-project",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-dataops-project-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "WorkGroupConfiguration": {
            "EnforceWorkGroupConfiguration": true,
            "PublishCloudWatchMetricsEnabled": true,
            "ResultConfiguration": {
              "EncryptionConfiguration": {
                "EncryptionOption": "SSE_KMS",
                "KmsKey": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
              "OutputLocation": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "REPLACED-CFN-LOGICAL-ID",
                    },
                    "/athena-results/",
                  ],
                ],
              },
            },
          },
        },
        "Type": "AWS::Athena::WorkGroup",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/workgroup/name",
          "Tags": {
            "AmazonDataZoneDomain": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "domainId",
              ],
            },
            "AmazonDataZoneEnvironment": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Id",
              ],
            },
            "AmazonDataZoneProject": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Id",
              ],
            },
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test-org-test-env-test-domain-test-dataops-project-main",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "AWS Console",
          "DomainIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "domainId",
            ],
          },
          "EnvironmentIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Id",
            ],
          },
          "Name": "View AWS Console",
          "Parameters": {
            "Uri": "https://console.aws.amazon.com/",
          },
        },
        "Type": "AWS::DataZone::EnvironmentActions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "DomainIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "domainId",
            ],
          },
          "EnvironmentAccountIdentifier": {
            "Ref": "AWS::AccountId",
          },
          "EnvironmentAccountRegion": {
            "Ref": "AWS::Region",
          },
          "EnvironmentBlueprintId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "datalakeEnvBlueprintId",
            ],
          },
          "EnvironmentProfileIdentifier": "",
          "EnvironmentRoleArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Name": "test-org-test-env-test-domain-test-dataops-project-main",
          "ProjectIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Id",
            ],
          },
        },
        "Type": "AWS::DataZone::Environment",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "DomainIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "domainId",
            ],
          },
          "Name": "test-org-test-env-test-domain-test-dataops-project-main",
        },
        "Type": "AWS::DataZone::Project",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Properties": {
          "Designation": "PROJECT_OWNER",
          "DomainIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "domainId",
            ],
          },
          "Member": {
            "UserIdentifier": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "adminUserProfileId",
              ],
            },
          },
          "ProjectIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Id",
            ],
          },
        },
        "Type": "AWS::DataZone::ProjectMembership",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/project/name",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test-org-test-env-test-domain-test-dataops-project-main",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "ApplicableAssetTypes": [
            "GlueTableAssetType",
          ],
          "AuthorizedPrincipals": [
            {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          ],
          "DomainIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "domainId",
            ],
          },
          "EnvironmentIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Id",
            ],
          },
          "ManageAccessRole": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Name": "test-org-test-env-test-domain-test-dataops-project-main",
          "SubscriptionTargetConfig": [
            {
              "Content": "{"databaseName":"test-org-test-env-test-domain-test-dataops-project-main-datazone-sub"}",
              "FormName": "GlueSubscriptionTargetConfigForm",
            },
          ],
          "Type": "GlueSubscriptionTargetType",
        },
        "Type": "AWS::DataZone::SubscriptionTarget",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] Fine-grained permissions enforced via LakeFormation.",
              },
              {
                "id": "NIST.800.53.R5-IAMPolicyNoStatementsWithFullAccess",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] Fine-grained permissions enforced via LakeFormation.",
              },
              {
                "id": "HIPAA.Security-IAMPolicyNoStatementsWithFullAccess",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] Fine-grained permissions enforced via LakeFormation.",
              },
              {
                "id": "PCI.DSS.321-IAMPolicyNoStatementsWithFullAccess",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] Fine-grained permissions enforced via LakeFormation.",
              },
            ],
          },
        },
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-dataops-project-main-datazone-user-access-policy",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "datazone:ListDomains",
                  "datazone:ListProjects",
                  "datazone:ListAccountEnvironments",
                  "datazone:ListEnvironments",
                  "datazone:GetEnvironment",
                  "datazone:*",
                ],
                "Effect": "Allow",
                "Resource": "*",
              },
              {
                "Action": [
                  "s3:GetBucketLocation",
                  "s3:GetBucketVersioning",
                  "s3:GetBucketTagging",
                  "s3:GetEncryptionConfiguration",
                  "s3:GetIntelligentTieringConfiguration",
                  "s3:GetBucketPolicy",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "Sid": "ProjectBucketGet",
              },
              {
                "Action": "athena:ListWorkGroups",
                "Effect": "Allow",
                "Resource": "*",
              },
              {
                "Action": "lakeformation:GetDataAccess",
                "Effect": "Allow",
                "Resource": "*",
              },
              {
                "Action": "glue:GetColumnStatisticsTaskRuns",
                "Effect": "Allow",
                "Resource": "*",
              },
              {
                "Action": [
                  "glue:GetDatabase",
                  "glue:GetDatabases",
                  "glue:GetTable",
                  "glue:GetTables",
                  "glue:GetPartition",
                  "glue:GetPartitions",
                  "glue:SearchTables",
                  "glue:GetTableVersion",
                  "glue:GetTableVersions",
                  "glue:GetColumnStatistics*",
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":glue:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":*:catalog",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":glue:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":*:database/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":glue:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":*:table/*",
                      ],
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":glue:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":*:tableVersion/*",
                      ],
                    ],
                  },
                ],
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "domainConfigSSMParam": "/sample-org/shared/datazone/domain/test-domain/config",
        },
        "Type": "Custom::DomainConfigParser",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "GroupDescription": "test-org-test-env-test-domain-test-dataops-project-main/construct/ec2/test-security-group",
          "GroupName": "test-org-test-env-test-domain-test-dataops-project-main-test-security-group",
          "SecurityGroupEgress": [
            {
              "CidrIp": "255.255.255.255/32",
              "Description": "Disallow all traffic",
              "FromPort": 252,
              "IpProtocol": "icmp",
              "ToPort": 86,
            },
          ],
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "dataops-project",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-dataops-project-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "VpcId": "test-vpcid",
        },
        "Type": "AWS::EC2::SecurityGroup",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
              {
                "id": "HIPAA.Security-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
              {
                "id": "PCI.DSS.321-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
            ],
          },
        },
        "Properties": {
          "Description": "Self-Ref",
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "-1",
          "SourceSecurityGroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
        },
        "Type": "AWS::EC2::SecurityGroupIngress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/security-group/test-security-group/id",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "CidrIp": "10.10.10.0/24",
          "Description": "to 10.10.10.0/24:tcp PORT 443",
          "FromPort": 443,
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "tcp",
          "ToPort": 443,
        },
        "Type": "AWS::EC2::SecurityGroupEgress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "to sg-12312412123:tcp PORT 443",
          "DestinationSecurityGroupId": "sg-12312412123",
          "FromPort": 443,
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "tcp",
          "ToPort": 443,
        },
        "Type": "AWS::EC2::SecurityGroupEgress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
              {
                "id": "HIPAA.Security-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
              {
                "id": "PCI.DSS.321-EC2RestrictedCommonPorts",
                "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
              },
            ],
          },
        },
        "Properties": {
          "Description": "Self-Ref",
          "DestinationSecurityGroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "-1",
        },
        "Type": "AWS::EC2::SecurityGroupEgress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "AWS Glue Catalog",
          "DomainIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "domainId",
            ],
          },
          "EnvironmentIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Id",
            ],
          },
          "Name": "View Glue Catalogs",
          "Parameters": {
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "AWS::Region",
                  },
                  ".console.aws.amazon.com/glue/home?region=",
                  {
                    "Ref": "AWS::Region",
                  },
                  "#/v2/data-catalog/tables",
                ],
              ],
            },
          },
        },
        "Type": "AWS::DataZone::EnvironmentActions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "AWS Glue ETL",
          "DomainIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "domainId",
            ],
          },
          "EnvironmentIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Id",
            ],
          },
          "Name": "View Glue ETL jobs",
          "Parameters": {
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "AWS::Region",
                  },
                  ".console.aws.amazon.com/gluestudio/home?region=",
                  {
                    "Ref": "AWS::Region",
                  },
                  "#/jobs",
                ],
              ],
            },
          },
        },
        "Type": "AWS::DataZone::EnvironmentActions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "DATA_LOCATION_ACCESS",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
          "Resource": {
            "DataLocation": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "ResourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::some-bucket-name/data/test1",
                  ],
                ],
              },
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "DATA_LOCATION_ACCESS",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResProjectExRoles1",
                "arn",
              ],
            },
          },
          "Resource": {
            "DataLocation": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "ResourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::some-bucket-name/data/test1",
                  ],
                ],
              },
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "testdatabase2database",
        ],
        "Properties": {
          "Permissions": [
            "DATA_LOCATION_ACCESS",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
          "Resource": {
            "DataLocation": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "ResourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::some-bucket-name/data/test2",
                  ],
                ],
              },
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "testdatabase2database",
        ],
        "Properties": {
          "Permissions": [
            "DATA_LOCATION_ACCESS",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResProjectExRoles1",
                "arn",
              ],
            },
          },
          "Resource": {
            "DataLocation": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "ResourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::some-bucket-name/data/test2",
                  ],
                ],
              },
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "testdatabase4database",
        ],
        "Properties": {
          "Permissions": [
            "DATA_LOCATION_ACCESS",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
          "Resource": {
            "DataLocation": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "ResourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::some-bucket-name/data/test4",
                  ],
                ],
              },
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "testdatabase4database",
        ],
        "Properties": {
          "Permissions": [
            "DATA_LOCATION_ACCESS",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResProjectExRoles1",
                "arn",
              ],
            },
          },
          "Resource": {
            "DataLocation": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "ResourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::some-bucket-name/data/test4",
                  ],
                ],
              },
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "testdatabase5database",
        ],
        "Properties": {
          "Permissions": [
            "DATA_LOCATION_ACCESS",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
          "Resource": {
            "DataLocation": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "ResourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::some-bucket-name/data/test5",
                  ],
                ],
              },
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "testdatabase5database",
        ],
        "Properties": {
          "Permissions": [
            "DATA_LOCATION_ACCESS",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResProjectExRoles1",
                "arn",
              ],
            },
          },
          "Resource": {
            "DataLocation": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "ResourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::some-bucket-name/data/test5",
                  ],
                ],
              },
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "datazonesubdatabase",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
            "ALTER",
            "DROP",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResDataAdmin0",
                "arn",
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-datazone-sub",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "datazonesubdatabase",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
          ],
          "PermissionsWithGrantOption": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
          ],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-datazone-sub",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "datazonesubdatabase",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
            "DROP",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResDataAdmin0",
                "arn",
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-datazone-sub",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "datazonesubdatabase",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
          ],
          "PermissionsWithGrantOption": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
          ],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-datazone-sub",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
            "ALTER",
            "DROP",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResDataAdmin0",
                "arn",
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/sample-org-dev-instance1-roles-data-engineer",
                ],
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResProjectExRoles1",
                "arn",
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
            "DROP",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResDataAdmin0",
                "arn",
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/sample-org-dev-instance1-roles-data-engineer",
                ],
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResProjectExRoles1",
                "arn",
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": "some-federation-provider-arn:user/some-user-name",
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": "some-federation-provider-arn:group/some-group-name",
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": "some-other-role-arn",
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": "some-federation-provider-arn:user/some-user-name",
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
              "Name": "test-table",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": "some-federation-provider-arn:group/some-group-name",
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
              "Name": "test-table",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase1database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": "some-other-role-arn",
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
              "Name": "test-table",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase2database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
            "ALTER",
            "DROP",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResDataAdmin0",
                "arn",
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase2database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/sample-org-dev-instance1-roles-data-engineer",
                ],
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase2database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase2database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResProjectExRoles1",
                "arn",
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase2database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/cross-account-role",
                ],
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "testdatabase2database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
            "DROP",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResDataAdmin0",
                "arn",
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase2database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/sample-org-dev-instance1-roles-data-engineer",
                ],
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase2database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase2database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResProjectExRoles1",
                "arn",
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase2database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/cross-account-role",
                ],
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase3database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
          ],
          "PermissionsWithGrantOption": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
          ],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database3",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "testdatabase3database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
          ],
          "PermissionsWithGrantOption": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
          ],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database3",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase4database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
            "ALTER",
            "DROP",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResDataAdmin0",
                "arn",
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-database4",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase4database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/sample-org-dev-instance1-roles-data-engineer",
                ],
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-database4",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase4database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-database4",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase4database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResProjectExRoles1",
                "arn",
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-database4",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase4database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/cross-account-role",
                ],
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test-database4",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "testdatabase4database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
            "DROP",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResDataAdmin0",
                "arn",
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-database4",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase4database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/sample-org-dev-instance1-roles-data-engineer",
                ],
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-database4",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase4database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-database4",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase4database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResProjectExRoles1",
                "arn",
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-database4",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase4database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/cross-account-role",
                ],
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test-database4",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase5database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
            "ALTER",
            "DROP",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResDataAdmin0",
                "arn",
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase5database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/sample-org-dev-instance1-roles-data-engineer",
                ],
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase5database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase5database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
            "INSERT",
            "DELETE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResProjectExRoles1",
                "arn",
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase5database",
        ],
        "Properties": {
          "Permissions": [
            "SELECT",
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/cross-account-role",
                ],
              ],
            },
          },
          "Resource": {
            "Table": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "DatabaseName": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
              "TableWildcard": {},
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "testdatabase5database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
            "DROP",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResDataAdmin0",
                "arn",
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase5database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/sample-org-dev-instance1-roles-data-engineer",
                ],
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase5database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase5database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
            "CREATE_TABLE",
            "ALTER",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::GetAtt": [
                "RoleResProjectExRoles1",
                "arn",
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "testdatabase5database",
        ],
        "Properties": {
          "Permissions": [
            "DESCRIBE",
          ],
          "PermissionsWithGrantOption": [],
          "Principal": {
            "DataLakePrincipalIdentifier": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/cross-account-role",
                ],
              ],
            },
          },
          "Resource": {
            "Database": {
              "CatalogId": {
                "Ref": "AWS::AccountId",
              },
              "Name": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
            },
          },
        },
        "Type": "AWS::LakeFormation::PrincipalPermissions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM4",
                "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] Permissions are restricted to one DataZone Domain and to one AWS Account.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Condition": {
                  "ArnEquals": {
                    "aws:SourceArn": {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "domainArn",
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "Service": "datazone.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::aws:policy/service-role/AmazonDataZoneGlueManageAccessRolePolicy",
                ],
              ],
            },
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":policy/",
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "domainKmsUsagePolicyName",
                    ],
                  },
                ],
              ],
            },
          ],
          "RoleName": "test-org-test-env-test-domain-test-dataops-project-main-55711afa",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "dataops-project",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-dataops-project-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/role/dz-manage-access/arn",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/role/dz-manage-access/id",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/role/dz-manage-access/name",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "Amazon S3",
          "DomainIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "domainId",
            ],
          },
          "EnvironmentIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Id",
            ],
          },
          "Name": "Project S3 Data",
          "Parameters": {
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "AWS::Region",
                  },
                  ".console.aws.amazon.com/s3/buckets/test-org-test-env-test-domain-test-dataops-project-main/Bucketproject/data/",
                ],
              ],
            },
          },
        },
        "Type": "AWS::DataZone::EnvironmentActions",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "testdatabase3database",
        ],
        "Properties": {
          "Configuration": {
            "GlueRunConfiguration": {
              "AutoImportDataQualityResult": true,
              "DataAccessRole": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
              "RelationalFilterConfigurations": [
                {
                  "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database3",
                },
              ],
            },
          },
          "DomainIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "DomainId",
            ],
          },
          "EnvironmentIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Id",
            ],
          },
          "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database3",
          "ProjectIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Id",
            ],
          },
          "Type": "glue",
        },
        "Type": "AWS::DataZone::DataSource",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "",
          "ManagedPolicyName": "test-org-test-env-test-domain-test-dataops-project-main-50ebfe89",
          "Path": "/",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "athena:BatchGetQueryExecution",
                  "athena:ListDataCatalogs",
                  "athena:ListDatabases",
                  "athena:ListEngineVersions",
                  "athena:ListNamedQueries",
                  "athena:ListPreparedStatements",
                  "athena:ListQueryExecutions",
                  "athena:ListTableMetadata",
                  "athena:ListTagsForResource",
                  "athena:ListWorkGroups",
                  "athena:GetDataCatalog",
                  "athena:GetDatabase",
                  "athena:GetNamedQuery",
                  "athena:GetPreparedStatement",
                  "athena:GetQueryExecution",
                  "athena:GetQueryResults",
                  "athena:GetQueryResultsStream",
                  "athena:GetTableMetadata",
                  "athena:GetWorkGroup",
                  "athena:BatchGetNamedQuery",
                  "athena:StartQueryExecution",
                  "athena:StopQueryExecution",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":athena:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":workgroup/test-org-test-env-test-domain-test-dataops-project-main",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "REPLACED-CFN-LOGICAL-ID",
                                "Arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            "sample-org-dev-instance1-roles-data-engineer",
          ],
        },
        "Type": "AWS::IAM::ManagedPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/managed-policy/wg-usage/arn",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/managed-policy/wg-usage/name",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "REPLACED-CFN-LOGICAL-ID",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Environment": {
            "Variables": {
              "LOG_LEVEL": "INFO",
              "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-dataops-project-mai--3cc64af9",
          "Handler": "domain_configuration.lambda_handler",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": "python3.13",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "dataops-project",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-dataops-project-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 120,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/lambda/domainconfigparser-handler/arn",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/lambda/domainconfigparser-handler/name",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "ssm:GetParameter",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/sample-org/shared/datazone/domain/test-domain/config",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "DomainConfigParser-handler",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "RoleName": "test-org-test-env-test-domain-test-dataops-project-mai--3cc64af9",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "dataops-project",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-dataops-project-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-dataops-project-mai--3cc64af9*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-dataops-project-mai--3cc64af9*",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-L1",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
              },
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-dataops-project-main/custom-DomainConfigParser-provider)",
          "Environment": {
            "Variables": {
              "USER_ON_EVENT_FUNCTION_ARN": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-dataops-project-main-69015fd4",
          "Handler": "framework.onEvent",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": {
            "Fn::FindInMap": [
              "LatestNodeRuntimeMap",
              {
                "Ref": "AWS::Region",
              },
              "value",
            ],
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "dataops-project",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-dataops-project-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 900,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Description": "CR Role",
          "RoleName": "test-org-test-env-test-domain-test-dataops-project-main-69015fd4",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "dataops-project",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-dataops-project-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-dataops-project-main-69015fd4*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-dataops-project-main-69015fd4*",
                    ],
                  ],
                },
              },
              {
                "Action": "lambda:InvokeFunction",
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        ":*",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": "lambda:GetFunction",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "KmsMasterKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "dataops-project",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-dataops-project-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "TopicName": "test-org-test-env-test-domain-test-dataops-project-main-dataops-sns-topic",
        },
        "Type": "AWS::SNS::Topic",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "sns:Publish",
                  "sns:RemovePermission",
                  "sns:SetTopicAttributes",
                  "sns:DeleteTopic",
                  "sns:ListSubscriptionsByTopic",
                  "sns:GetTopicAttributes",
                  "sns:Receive",
                  "sns:AddPermission",
                  "sns:Subscribe",
                ],
                "Condition": {
                  "Bool": {
                    "aws:SecureTransport": "false",
                  },
                },
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "EnforceSSL",
              },
              {
                "Action": "sns:Publish",
                "Effect": "Allow",
                "Principal": {
                  "Service": "events.amazonaws.com",
                },
                "Resource": {
                  "Ref": "REPLACED-CFN-LOGICAL-ID",
                },
                "Sid": "Publish Policy",
              },
            ],
            "Version": "2012-10-17",
          },
          "Topics": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::SNS::TopicPolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/topic/dataops-sns-topic/arn",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/topic/dataops-sns-topic/name",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "TopicName",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Endpoint": "user1@example.com",
          "Protocol": "email",
          "TopicArn": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SNS::Subscription",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Endpoint": "user2@example.com",
          "Protocol": "email",
          "TopicArn": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SNS::Subscription",
      },
      "datazonesubdatabase": {
        "Properties": {
          "CatalogId": {
            "Ref": "AWS::AccountId",
          },
          "DatabaseInput": {
            "Description": "For consuming Datazone subscripts",
            "LocationUri": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "REPLACED-CFN-LOGICAL-ID",
                  },
                  "/data/datazone",
                ],
              ],
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-datazone-sub",
          },
        },
        "Type": "AWS::Glue::Database",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
              },
              {
                "Action": [
                  "sts:AssumeRole",
                  "sts:TagSession",
                ],
                "Effect": "Allow",
                "Principal": {
                  "Service": "datazone.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":policy/",
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "domainKmsUsagePolicyName",
                    ],
                  },
                ],
              ],
            },
          ],
          "RoleName": "test-org-test-env-test-domain-test-dataops-project-main-dz-user",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "dataops-project",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-dataops-project-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/role/dz-user/arn",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/role/dz-user/id",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/role/dz-user/name",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lakeformation.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Description": "Role for accessing the data lake via LakeFormation.",
          "RoleName": "test-org-test-env-test-domain-test-dataops-project-main-7d556058",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "dataops-project",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-dataops-project-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/role/lake-formation/arn",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/role/lake-formation/id",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/role/lake-formation/name",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "lfresourceprojectdata": {
        "Properties": {
          "ResourceArn": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "/data",
              ],
            ],
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "UseServiceLinkedRole": false,
        },
        "Type": "AWS::LakeFormation::Resource",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "RoleName": "test-org-test-env-test-domain-test-dataops-project-mai--35bd8056",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "dataops-project",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-dataops-project-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/role/deployment/arn",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/role/deployment/id",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "RoleId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/role/deployment/name",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "EncryptionConfiguration": {
            "CloudWatchEncryption": {
              "CloudWatchEncryptionMode": "SSE-KMS",
              "KmsKeyArn": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
            "JobBookmarksEncryption": {
              "JobBookmarksEncryptionMode": "CSE-KMS",
              "KmsKeyArn": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
            "S3Encryptions": [
              {
                "KmsKeyArn": {
                  "Ref": "SsmParameterValuesampleorginstance1datalakekmsidC96584B6F00A464EAD1953AFF4B05118Parameter",
                },
                "S3EncryptionMode": "SSE-KMS",
              },
            ],
          },
          "Name": "test-org-test-env-test-domain-test-dataops-project-main",
        },
        "Type": "AWS::Glue::SecurityConfiguration",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/securityGroupId/test-security-group",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/projectBucket/default",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/classifiers/classifierCsv",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test-org-test-env-test-domain-test-dataops-project-main-classifiercsv",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/classifiers/classifierGrok",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test-org-test-env-test-domain-test-dataops-project-main-classifiergrok",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/classifiers/classifierJson",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test-org-test-env-test-domain-test-dataops-project-main-classifierjson",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/classifiers/classifierXml",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test-org-test-env-test-domain-test-dataops-project-main-classifierxml",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/connections/connectionJdbc",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test-org-test-env-test-domain-test-dataops-project-main-connectionjdbc",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/connections/connectionVpc",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test-org-test-env-test-domain-test-dataops-project-main-connectionvpc",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/connections/connectionVpcWithProjectSG",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test-org-test-env-test-domain-test-dataops-project-main-connectionvpcwithprojectsg",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/databaseName/test-database1",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/databaseName/test-database2",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/databaseName/test-database3",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test-org-test-env-test-domain-test-dataops-project-main-test-database3",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/databaseName/test-database4",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test-database4",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/databaseName/test-database5",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/deploymentRole/default",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/kmsArn/default",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/securityConfiguration/default",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-dataops-project-main/projectTopicArn/default",
          "Tags": {
            "mdaa_cdk_app": "dataops-project",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-dataops-project-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "testdatabase1database": {
        "Properties": {
          "CatalogId": {
            "Ref": "AWS::AccountId",
          },
          "DatabaseInput": {
            "Description": "Test Database 1",
            "LocationUri": "s3://some-bucket-name/data/test1",
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
          },
        },
        "Type": "AWS::Glue::Database",
      },
      "testdatabase2database": {
        "Properties": {
          "CatalogId": {
            "Ref": "AWS::AccountId",
          },
          "DatabaseInput": {
            "Description": "Test Database 2",
            "LocationUri": "s3://some-bucket-name/data/test2",
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
          },
        },
        "Type": "AWS::Glue::Database",
      },
      "testdatabase3database": {
        "Properties": {
          "CatalogId": {
            "Ref": "AWS::AccountId",
          },
          "DatabaseInput": {
            "Description": "Test Datazone Datasource",
            "LocationUri": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "REPLACED-CFN-LOGICAL-ID",
                  },
                  "/data/test-database3",
                ],
              ],
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database3",
          },
        },
        "Type": "AWS::Glue::Database",
      },
      "testdatabase4database": {
        "Properties": {
          "CatalogId": {
            "Ref": "AWS::AccountId",
          },
          "DatabaseInput": {
            "Description": "Test Database 4",
            "LocationUri": "s3://some-bucket-name/data/test4",
            "Name": "test-database4",
          },
        },
        "Type": "AWS::Glue::Database",
      },
      "testdatabase5database": {
        "Properties": {
          "CatalogId": {
            "Ref": "AWS::AccountId",
          },
          "DatabaseInput": {
            "Description": "Test Database 5",
            "LocationUri": "s3://some-bucket-name/data/test5",
            "Name": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
          },
        },
        "Type": "AWS::Glue::Database",
      },
    },
    "Rules": {
      "CheckBootstrapVersion": {
        "Assertions": [
          {
            "Assert": {
              "Fn::Not": [
                {
                  "Fn::Contains": [
                    [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                    ],
                    {
                      "Ref": "BootstrapVersion",
                    },
                  ],
                },
              ],
            },
            "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
          },
        ],
      },
    },
  },
  "test-org-test-env-test-domain-test-dataops-project-main-12312412-us-east-1": {
    "Parameters": {
      "BootstrapVersion": {
        "Default": "/cdk-bootstrap/hnb659fds/version",
        "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
    },
    "Rules": {
      "CheckBootstrapVersion": {
        "Assertions": [
          {
            "Assert": {
              "Fn::Not": [
                {
                  "Fn::Contains": [
                    [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                    ],
                    {
                      "Ref": "BootstrapVersion",
                    },
                  ],
                },
              ],
            },
            "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
          },
        ],
      },
    },
  },
}
`;

exports[`dataops-project Snapshot Tests Dataops Project Stack Snapshot Test 1`] = `
{
  "Description": "(SO0320-dataops-project) Modern Data Architecture Accelerator. Version 1.0.0",
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs22.x",
      },
      "ap-east-1": {
        "value": "nodejs22.x",
      },
      "ap-east-2": {
        "value": "nodejs22.x",
      },
      "ap-northeast-1": {
        "value": "nodejs22.x",
      },
      "ap-northeast-2": {
        "value": "nodejs22.x",
      },
      "ap-northeast-3": {
        "value": "nodejs22.x",
      },
      "ap-south-1": {
        "value": "nodejs22.x",
      },
      "ap-south-2": {
        "value": "nodejs22.x",
      },
      "ap-southeast-1": {
        "value": "nodejs22.x",
      },
      "ap-southeast-2": {
        "value": "nodejs22.x",
      },
      "ap-southeast-3": {
        "value": "nodejs22.x",
      },
      "ap-southeast-4": {
        "value": "nodejs22.x",
      },
      "ap-southeast-5": {
        "value": "nodejs22.x",
      },
      "ap-southeast-7": {
        "value": "nodejs22.x",
      },
      "ca-central-1": {
        "value": "nodejs22.x",
      },
      "ca-west-1": {
        "value": "nodejs22.x",
      },
      "cn-north-1": {
        "value": "nodejs22.x",
      },
      "cn-northwest-1": {
        "value": "nodejs22.x",
      },
      "eu-central-1": {
        "value": "nodejs22.x",
      },
      "eu-central-2": {
        "value": "nodejs22.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs22.x",
      },
      "eu-south-1": {
        "value": "nodejs22.x",
      },
      "eu-south-2": {
        "value": "nodejs22.x",
      },
      "eu-west-1": {
        "value": "nodejs22.x",
      },
      "eu-west-2": {
        "value": "nodejs22.x",
      },
      "eu-west-3": {
        "value": "nodejs22.x",
      },
      "il-central-1": {
        "value": "nodejs22.x",
      },
      "me-central-1": {
        "value": "nodejs22.x",
      },
      "me-south-1": {
        "value": "nodejs22.x",
      },
      "mx-central-1": {
        "value": "nodejs22.x",
      },
      "sa-east-1": {
        "value": "nodejs22.x",
      },
      "us-east-1": {
        "value": "nodejs22.x",
      },
      "us-east-2": {
        "value": "nodejs22.x",
      },
      "us-gov-east-1": {
        "value": "nodejs22.x",
      },
      "us-gov-west-1": {
        "value": "nodejs22.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-isob-west-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs22.x",
      },
      "us-west-2": {
        "value": "nodejs22.x",
      },
    },
  },
  "Outputs": {
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:bucket:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:bucket:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:kms:cmk:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:kms:cmk:id",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:workgroup:name",
      },
      "Value": "test-org-test-env-test-domain-test-dataops-project-main",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:project:name",
      },
      "Value": "test-org-test-env-test-domain-test-dataops-project-main",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:security-group:testsecuritygroup:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "GroupId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:role:dzmanageaccess:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:role:dzmanageaccess:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:role:dzmanageaccess:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:managed-policy:wgusage:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:managed-policy:wgusage:name",
      },
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              "/",
              {
                "Fn::Select": [
                  5,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "REPLACED-CFN-LOGICAL-ID",
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:lambda:domainconfigparserhandler:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:lambda:domainconfigparserhandler:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:topic:dataopssnstopic:arn",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:topic:dataopssnstopic:name",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "TopicName",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:role:dzuser:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:role:dzuser:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:role:dzuser:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:role:lakeformation:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:role:lakeformation:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:role:lakeformation:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:role:deployment:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:role:deployment:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "RoleId",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-dataops-project-main:role:deployment:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuesampleorginstance1datalakekmsidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/sample-org/instance1/datalake/kms/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/sample-org/instance1/generated-role/glue-role/arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuesampleorgsharedgluecatalogkmsarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/sample-org/shared/glue-catalog/kms/arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/test-org/test-domain/caef-bootstrap/role-helper-service-token",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/test-org/test-domain/generated-role/databrew/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "HIPAA.Security-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "PCI.DSS.321-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "BucketKeyEnabled": true,
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "BucketName": "test-org-test-env-test-domain-test-dataops-project-main",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "dataops-project",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-dataops-project-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "HIPAA.Security-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "PCI.DSS.321-S3BucketLoggingEnabled",
              "reason": "[MDAA:@aws-mdaa/s3-constructs/lib/index.ts:LINE:COL] Server access logs do not support KMS on targets. MDAA uses CloudTrail data events instead.",
            },
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "Bucket": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-server-side-encryption": "AES256",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "DenyAES",
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ForAllValues:StringNotLikeIfExists": {
                  "s3:x-amz-server-side-encryption-aws-kms-key-id": [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    {
                      "Ref": "SsmParameterValuesampleorginstance1datalakekmsidC96584B6F00A464EAD1953AFF4B05118Parameter",
                    },
                  ],
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "ForceKMS",
            },
            {
              "Action": "s3:GetObject*",
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataEngineer0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "/_Read",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:PutObject",
                "s3:PutObjectTagging",
                "s3:DeleteObject",
                "s3:DeleteObjectVersion",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataAdmin0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "/_ReadWriteSuper",
            },
            {
              "Action": "s3:GetObject*",
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataEngineer0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/athena-results/*",
                  ],
                ],
              },
              "Sid": "/athena-results_Read",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:PutObject",
                "s3:PutObjectTagging",
                "s3:DeleteObject",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/athena-results/*",
                  ],
                ],
              },
              "Sid": "/athena-results_ReadWrite",
            },
            {
              "Action": "s3:GetObject*",
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResProjectExRoles0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/deployment/*",
                  ],
                ],
              },
              "Sid": "/deployment_Read",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:PutObject",
                "s3:PutObjectTagging",
                "s3:DeleteObject",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/deployment/*",
                  ],
                ],
              },
              "Sid": "/deployment_ReadWrite",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:PutObject",
                "s3:PutObjectTagging",
                "s3:DeleteObject",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataEngineer0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResProjectExRoles0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/data/*",
                  ],
                ],
              },
              "Sid": "/data_ReadWrite",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:PutObject",
                "s3:PutObjectTagging",
                "s3:DeleteObject",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/data/*",
                  ],
                ],
              },
              "Sid": "/data_ReadWrite",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:PutObject",
                "s3:PutObjectTagging",
                "s3:DeleteObject",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResProjectExRoles0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/temp/*",
                  ],
                ],
              },
              "Sid": "/temp_ReadWrite",
            },
            {
              "Action": [
                "s3:PutObject*",
                "s3:GetObject*",
                "s3:DeleteObject*",
              ],
              "Condition": {
                "ForAnyValue:StringNotLike": {
                  "aws:PrincipalArn": [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                  ],
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataAdmin0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataEngineer0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResProjectExRoles0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "REPLACED-CFN-LOGICAL-ID",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "BucketDeny",
            },
            {
              "Action": [
                "s3:List*",
                "s3:GetBucket*",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataAdmin0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataEngineer0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResProjectExRoles0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              ],
              "Sid": "BucketAllow",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/bucket/arn",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
            },
            {
              "id": "HIPAA.Security-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
            },
            {
              "id": "PCI.DSS.321-S3BucketReplicationEnabled",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] MDAA DataOps bucket does not use bucket replication.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/bucket/name",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "Enabled": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataAdmin0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataEngineer0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResProjectExRoles0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "RoleId",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "test-org-test-env-test-domain-test-dataops-project-main-usage-stmt",
            },
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResDataAdmin0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "test-org-test-env-test-domain-test-dataops-project-main-usage-stmt",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
              ],
              "Condition": {
                "ArnEquals": {
                  "kms:EncryptionContext:aws:logs:arn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:*",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "logs.",
                      {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
              "Resource": "*",
              "Sid": "CloudWatchLogsEncryption",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                ],
              },
              "Resource": "*",
              "Sid": "ProjectDeployment",
            },
            {
              "Action": [
                "kms:GenerateDataKey",
                "kms:Decrypt",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:CallerAccount": {
                    "Ref": "AWS::AccountId",
                  },
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "sqs.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "sqsEncryption",
            },
            {
              "Action": [
                "kms:GenerateDataKey",
                "kms:Decrypt",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": "*",
              "Sid": "eventBridgeEncryption",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "dataops-project",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-dataops-project-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AliasName": "alias/test-org-test-env-test-domain-test-dataops-project-main-cmk",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/kms/cmk/arn",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/kms/cmk/id",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "RoleResDataAdmin0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "name": "Admin",
          "refId": "DataAdmin-0",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResDataEngineer0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "arn": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/sample-org-dev-instance1-roles-data-engineer",
              ],
            ],
          },
          "refId": "DataEngineer-0",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResProjectExRoles0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "arn": {
            "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "refId": "ProjectExRoles-0",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResProjectExRoles1": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "id": {
            "Ref": "SsmParameterValuetestorgtestdomaingeneratedroledatabrewidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "refId": "ProjectExRoles-1",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "Stack description parameter to update on version changes",
        "Name": "/test-org/test-domain/test-dataops-project-main/aws-solution",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "(SO0320-dataops-project) Modern Data Architecture Accelerator. Version 1.0.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-dataops-project-main-catalog-key-access",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Ref": "SsmParameterValuesampleorgsharedgluecatalogkmsarnC96584B6F00A464EAD1953AFF4B05118Parameter",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResProjectExRoles1",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "classifierCsvclassifier": {
      "Properties": {
        "CsvClassifier": {
          "AllowSingleColumn": false,
          "ContainsHeader": "PRESENT",
          "Delimiter": "~",
          "DisableValueTrimming": false,
          "Header": [
            "columnA",
            "columnB",
          ],
          "Name": "test-org-test-env-test-domain-test-dataops-project-main-classifiercsv",
          "QuoteSymbol": "^",
        },
      },
      "Type": "AWS::Glue::Classifier",
    },
    "classifierGrokclassifier": {
      "Properties": {
        "GrokClassifier": {
          "Classification": "special-logs",
          "CustomPatterns": "MESSAGEPREFIX .*-.*-.*-.*-.*",
          "GrokPattern": "%{TIMESTAMP_ISO8601:timestamp} \\[%{MESSAGEPREFIX:message_prefix}\\] %{CRAWLERLOGLEVEL:loglevel} : %{GREEDYDATA:message}",
          "Name": "test-org-test-env-test-domain-test-dataops-project-main-classifiergrok",
        },
      },
      "Type": "AWS::Glue::Classifier",
    },
    "classifierJsonclassifier": {
      "Properties": {
        "JsonClassifier": {
          "JsonPath": "$[*]",
          "Name": "test-org-test-env-test-domain-test-dataops-project-main-classifierjson",
        },
      },
      "Type": "AWS::Glue::Classifier",
    },
    "classifierXmlclassifier": {
      "Properties": {
        "XMLClassifier": {
          "Classification": "xml-data",
          "Name": "test-org-test-env-test-domain-test-dataops-project-main-classifierxml",
          "RowTag": "<row item_a="A" item_b="B"></row>",
        },
      },
      "Type": "AWS::Glue::Classifier",
    },
    "connectionJdbcconnection": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "ConnectionInput": {
          "ConnectionProperties": {
            "JDBC_CONNECTION_URL": "jdbc:awsathena://AwsRegion=[REGION];UID=[ACCESS KEY];PWD=[SECRET KEY];S3OutputLocation=[LOCATION]",
            "JDBC_ENFORCE_SSL": true,
          },
          "ConnectionType": "JDBC",
          "Description": "JDBC Connection Example",
          "Name": "test-org-test-env-test-domain-test-dataops-project-main-connectionjdbc",
          "PhysicalConnectionRequirements": {
            "AvailabilityZone": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::Region",
                  },
                  "a",
                ],
              ],
            },
            "SecurityGroupIdList": [
              "sg-890abc123asc",
            ],
            "SubnetId": "subnet-123abc456def",
          },
        },
      },
      "Type": "AWS::Glue::Connection",
    },
    "connectionVpcWithProjectSGconnection": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "ConnectionInput": {
          "ConnectionType": "NETWORK",
          "Description": "VPC Connection Example",
          "Name": "test-org-test-env-test-domain-test-dataops-project-main-connectionvpcwithprojectsg",
          "PhysicalConnectionRequirements": {
            "AvailabilityZone": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::Region",
                  },
                  "a",
                ],
              ],
            },
            "SecurityGroupIdList": [
              {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "GroupId",
                ],
              },
            ],
            "SubnetId": "subnet-09ba402b76a346ffb",
          },
        },
      },
      "Type": "AWS::Glue::Connection",
    },
    "connectionVpcconnection": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "ConnectionInput": {
          "ConnectionType": "NETWORK",
          "Description": "VPC Connection Example",
          "Name": "test-org-test-env-test-domain-test-dataops-project-main-connectionvpc",
          "PhysicalConnectionRequirements": {
            "AvailabilityZone": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::Region",
                  },
                  "a",
                ],
              ],
            },
            "SecurityGroupIdList": [
              "sg-890abc123asc",
            ],
            "SubnetId": "subnet-123abc456def",
          },
        },
      },
      "Type": "AWS::Glue::Connection",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "Amazon Athena",
        "DomainIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "domainId",
          ],
        },
        "EnvironmentIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Id",
          ],
        },
        "Name": "Query data",
        "Parameters": {
          "Uri": {
            "Fn::Join": [
              "",
              [
                "https://us-east-1.console.aws.amazon.com/athena/home?region=",
                {
                  "Ref": "AWS::Region",
                },
                "#/query-editor",
              ],
            ],
          },
        },
      },
      "Type": "AWS::DataZone::EnvironmentActions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "test-org-test-env-test-domain-test-dataops-project-main",
        "Tags": [
          {
            "Key": "AmazonDataZoneDomain",
            "Value": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "domainId",
              ],
            },
          },
          {
            "Key": "AmazonDataZoneEnvironment",
            "Value": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Id",
              ],
            },
          },
          {
            "Key": "AmazonDataZoneProject",
            "Value": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Id",
              ],
            },
          },
          {
            "Key": "mdaa_cdk_app",
            "Value": "dataops-project",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-dataops-project-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "WorkGroupConfiguration": {
          "EnforceWorkGroupConfiguration": true,
          "PublishCloudWatchMetricsEnabled": true,
          "ResultConfiguration": {
            "EncryptionConfiguration": {
              "EncryptionOption": "SSE_KMS",
              "KmsKey": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
            "OutputLocation": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "REPLACED-CFN-LOGICAL-ID",
                  },
                  "/athena-results/",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/workgroup/name",
        "Tags": {
          "AmazonDataZoneDomain": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "domainId",
            ],
          },
          "AmazonDataZoneEnvironment": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Id",
            ],
          },
          "AmazonDataZoneProject": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Id",
            ],
          },
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test-org-test-env-test-domain-test-dataops-project-main",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "AWS Console",
        "DomainIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "domainId",
          ],
        },
        "EnvironmentIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Id",
          ],
        },
        "Name": "View AWS Console",
        "Parameters": {
          "Uri": "https://console.aws.amazon.com/",
        },
      },
      "Type": "AWS::DataZone::EnvironmentActions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "DomainIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "domainId",
          ],
        },
        "EnvironmentAccountIdentifier": {
          "Ref": "AWS::AccountId",
        },
        "EnvironmentAccountRegion": {
          "Ref": "AWS::Region",
        },
        "EnvironmentBlueprintId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "datalakeEnvBlueprintId",
          ],
        },
        "EnvironmentProfileIdentifier": "",
        "EnvironmentRoleArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Name": "test-org-test-env-test-domain-test-dataops-project-main",
        "ProjectIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Id",
          ],
        },
      },
      "Type": "AWS::DataZone::Environment",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "DomainIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "domainId",
          ],
        },
        "Name": "test-org-test-env-test-domain-test-dataops-project-main",
      },
      "Type": "AWS::DataZone::Project",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Designation": "PROJECT_OWNER",
        "DomainIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "domainId",
          ],
        },
        "Member": {
          "UserIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "adminUserProfileId",
            ],
          },
        },
        "ProjectIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Id",
          ],
        },
      },
      "Type": "AWS::DataZone::ProjectMembership",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/project/name",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test-org-test-env-test-domain-test-dataops-project-main",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "ApplicableAssetTypes": [
          "GlueTableAssetType",
        ],
        "AuthorizedPrincipals": [
          {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        ],
        "DomainIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "domainId",
          ],
        },
        "EnvironmentIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Id",
          ],
        },
        "ManageAccessRole": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Name": "test-org-test-env-test-domain-test-dataops-project-main",
        "SubscriptionTargetConfig": [
          {
            "Content": "{"databaseName":"test-org-test-env-test-domain-test-dataops-project-main-datazone-sub"}",
            "FormName": "GlueSubscriptionTargetConfigForm",
          },
        ],
        "Type": "GlueSubscriptionTargetType",
      },
      "Type": "AWS::DataZone::SubscriptionTarget",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] Fine-grained permissions enforced via LakeFormation.",
            },
            {
              "id": "NIST.800.53.R5-IAMPolicyNoStatementsWithFullAccess",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] Fine-grained permissions enforced via LakeFormation.",
            },
            {
              "id": "HIPAA.Security-IAMPolicyNoStatementsWithFullAccess",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] Fine-grained permissions enforced via LakeFormation.",
            },
            {
              "id": "PCI.DSS.321-IAMPolicyNoStatementsWithFullAccess",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] Fine-grained permissions enforced via LakeFormation.",
            },
          ],
        },
      },
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-dataops-project-main-datazone-user-access-policy",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "datazone:ListDomains",
                "datazone:ListProjects",
                "datazone:ListAccountEnvironments",
                "datazone:ListEnvironments",
                "datazone:GetEnvironment",
                "datazone:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetBucketLocation",
                "s3:GetBucketVersioning",
                "s3:GetBucketTagging",
                "s3:GetEncryptionConfiguration",
                "s3:GetIntelligentTieringConfiguration",
                "s3:GetBucketPolicy",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
              "Sid": "ProjectBucketGet",
            },
            {
              "Action": "athena:ListWorkGroups",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "lakeformation:GetDataAccess",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "glue:GetColumnStatisticsTaskRuns",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "glue:GetDatabase",
                "glue:GetDatabases",
                "glue:GetTable",
                "glue:GetTables",
                "glue:GetPartition",
                "glue:GetPartitions",
                "glue:SearchTables",
                "glue:GetTableVersion",
                "glue:GetTableVersions",
                "glue:GetColumnStatistics*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":*:catalog",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":*:database/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":*:table/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":*:tableVersion/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "domainConfigSSMParam": "/sample-org/shared/datazone/domain/test-domain/config",
      },
      "Type": "Custom::DomainConfigParser",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "GroupDescription": "test-org-test-env-test-domain-test-dataops-project-main/construct/ec2/test-security-group",
        "GroupName": "test-org-test-env-test-domain-test-dataops-project-main-test-security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "dataops-project",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-dataops-project-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "VpcId": "test-vpcid",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
            {
              "id": "HIPAA.Security-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
            {
              "id": "PCI.DSS.321-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
          ],
        },
      },
      "Properties": {
        "Description": "Self-Ref",
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/security-group/test-security-group/id",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "CidrIp": "10.10.10.0/24",
        "Description": "to 10.10.10.0/24:tcp PORT 443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "to sg-12312412123:tcp PORT 443",
        "DestinationSecurityGroupId": "sg-12312412123",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
            {
              "id": "HIPAA.Security-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
            {
              "id": "PCI.DSS.321-EC2RestrictedCommonPorts",
              "reason": "[CONFIG:test-config.yaml] Ingress/Egress is limited to this security group",
            },
          ],
        },
      },
      "Properties": {
        "Description": "Self-Ref",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "AWS Glue Catalog",
        "DomainIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "domainId",
          ],
        },
        "EnvironmentIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Id",
          ],
        },
        "Name": "View Glue Catalogs",
        "Parameters": {
          "Uri": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "AWS::Region",
                },
                ".console.aws.amazon.com/glue/home?region=",
                {
                  "Ref": "AWS::Region",
                },
                "#/v2/data-catalog/tables",
              ],
            ],
          },
        },
      },
      "Type": "AWS::DataZone::EnvironmentActions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "AWS Glue ETL",
        "DomainIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "domainId",
          ],
        },
        "EnvironmentIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Id",
          ],
        },
        "Name": "View Glue ETL jobs",
        "Parameters": {
          "Uri": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "AWS::Region",
                },
                ".console.aws.amazon.com/gluestudio/home?region=",
                {
                  "Ref": "AWS::Region",
                },
                "#/jobs",
              ],
            ],
          },
        },
      },
      "Type": "AWS::DataZone::EnvironmentActions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "DATA_LOCATION_ACCESS",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
        "Resource": {
          "DataLocation": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "ResourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":s3:::some-bucket-name/data/test1",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "DATA_LOCATION_ACCESS",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResProjectExRoles1",
              "arn",
            ],
          },
        },
        "Resource": {
          "DataLocation": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "ResourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":s3:::some-bucket-name/data/test1",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "testdatabase2database",
      ],
      "Properties": {
        "Permissions": [
          "DATA_LOCATION_ACCESS",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
        "Resource": {
          "DataLocation": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "ResourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":s3:::some-bucket-name/data/test2",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "testdatabase2database",
      ],
      "Properties": {
        "Permissions": [
          "DATA_LOCATION_ACCESS",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResProjectExRoles1",
              "arn",
            ],
          },
        },
        "Resource": {
          "DataLocation": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "ResourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":s3:::some-bucket-name/data/test2",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "testdatabase4database",
      ],
      "Properties": {
        "Permissions": [
          "DATA_LOCATION_ACCESS",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
        "Resource": {
          "DataLocation": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "ResourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":s3:::some-bucket-name/data/test4",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "testdatabase4database",
      ],
      "Properties": {
        "Permissions": [
          "DATA_LOCATION_ACCESS",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResProjectExRoles1",
              "arn",
            ],
          },
        },
        "Resource": {
          "DataLocation": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "ResourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":s3:::some-bucket-name/data/test4",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "testdatabase5database",
      ],
      "Properties": {
        "Permissions": [
          "DATA_LOCATION_ACCESS",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
        "Resource": {
          "DataLocation": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "ResourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":s3:::some-bucket-name/data/test5",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "testdatabase5database",
      ],
      "Properties": {
        "Permissions": [
          "DATA_LOCATION_ACCESS",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResProjectExRoles1",
              "arn",
            ],
          },
        },
        "Resource": {
          "DataLocation": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "ResourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":s3:::some-bucket-name/data/test5",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "datazonesubdatabase",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
          "ALTER",
          "DROP",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResDataAdmin0",
              "arn",
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-datazone-sub",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "datazonesubdatabase",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
        ],
        "PermissionsWithGrantOption": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
        ],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-datazone-sub",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "datazonesubdatabase",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
          "DROP",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResDataAdmin0",
              "arn",
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-datazone-sub",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "datazonesubdatabase",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
        ],
        "PermissionsWithGrantOption": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
        ],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-datazone-sub",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
          "ALTER",
          "DROP",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResDataAdmin0",
              "arn",
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/sample-org-dev-instance1-roles-data-engineer",
              ],
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResProjectExRoles1",
              "arn",
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
          "DROP",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResDataAdmin0",
              "arn",
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/sample-org-dev-instance1-roles-data-engineer",
              ],
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResProjectExRoles1",
              "arn",
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": "some-federation-provider-arn:user/some-user-name",
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": "some-federation-provider-arn:group/some-group-name",
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": "some-other-role-arn",
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": "some-federation-provider-arn:user/some-user-name",
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
            "Name": "test-table",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": "some-federation-provider-arn:group/some-group-name",
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
            "Name": "test-table",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase1database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": "some-other-role-arn",
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
            "Name": "test-table",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase2database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
          "ALTER",
          "DROP",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResDataAdmin0",
              "arn",
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase2database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/sample-org-dev-instance1-roles-data-engineer",
              ],
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase2database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase2database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResProjectExRoles1",
              "arn",
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase2database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/cross-account-role",
              ],
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "testdatabase2database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
          "DROP",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResDataAdmin0",
              "arn",
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase2database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/sample-org-dev-instance1-roles-data-engineer",
              ],
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase2database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase2database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResProjectExRoles1",
              "arn",
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase2database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/cross-account-role",
              ],
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase3database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
        ],
        "PermissionsWithGrantOption": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
        ],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database3",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "testdatabase3database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
        ],
        "PermissionsWithGrantOption": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
        ],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database3",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase4database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
          "ALTER",
          "DROP",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResDataAdmin0",
              "arn",
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-database4",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase4database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/sample-org-dev-instance1-roles-data-engineer",
              ],
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-database4",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase4database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-database4",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase4database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResProjectExRoles1",
              "arn",
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-database4",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase4database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/cross-account-role",
              ],
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test-database4",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "testdatabase4database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
          "DROP",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResDataAdmin0",
              "arn",
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-database4",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase4database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/sample-org-dev-instance1-roles-data-engineer",
              ],
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-database4",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase4database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-database4",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase4database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResProjectExRoles1",
              "arn",
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-database4",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase4database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/cross-account-role",
              ],
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test-database4",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase5database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
          "ALTER",
          "DROP",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResDataAdmin0",
              "arn",
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase5database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/sample-org-dev-instance1-roles-data-engineer",
              ],
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase5database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase5database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
          "INSERT",
          "DELETE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResProjectExRoles1",
              "arn",
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase5database",
      ],
      "Properties": {
        "Permissions": [
          "SELECT",
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/cross-account-role",
              ],
            ],
          },
        },
        "Resource": {
          "Table": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "DatabaseName": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
            "TableWildcard": {},
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "testdatabase5database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
          "DROP",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResDataAdmin0",
              "arn",
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase5database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/sample-org-dev-instance1-roles-data-engineer",
              ],
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase5database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Ref": "SsmParameterValuesampleorginstance1generatedrolegluerolearnC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase5database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
          "CREATE_TABLE",
          "ALTER",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::GetAtt": [
              "RoleResProjectExRoles1",
              "arn",
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "testdatabase5database",
      ],
      "Properties": {
        "Permissions": [
          "DESCRIBE",
        ],
        "PermissionsWithGrantOption": [],
        "Principal": {
          "DataLakePrincipalIdentifier": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/cross-account-role",
              ],
            ],
          },
        },
        "Resource": {
          "Database": {
            "CatalogId": {
              "Ref": "AWS::AccountId",
            },
            "Name": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
          },
        },
      },
      "Type": "AWS::LakeFormation::PrincipalPermissions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "[MDAA:@aws-mdaa/dataops/dataops-project-l3-construct/lib/dataops-project-l3-construct.ts:LINE:COL] Permissions are restricted to one DataZone Domain and to one AWS Account.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "domainArn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "datazone.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonDataZoneGlueManageAccessRolePolicy",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":policy/",
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "domainKmsUsagePolicyName",
                  ],
                },
              ],
            ],
          },
        ],
        "RoleName": "test-org-test-env-test-domain-test-dataops-project-main-55711afa",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "dataops-project",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-dataops-project-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/role/dz-manage-access/arn",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/role/dz-manage-access/id",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/role/dz-manage-access/name",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "Amazon S3",
        "DomainIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "domainId",
          ],
        },
        "EnvironmentIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Id",
          ],
        },
        "Name": "Project S3 Data",
        "Parameters": {
          "Uri": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "AWS::Region",
                },
                ".console.aws.amazon.com/s3/buckets/test-org-test-env-test-domain-test-dataops-project-main/Bucketproject/data/",
              ],
            ],
          },
        },
      },
      "Type": "AWS::DataZone::EnvironmentActions",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "testdatabase3database",
      ],
      "Properties": {
        "Configuration": {
          "GlueRunConfiguration": {
            "AutoImportDataQualityResult": true,
            "DataAccessRole": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
            "RelationalFilterConfigurations": [
              {
                "DatabaseName": "test-org-test-env-test-domain-test-dataops-project-main-test-database3",
              },
            ],
          },
        },
        "DomainIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "DomainId",
          ],
        },
        "EnvironmentIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Id",
          ],
        },
        "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database3",
        "ProjectIdentifier": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Id",
          ],
        },
        "Type": "glue",
      },
      "Type": "AWS::DataZone::DataSource",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "test-org-test-env-test-domain-test-dataops-project-main-50ebfe89",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "athena:BatchGetQueryExecution",
                "athena:ListDataCatalogs",
                "athena:ListDatabases",
                "athena:ListEngineVersions",
                "athena:ListNamedQueries",
                "athena:ListPreparedStatements",
                "athena:ListQueryExecutions",
                "athena:ListTableMetadata",
                "athena:ListTagsForResource",
                "athena:ListWorkGroups",
                "athena:GetDataCatalog",
                "athena:GetDatabase",
                "athena:GetNamedQuery",
                "athena:GetPreparedStatement",
                "athena:GetQueryExecution",
                "athena:GetQueryResults",
                "athena:GetQueryResultsStream",
                "athena:GetTableMetadata",
                "athena:GetWorkGroup",
                "athena:BatchGetNamedQuery",
                "athena:StartQueryExecution",
                "athena:StopQueryExecution",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":athena:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":workgroup/test-org-test-env-test-domain-test-dataops-project-main",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "REPLACED-CFN-LOGICAL-ID",
                              "Arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          "sample-org-dev-instance1-roles-data-engineer",
        ],
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/managed-policy/wg-usage/arn",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/managed-policy/wg-usage/name",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::Select": [
            1,
            {
              "Fn::Split": [
                "/",
                {
                  "Fn::Select": [
                    5,
                    {
                      "Fn::Split": [
                        ":",
                        {
                          "Ref": "REPLACED-CFN-LOGICAL-ID",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
            "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-dataops-project-mai--3cc64af9",
        "Handler": "domain_configuration.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "dataops-project",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-dataops-project-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/lambda/domainconfigparser-handler/arn",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/lambda/domainconfigparser-handler/name",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/sample-org/shared/datazone/domain/test-domain/config",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DomainConfigParser-handler",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "test-org-test-env-test-domain-test-dataops-project-mai--3cc64af9",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "dataops-project",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-dataops-project-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-dataops-project-mai--3cc64af9*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-dataops-project-mai--3cc64af9*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
            },
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-dataops-project-main/custom-DomainConfigParser-provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-dataops-project-main-69015fd4",
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "dataops-project",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-dataops-project-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "CR Role",
        "RoleName": "test-org-test-env-test-domain-test-dataops-project-main-69015fd4",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "dataops-project",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-dataops-project-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-dataops-project-main-69015fd4*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-dataops-project-main-69015fd4*",
                  ],
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "dataops-project",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-dataops-project-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "TopicName": "test-org-test-env-test-domain-test-dataops-project-main-dataops-sns-topic",
      },
      "Type": "AWS::SNS::Topic",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sns:Publish",
                "sns:RemovePermission",
                "sns:SetTopicAttributes",
                "sns:DeleteTopic",
                "sns:ListSubscriptionsByTopic",
                "sns:GetTopicAttributes",
                "sns:Receive",
                "sns:AddPermission",
                "sns:Subscribe",
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "EnforceSSL",
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": {
                "Ref": "REPLACED-CFN-LOGICAL-ID",
              },
              "Sid": "Publish Policy",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/topic/dataops-sns-topic/arn",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/topic/dataops-sns-topic/name",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "TopicName",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Endpoint": "user1@example.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Endpoint": "user2@example.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "datazonesubdatabase": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": {
          "Description": "For consuming Datazone subscripts",
          "LocationUri": {
            "Fn::Join": [
              "",
              [
                "s3://",
                {
                  "Ref": "REPLACED-CFN-LOGICAL-ID",
                },
                "/data/datazone",
              ],
            ],
          },
          "Name": "test-org-test-env-test-domain-test-dataops-project-main-datazone-sub",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
            {
              "Action": [
                "sts:AssumeRole",
                "sts:TagSession",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "datazone.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":policy/",
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "domainKmsUsagePolicyName",
                  ],
                },
              ],
            ],
          },
        ],
        "RoleName": "test-org-test-env-test-domain-test-dataops-project-main-dz-user",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "dataops-project",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-dataops-project-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/role/dz-user/arn",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/role/dz-user/id",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/role/dz-user/name",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lakeformation.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role for accessing the data lake via LakeFormation.",
        "RoleName": "test-org-test-env-test-domain-test-dataops-project-main-7d556058",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "dataops-project",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-dataops-project-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/role/lake-formation/arn",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/role/lake-formation/id",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/role/lake-formation/name",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "lfresourceprojectdata": {
      "Properties": {
        "ResourceArn": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
              "/data",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "UseServiceLinkedRole": false,
      },
      "Type": "AWS::LakeFormation::Resource",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "test-org-test-env-test-domain-test-dataops-project-mai--35bd8056",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "dataops-project",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-dataops-project-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/role/deployment/arn",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/role/deployment/id",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "RoleId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/role/deployment/name",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "EncryptionConfiguration": {
          "CloudWatchEncryption": {
            "CloudWatchEncryptionMode": "SSE-KMS",
            "KmsKeyArn": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
          "JobBookmarksEncryption": {
            "JobBookmarksEncryptionMode": "CSE-KMS",
            "KmsKeyArn": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
          "S3Encryptions": [
            {
              "KmsKeyArn": {
                "Ref": "SsmParameterValuesampleorginstance1datalakekmsidC96584B6F00A464EAD1953AFF4B05118Parameter",
              },
              "S3EncryptionMode": "SSE-KMS",
            },
          ],
        },
        "Name": "test-org-test-env-test-domain-test-dataops-project-main",
      },
      "Type": "AWS::Glue::SecurityConfiguration",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/securityGroupId/test-security-group",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/projectBucket/default",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/classifiers/classifierCsv",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test-org-test-env-test-domain-test-dataops-project-main-classifiercsv",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/classifiers/classifierGrok",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test-org-test-env-test-domain-test-dataops-project-main-classifiergrok",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/classifiers/classifierJson",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test-org-test-env-test-domain-test-dataops-project-main-classifierjson",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/classifiers/classifierXml",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test-org-test-env-test-domain-test-dataops-project-main-classifierxml",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/connections/connectionJdbc",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test-org-test-env-test-domain-test-dataops-project-main-connectionjdbc",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/connections/connectionVpc",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test-org-test-env-test-domain-test-dataops-project-main-connectionvpc",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/connections/connectionVpcWithProjectSG",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test-org-test-env-test-domain-test-dataops-project-main-connectionvpcwithprojectsg",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/databaseName/test-database1",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/databaseName/test-database2",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/databaseName/test-database3",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test-org-test-env-test-domain-test-dataops-project-main-test-database3",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/databaseName/test-database4",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test-database4",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/databaseName/test-database5",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/deploymentRole/default",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/kmsArn/default",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/securityConfiguration/default",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-dataops-project-main/projectTopicArn/default",
        "Tags": {
          "mdaa_cdk_app": "dataops-project",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-dataops-project-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "testdatabase1database": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": {
          "Description": "Test Database 1",
          "LocationUri": "s3://some-bucket-name/data/test1",
          "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database1",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "testdatabase2database": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": {
          "Description": "Test Database 2",
          "LocationUri": "s3://some-bucket-name/data/test2",
          "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database2",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "testdatabase3database": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": {
          "Description": "Test Datazone Datasource",
          "LocationUri": {
            "Fn::Join": [
              "",
              [
                "s3://",
                {
                  "Ref": "REPLACED-CFN-LOGICAL-ID",
                },
                "/data/test-database3",
              ],
            ],
          },
          "Name": "test-org-test-env-test-domain-test-dataops-project-main-test-database3",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "testdatabase4database": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": {
          "Description": "Test Database 4",
          "LocationUri": "s3://some-bucket-name/data/test4",
          "Name": "test-database4",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "testdatabase5database": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": {
          "Description": "Test Database 5",
          "LocationUri": "s3://some-bucket-name/data/test5",
          "Name": "test_org-test-env-test-domain-test-dataops-project-main-test-database5",
        },
      },
      "Type": "AWS::Glue::Database",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
