{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "CaefNagSuppressionByPath": {
            "additionalProperties": false,
            "properties": {
                "path": {
                    "type": "string"
                },
                "suppressions": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "reason"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "path",
                "suppressions"
            ],
            "type": "object"
        },
        "CaefNagSuppressions": {
            "additionalProperties": false,
            "properties": {
                "by_path": {
                    "items": {
                        "$ref": "#/definitions/CaefNagSuppressionByPath"
                    },
                    "type": "array"
                }
            },
            "required": [
                "by_path"
            ],
            "type": "object"
        },
        "CaefServiceCatalogConstraintConfig": {
            "additionalProperties": false,
            "properties": {
                "description": {
                    "type": "string"
                },
                "rules": {
                    "additionalProperties": {
                        "$ref": "#/definitions/CaefServiceCatalogConstraintRuleConfig"
                    },
                    "type": "object"
                }
            },
            "required": [
                "description",
                "rules"
            ],
            "type": "object"
        },
        "CaefServiceCatalogConstraintRuleAssertionConfig": {
            "additionalProperties": false,
            "properties": {
                "assert": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "required": [
                "assert",
                "description"
            ],
            "type": "object"
        },
        "CaefServiceCatalogConstraintRuleCondititionConfig": {
            "additionalProperties": false,
            "type": "object"
        },
        "CaefServiceCatalogConstraintRuleConfig": {
            "additionalProperties": false,
            "properties": {
                "assertions": {
                    "items": {
                        "$ref": "#/definitions/CaefServiceCatalogConstraintRuleAssertionConfig"
                    },
                    "type": "array"
                },
                "condition": {
                    "$ref": "#/definitions/CaefServiceCatalogConstraintRuleCondititionConfig"
                }
            },
            "required": [
                "assertions",
                "condition"
            ],
            "type": "object"
        },
        "CaefServiceCatalogParameterConfig": {
            "additionalProperties": false,
            "properties": {
                "constraints": {
                    "$ref": "#/definitions/CaefServiceCatalogConstraintConfig"
                },
                "props": {
                    "$ref": "#/definitions/CfnParameterProps"
                }
            },
            "required": [
                "props"
            ],
            "type": "object"
        },
        "CaefServiceCatalogProductConfig": {
            "additionalProperties": false,
            "properties": {
                "launch_role_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/CaefServiceCatalogParameterConfig"
                    },
                    "type": "object"
                },
                "portfolio_arn": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "owner",
                "portfolio_arn"
            ],
            "type": "object"
        },
        "CfnParameterProps": {
            "additionalProperties": false,
            "properties": {
                "allowedPattern": {
                    "default": "- No constraints on patterns allowed for parameter.",
                    "description": "A regular expression that represents the patterns to allow for String types.",
                    "type": "string"
                },
                "allowedValues": {
                    "default": "- No constraints on values allowed for parameter.",
                    "description": "An array containing the list of values allowed for the parameter.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "constraintDescription": {
                    "default": "- No description with customized error message when user specifies invalid values.",
                    "description": "A string that explains a constraint when the constraint is violated.\nFor example, without a constraint description, a parameter that has an allowed\npattern of [A-Za-z0-9]+ displays the following error message when the user specifies\nan invalid value:",
                    "type": "string"
                },
                "default": {
                    "default": "- No default value for parameter.",
                    "description": "A value of the appropriate type for the template to use if no value is specified\nwhen a stack is created. If you define constraints for the parameter, you must specify\na value that adheres to those constraints."
                },
                "description": {
                    "default": "- No description for the parameter.",
                    "description": "A string of up to 4000 characters that describes the parameter.",
                    "type": "string"
                },
                "maxLength": {
                    "default": "- None.",
                    "description": "An integer value that determines the largest number of characters you want to allow for String types.",
                    "type": "number"
                },
                "maxValue": {
                    "default": "- None.",
                    "description": "A numeric value that determines the largest numeric value you want to allow for Number types.",
                    "type": "number"
                },
                "minLength": {
                    "default": "- None.",
                    "description": "An integer value that determines the smallest number of characters you want to allow for String types.",
                    "type": "number"
                },
                "minValue": {
                    "default": "- None.",
                    "description": "A numeric value that determines the smallest numeric value you want to allow for Number types.",
                    "type": "number"
                },
                "noEcho": {
                    "default": "- Parameter values are not masked.",
                    "description": "Whether to mask the parameter value when anyone makes a call that describes the stack.\nIf you set the value to ``true``, the parameter value is masked with asterisks (``*****``).",
                    "type": "boolean"
                },
                "type": {
                    "default": "String",
                    "description": "The data type for the parameter (DataType).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EventBridgeProps": {
            "additionalProperties": false,
            "properties": {
                "eventBridgeRules": {
                    "$ref": "#/definitions/NamedEventBridgeRuleProps",
                    "description": "List of EventBridge rules to trigger the Lambda function from S3 EventBridge notifications"
                },
                "maxEventAgeSeconds": {
                    "default": "86400 (24 hours)",
                    "description": "The maximum age of a request that EventBridge sends to target\n\nMinimum value of 60.\nMaximum value of 86400.",
                    "type": "number"
                },
                "retryAttempts": {
                    "default": 185,
                    "description": "The maximum number of times to retry when the target returns an error.\n\nMinimum value of 0.\nMaximum value of 185.",
                    "type": "number"
                },
                "s3EventBridgeRules": {
                    "$ref": "#/definitions/NamedS3EventBridgeRuleProps",
                    "description": "List of EventBridge rules to trigger the Lambda function from S3 EventBridge notifications"
                }
            },
            "type": "object"
        },
        "EventBridgeRuleProps": {
            "additionalProperties": false,
            "properties": {
                "description": {
                    "description": "Description of the rule",
                    "type": "string"
                },
                "eventBusArn": {
                    "description": "If specified, rule will be created against this event bus.\nIf not specified, default event bus will be used.",
                    "type": "string"
                },
                "eventPattern": {
                    "$ref": "#/definitions/EventPattern",
                    "description": "The Event Pattern to be passed to the rule"
                }
            },
            "type": "object"
        },
        "EventPattern": {
            "additionalProperties": false,
            "description": "Events in Amazon CloudWatch Events are represented as JSON objects. For more\ninformation about JSON objects, see RFC 7159.\n\n**Important**: this class can only be used with a `Rule` class. In particular,\ndo not use it with `CfnRule` class: your pattern will not be rendered\ncorrectly. In a `CfnRule` class, write the pattern as you normally would when\ndirectly writing CloudFormation.\n\nRules use event patterns to select events and route them to targets. A\npattern either matches an event or it doesn't. Event patterns are represented\nas JSON objects with a structure that is similar to that of events.\n\nIt is important to remember the following about event pattern matching:\n\n- For a pattern to match an event, the event must contain all the field names\n  listed in the pattern. The field names must appear in the event with the\n  same nesting structure.\n\n- Other fields of the event not mentioned in the pattern are ignored;\n  effectively, there is a ``\"*\": \"*\"`` wildcard for fields not mentioned.\n\n- The matching is exact (character-by-character), without case-folding or any\n  other string normalization.\n\n- The values being matched follow JSON rules: Strings enclosed in quotes,\n  numbers, and the unquoted keywords true, false, and null.\n\n- Number matching is at the string representation level. For example, 300,\n  300.0, and 3.0e2 are not considered equal.",
            "properties": {
                "account": {
                    "default": "- No filtering on account",
                    "description": "The 12-digit number identifying an AWS account.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "detail": {
                    "additionalProperties": {},
                    "default": "- No filtering on detail",
                    "description": "A JSON object, whose content is at the discretion of the service\noriginating the event.",
                    "type": "object"
                },
                "detailType": {
                    "default": "- No filtering on detail type",
                    "description": "Identifies, in combination with the source field, the fields and values\nthat appear in the detail field.\n\nRepresents the \"detail-type\" event field.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "default": "- No filtering on id",
                    "description": "A unique value is generated for every event. This can be helpful in\ntracing events as they move through rules to targets, and are processed.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "region": {
                    "default": "- No filtering on region",
                    "description": "Identifies the AWS region where the event originated.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "resources": {
                    "default": "- No filtering on resource",
                    "description": "This JSON array contains ARNs that identify resources that are involved\nin the event. Inclusion of these ARNs is at the discretion of the\nservice.\n\nFor example, Amazon EC2 instance state-changes include Amazon EC2\ninstance ARNs, Auto Scaling events include ARNs for both instances and\nAuto Scaling groups, but API calls with AWS CloudTrail do not include\nresource ARNs.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source": {
                    "default": "- No filtering on source",
                    "description": "Identifies the service that sourced the event. All events sourced from\nwithin AWS begin with \"aws.\" Customer-generated events can have any value\nhere, as long as it doesn't begin with \"aws.\" We recommend the use of\nJava package-name style reverse domain-name strings.\n\nTo find the correct value for source for an AWS service, see the table in\nAWS Service Namespaces. For example, the source value for Amazon\nCloudFront is aws.cloudfront.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "time": {
                    "default": "- No filtering on time",
                    "description": "The event timestamp, which can be specified by the service originating\nthe event. If the event spans a time interval, the service might choose\nto report the start time, so this value can be noticeably before the time\nthe event is actually received.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "version": {
                    "default": "- No filtering on version",
                    "description": "By default, this is set to 0 (zero) in all events.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NamedEventBridgeRuleProps": {
            "additionalProperties": {
                "$ref": "#/definitions/EventBridgeRuleProps"
            },
            "type": "object"
        },
        "NamedS3EventBridgeRuleProps": {
            "additionalProperties": {
                "$ref": "#/definitions/S3EventBridgeRuleProps"
            },
            "type": "object"
        },
        "S3EventBridgeRuleProps": {
            "additionalProperties": false,
            "properties": {
                "buckets": {
                    "description": "Name of the buckets on which to match",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "eventBusArn": {
                    "description": "If specified, rule will be created against this event bus.\nIf not specified, default event bus will be used.",
                    "type": "string"
                },
                "prefixes": {
                    "description": "Object key prefixes on which to match",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "buckets"
            ],
            "type": "object"
        },
        "WorkflowProps": {
            "additionalProperties": false,
            "properties": {
                "eventBridge": {
                    "$ref": "#/definitions/EventBridgeProps",
                    "description": "EventBridge props"
                },
                "rawWorkflowDef": {
                    "additionalProperties": {},
                    "description": "Workflow defintion as generated by aws cli",
                    "type": "object"
                }
            },
            "required": [
                "rawWorkflowDef"
            ],
            "type": "object"
        }
    },
    "properties": {
        "deploymentRole": {
            "type": "string"
        },
        "kmsArn": {
            "type": "string"
        },
        "nag_suppressions": {
            "$ref": "#/definitions/CaefNagSuppressions",
            "description": "Nag suppressions"
        },
        "projectBucket": {
            "type": "string"
        },
        "projectName": {
            "description": "Name of the DataOps Project",
            "type": "string"
        },
        "projectTopicArn": {
            "type": "string"
        },
        "securityConfigurationName": {
            "type": "string"
        },
        "service_catalog_product_config": {
            "$ref": "#/definitions/CaefServiceCatalogProductConfig",
            "description": "Service Catalog Config\nIf specified, the configured module will be deployed as a Service Catalog product instead of directly to the environment"
        },
        "workflowDefinitions": {
            "description": "Workflows to create",
            "items": {
                "$ref": "#/definitions/WorkflowProps"
            },
            "type": "array"
        }
    },
    "required": [
        "deploymentRole",
        "kmsArn",
        "projectBucket",
        "projectName",
        "projectTopicArn",
        "securityConfigurationName",
        "workflowDefinitions"
    ],
    "type": "object"
}

