// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ec2 Snapshot Tests EC2 App App Snapshot Test 1`] = `
{
  "test-org-test-env-test-domain-test-ec2-main": {
    "Description": "(SO0320-ec2) Modern Data Architecture Accelerator. Version 1.0.0",
    "Mappings": {
      "LatestNodeRuntimeMap": {
        "af-south-1": {
          "value": "nodejs22.x",
        },
        "ap-east-1": {
          "value": "nodejs22.x",
        },
        "ap-east-2": {
          "value": "nodejs22.x",
        },
        "ap-northeast-1": {
          "value": "nodejs22.x",
        },
        "ap-northeast-2": {
          "value": "nodejs22.x",
        },
        "ap-northeast-3": {
          "value": "nodejs22.x",
        },
        "ap-south-1": {
          "value": "nodejs22.x",
        },
        "ap-south-2": {
          "value": "nodejs22.x",
        },
        "ap-southeast-1": {
          "value": "nodejs22.x",
        },
        "ap-southeast-2": {
          "value": "nodejs22.x",
        },
        "ap-southeast-3": {
          "value": "nodejs22.x",
        },
        "ap-southeast-4": {
          "value": "nodejs22.x",
        },
        "ap-southeast-5": {
          "value": "nodejs22.x",
        },
        "ap-southeast-7": {
          "value": "nodejs22.x",
        },
        "ca-central-1": {
          "value": "nodejs22.x",
        },
        "ca-west-1": {
          "value": "nodejs22.x",
        },
        "cn-north-1": {
          "value": "nodejs22.x",
        },
        "cn-northwest-1": {
          "value": "nodejs22.x",
        },
        "eu-central-1": {
          "value": "nodejs22.x",
        },
        "eu-central-2": {
          "value": "nodejs22.x",
        },
        "eu-isoe-west-1": {
          "value": "nodejs18.x",
        },
        "eu-north-1": {
          "value": "nodejs22.x",
        },
        "eu-south-1": {
          "value": "nodejs22.x",
        },
        "eu-south-2": {
          "value": "nodejs22.x",
        },
        "eu-west-1": {
          "value": "nodejs22.x",
        },
        "eu-west-2": {
          "value": "nodejs22.x",
        },
        "eu-west-3": {
          "value": "nodejs22.x",
        },
        "il-central-1": {
          "value": "nodejs22.x",
        },
        "me-central-1": {
          "value": "nodejs22.x",
        },
        "me-south-1": {
          "value": "nodejs22.x",
        },
        "mx-central-1": {
          "value": "nodejs22.x",
        },
        "sa-east-1": {
          "value": "nodejs22.x",
        },
        "us-east-1": {
          "value": "nodejs22.x",
        },
        "us-east-2": {
          "value": "nodejs22.x",
        },
        "us-gov-east-1": {
          "value": "nodejs22.x",
        },
        "us-gov-west-1": {
          "value": "nodejs22.x",
        },
        "us-iso-east-1": {
          "value": "nodejs18.x",
        },
        "us-iso-west-1": {
          "value": "nodejs18.x",
        },
        "us-isob-east-1": {
          "value": "nodejs18.x",
        },
        "us-isob-west-1": {
          "value": "nodejs18.x",
        },
        "us-west-1": {
          "value": "nodejs22.x",
        },
        "us-west-2": {
          "value": "nodejs22.x",
        },
      },
    },
    "Outputs": {
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-ec2-main:lambda:ec2volumeencryptioncheckhandler:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-ec2-main:lambda:ec2volumeencryptioncheckhandler:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-ec2-main:lambda:secretkeypairhandler:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-ec2-main:lambda:secretkeypairhandler:name",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-ec2-main:instance:id-test-org-test-env-test-domain-test-ec2-main-instance-1",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-ec2-main:instance:id-test-org-test-env-test-domain-test-ec2-main-instance-2",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-ec2-main:kms:arn",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-ec2-main:kms:id",
        },
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Export": {
          "Name": "test-org:test-domain:test-ec2-main:security-group:sg1:id",
        },
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
      },
    },
    "Parameters": {
      "BootstrapVersion": {
        "Default": "/cdk-bootstrap/hnb659fds/version",
        "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/ml/sm/sg/id",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
      "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter": {
        "Default": "/test-org/test-domain/caef-bootstrap/role-helper-service-token",
        "Type": "AWS::SSM::Parameter::Value<String>",
      },
    },
    "Resources": {
      "RoleResadmin0": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "name": "Admin",
            "refId": "admin-0",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResadmin1": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":role/some-admin-role",
                ],
              ],
            },
            "refId": "admin-1",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResadmin2": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "id": "some-role-id",
            "refId": "admin-2",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "RoleResinstanceRole": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "roleRef": {
            "name": "some-instance-role-name",
            "refId": "instanceRole",
          },
        },
        "Type": "AWS::CloudFormation::CustomResource",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": "Stack description parameter to update on version changes",
          "Name": "/test-org/test-domain/test-ec2-main/aws-solution",
          "Tags": {
            "mdaa_cdk_app": "ec2",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-ec2-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": "(SO0320-ec2) Modern Data Architecture Accelerator. Version 1.0.0",
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Environment": {
            "Variables": {
              "LOG_LEVEL": "INFO",
              "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-ec2-main-ec2volumee--770761e7",
          "Handler": "volume_check.lambda_handler",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": "python3.13",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "ec2",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-ec2-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 120,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-ec2-main/lambda/ec2volumeencryptioncheck-handler/arn",
          "Tags": {
            "mdaa_cdk_app": "ec2",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-ec2-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-ec2-main/lambda/ec2volumeencryptioncheck-handler/name",
          "Tags": {
            "mdaa_cdk_app": "ec2",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-ec2-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] ec2:DescribeImages and ec2:DescribeVolumes do not accept a resource",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "ec2:DescribeInstances",
                  "ec2:DescribeVolumes",
                ],
                "Effect": "Allow",
                "Resource": "*",
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "Ec2VolumeEncryptionCheck-handler",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "RoleName": "test-org-test-env-test-domain-test-ec2-main-ec2volumee--770761e7",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "ec2",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-ec2-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-ec2volumee--770761e7*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-ec2volumee--770761e7*",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-L1",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
              },
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-ec2-main/custom-Ec2VolumeEncryptionCheck-provider)",
          "Environment": {
            "Variables": {
              "USER_ON_EVENT_FUNCTION_ARN": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-ec2-main-ec2volumeen-5b1f9902",
          "Handler": "framework.onEvent",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": {
            "Fn::FindInMap": [
              "LatestNodeRuntimeMap",
              {
                "Ref": "AWS::Region",
              },
              "value",
            ],
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "ec2",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-ec2-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 900,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Description": "CR Role",
          "RoleName": "test-org-test-env-test-domain-test-ec2-main-ec2volumeen-5b1f9902",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "ec2",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-ec2-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-ec2volumeen-5b1f9902*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-ec2volumeen-5b1f9902*",
                    ],
                  ],
                },
              },
              {
                "Action": "lambda:InvokeFunction",
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        ":*",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": "lambda:GetFunction",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Environment": {
            "Variables": {
              "LOG_LEVEL": "INFO",
              "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-ec2-main-secretkeypai-222cf41",
          "Handler": "keypair.lambda_handler",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": "python3.13",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "ec2",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-ec2-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 120,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-ec2-main/lambda/secretkeypair-handler/arn",
          "Tags": {
            "mdaa_cdk_app": "ec2",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-ec2-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Name": "/test-org/test-domain/test-ec2-main/lambda/secretkeypair-handler/name",
          "Tags": {
            "mdaa_cdk_app": "ec2",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-ec2-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "ec2:CreateKeyPair",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ec2:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":key-pair/test-org-test-env-test-domain-test-ec2-main-test-key-pair",
                    ],
                  ],
                },
              },
              {
                "Action": "ec2:CreateKeyPair",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ec2:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":key-pair/test-org-test-env-test-domain-test-ec2-main-test-key-pair2",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "SecretKeyPair-handler",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "RoleName": "test-org-test-env-test-domain-test-ec2-main-secretkeypai-222cf41",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "ec2",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-ec2-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-secretkeypai-222cf41*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-secretkeypai-222cf41*",
                    ],
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-L1",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
              },
              {
                "id": "NIST.800.53.R5-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "NIST.800.53.R5-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "NIST.800.53.R5-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "HIPAA.Security-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "HIPAA.Security-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "HIPAA.Security-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
              {
                "id": "PCI.DSS.321-LambdaDLQ",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
              },
              {
                "id": "PCI.DSS.321-LambdaInsideVPC",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
              },
              {
                "id": "PCI.DSS.321-LambdaConcurrency",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
              },
            ],
          },
        },
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
            },
            "S3Key": "REPLACED-GENERATED-NAME.zip",
          },
          "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-ec2-main/custom-SecretKeyPair-provider)",
          "Environment": {
            "Variables": {
              "USER_ON_EVENT_FUNCTION_ARN": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          },
          "FunctionName": "test-org-test-env-test-domain-test-ec2-main-secretkeypai-73b8cda",
          "Handler": "framework.onEvent",
          "Role": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Runtime": {
            "Fn::FindInMap": [
              "LatestNodeRuntimeMap",
              {
                "Ref": "AWS::Region",
              },
              "value",
            ],
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "ec2",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-ec2-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "Timeout": 900,
        },
        "Type": "AWS::Lambda::Function",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "Description": "CR Role",
          "RoleName": "test-org-test-env-test-domain-test-ec2-main-secretkeypai-73b8cda",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "ec2",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-ec2-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::IAM::Role",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
              },
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "logs:PutLogEvents",
                  "logs:CreateLogStream",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-secretkeypai-73b8cda*",
                    ],
                  ],
                },
              },
              {
                "Action": "logs:CreateLogGroup",
                "Effect": "Allow",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-secretkeypai-73b8cda*",
                    ],
                  ],
                },
              },
              {
                "Action": "lambda:InvokeFunction",
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "REPLACED-CFN-LOGICAL-ID",
                            "Arn",
                          ],
                        },
                        ":*",
                      ],
                    ],
                  },
                ],
              },
              {
                "Action": "lambda:GetFunction",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Ref": "REPLACED-CFN-LOGICAL-ID",
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "CreationPolicy": {
          "ResourceSignal": {
            "Count": 1,
            "Timeout": "PT5M",
          },
        },
        "DeletionPolicy": "Retain",
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "AWS::CloudFormation::Init": {
            "Apache": {
              "packages": {
                "yum": {
                  "httpd": [],
                },
              },
            },
            "Prereq": {
              "packages": {
                "rpm": {
                  "001": [
                    "https://awscli.amazonaws.com//rpmpackage.rpm",
                  ],
                },
                "yum": {
                  "git": [],
                  "jq": [],
                },
              },
            },
            "configSets": {
              "confgiset2": [
                "Prereq",
                "Apache",
              ],
              "default": [
                "Apache",
                "Prereq",
              ],
            },
          },
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-EC29",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
              },
              {
                "id": "NIST.800.53.R5-EC2IMDSv2Enabled",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
              },
              {
                "id": "HIPAA.Security-EC2IMDSv2Enabled",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
              },
              {
                "id": "PCI.DSS.321-EC2IMDSv2Enabled",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
              },
            ],
          },
        },
        "Properties": {
          "AvailabilityZone": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "AWS::Region",
                },
                "a",
              ],
            ],
          },
          "BlockDeviceMappings": [
            {
              "DeviceName": "/dev/sda1",
              "Ebs": {
                "DeleteOnTermination": false,
                "Encrypted": true,
                "KmsKeyId": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "VolumeSize": 32,
                "VolumeType": "gp3",
              },
            },
          ],
          "DisableApiTermination": true,
          "IamInstanceProfile": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "ImageId": "ami-linux",
          "InstanceType": "t3.medium",
          "KeyName": "test-org-test-env-test-domain-test-ec2-main-test-key-pair",
          "LaunchTemplate": {
            "LaunchTemplateName": "test-org-test-env-test-domain-test-ec2-main-instance-1",
            "Version": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "LatestVersionNumber",
              ],
            },
          },
          "Monitoring": true,
          "PropagateTagsToVolumeOnCreation": true,
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "GroupId",
              ],
            },
          ],
          "SubnetId": "subnet-testsubnet",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "ec2",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-ec2-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
            {
              "Key": "Name",
              "Value": "test-org-test-env-test-domain-test-ec2-main-instance-1",
            },
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "#!/bin/bash
#!/bin/bash

echo 'hello, this is userdata script, mount the ebs volume to ec2 here'
# fingerprint: 66436aeba23d1a3e
(
  set +e
  /opt/aws/bin/cfn-init -v --region ",
                  {
                    "Ref": "AWS::Region",
                  },
                  " --stack ",
                  {
                    "Ref": "AWS::StackName",
                  },
                  " --resource instancesinstance1instanceCE8FAF35 -c default
  /opt/aws/bin/cfn-signal -e $? --region ",
                  {
                    "Ref": "AWS::Region",
                  },
                  " --stack ",
                  {
                    "Ref": "AWS::StackName",
                  },
                  " --resource instancesinstance1instanceCE8FAF35
  cat /var/log/cfn-init.log >&2
)",
                ],
              ],
            },
          },
        },
        "Type": "AWS::EC2::Instance",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Roles": [
            "instance-role",
          ],
        },
        "Type": "AWS::IAM::InstanceProfile",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-ec2-main/instance/id-test-org-test-env-test-domain-test-ec2-main-instance-1",
          "Tags": {
            "Name": "test-org-test-env-test-domain-test-ec2-main-instance-1",
            "mdaa_cdk_app": "ec2",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-ec2-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "LaunchTemplateData": {
            "BlockDeviceMappings": [
              {
                "DeviceName": "/dev/sda1",
                "Ebs": {
                  "DeleteOnTermination": false,
                  "Encrypted": true,
                  "KmsKeyId": {
                    "Fn::GetAtt": [
                      "REPLACED-CFN-LOGICAL-ID",
                      "Arn",
                    ],
                  },
                  "VolumeSize": 32,
                  "VolumeType": "gp3",
                },
              },
            ],
            "MetadataOptions": {
              "HttpTokens": "required",
            },
            "TagSpecifications": [
              {
                "ResourceType": "instance",
                "Tags": [
                  {
                    "Key": "mdaa_cdk_app",
                    "Value": "ec2",
                  },
                  {
                    "Key": "mdaa_domain",
                    "Value": "test-domain",
                  },
                  {
                    "Key": "mdaa_env",
                    "Value": "test-env",
                  },
                  {
                    "Key": "mdaa_module_name",
                    "Value": "test-ec2-main",
                  },
                  {
                    "Key": "mdaa_org",
                    "Value": "test-org",
                  },
                  {
                    "Key": "Name",
                    "Value": "test-org-test-env-test-domain-test-ec2-main/instances/instance-1instance/launch-template",
                  },
                ],
              },
              {
                "ResourceType": "volume",
                "Tags": [
                  {
                    "Key": "mdaa_cdk_app",
                    "Value": "ec2",
                  },
                  {
                    "Key": "mdaa_domain",
                    "Value": "test-domain",
                  },
                  {
                    "Key": "mdaa_env",
                    "Value": "test-env",
                  },
                  {
                    "Key": "mdaa_module_name",
                    "Value": "test-ec2-main",
                  },
                  {
                    "Key": "mdaa_org",
                    "Value": "test-org",
                  },
                  {
                    "Key": "Name",
                    "Value": "test-org-test-env-test-domain-test-ec2-main/instances/instance-1instance/launch-template",
                  },
                ],
              },
            ],
          },
          "LaunchTemplateName": "test-org-test-env-test-domain-test-ec2-main-instance-1",
          "TagSpecifications": [
            {
              "ResourceType": "launch-template",
              "Tags": [
                {
                  "Key": "mdaa_cdk_app",
                  "Value": "ec2",
                },
                {
                  "Key": "mdaa_domain",
                  "Value": "test-domain",
                },
                {
                  "Key": "mdaa_env",
                  "Value": "test-env",
                },
                {
                  "Key": "mdaa_module_name",
                  "Value": "test-ec2-main",
                },
                {
                  "Key": "mdaa_org",
                  "Value": "test-org",
                },
                {
                  "Key": "Name",
                  "Value": "test-org-test-env-test-domain-test-ec2-main/instances/instance-1instance/launch-template",
                },
              ],
            },
          ],
        },
        "Type": "AWS::EC2::LaunchTemplate",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "instanceId": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "kmsKeyArn": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "Custom::Ec2VolumeEncryptionCheck",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "CreationPolicy": {
          "ResourceSignal": {
            "Count": 1,
            "Timeout": "PT25M",
          },
        },
        "DeletionPolicy": "Retain",
        "DependsOn": [
          "REPLACED-CFN-LOGICAL-ID",
        ],
        "Metadata": {
          "AWS::CloudFormation::Init": {
            "Preinstall": {
              "commands": {
                "01testCommand": {
                  "command": "echo "this is a command"",
                },
                "02anotherTestCommand": {
                  "command": "echo "this TOO is a command"",
                  "cwd": "/some/dir/",
                  "test": "echo "this is test command"",
                  "waitAfterCompletion": "forever",
                },
              },
              "files": {
                "testfile.txt": {
                  "content": "This is a test text file.
It is in txt format.",
                  "encoding": "plain",
                },
              },
              "packages": {
                "msi": {
                  "000": "https://awscli.amazonaws.com/somepackagefromconfig.msi",
                },
              },
              "services": {
                "windows": {
                  "cfn-hup": {
                    "commands": [
                      "02anotherTestCommand",
                    ],
                    "enabled": true,
                    "ensureRunning": true,
                    "files": [
                      "testfile.txt",
                    ],
                  },
                },
              },
            },
            "awscli": {
              "packages": {
                "msi": {
                  "000": "https://awscli.amazonaws.com//AWSCLI64.msi",
                  "001": "https://awscli.amazonaws.com//thisisanotherpackage.msi",
                },
              },
            },
            "configSets": {
              "confgiset2": [
                "Preinstall",
                "awscli",
              ],
              "default": [
                "awscli",
                "Preinstall",
              ],
            },
          },
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-EC29",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
              },
              {
                "id": "NIST.800.53.R5-EC2IMDSv2Enabled",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
              },
              {
                "id": "HIPAA.Security-EC2IMDSv2Enabled",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
              },
              {
                "id": "PCI.DSS.321-EC2IMDSv2Enabled",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
              },
            ],
          },
        },
        "Properties": {
          "AvailabilityZone": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "AWS::Region",
                },
                "b",
              ],
            ],
          },
          "BlockDeviceMappings": [
            {
              "DeviceName": "/dev/sda1",
              "Ebs": {
                "DeleteOnTermination": false,
                "Encrypted": true,
                "KmsKeyId": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":kms:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":key/test-key",
                    ],
                  ],
                },
                "VolumeSize": 32,
                "VolumeType": "gp3",
              },
            },
            {
              "DeviceName": "/dev/sdb1",
              "Ebs": {
                "DeleteOnTermination": false,
                "Encrypted": true,
                "KmsKeyId": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":kms:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":key/test-key",
                    ],
                  ],
                },
                "VolumeSize": 16,
                "VolumeType": "gp2",
              },
            },
          ],
          "DisableApiTermination": true,
          "IamInstanceProfile": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "ImageId": "ami-windows",
          "InstanceType": "t3.medium",
          "KeyName": "rsa-key",
          "LaunchTemplate": {
            "LaunchTemplateName": "test-org-test-env-test-domain-test-ec2-main-instance-2",
            "Version": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "LatestVersionNumber",
              ],
            },
          },
          "Monitoring": true,
          "PropagateTagsToVolumeOnCreation": true,
          "SecurityGroupIds": [
            "sg-123412412",
          ],
          "SubnetId": "subnet-testsubnet",
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "ec2",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-ec2-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
            {
              "Key": "Name",
              "Value": "test-org-test-env-test-domain-test-ec2-main-instance-2",
            },
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "<powershell>
echo "this is userdata script, add powershell commands here"
Get-Service AmazonSSMAgent
# fingerprint: b314282176e5afbf
cfn-init.exe -v --region ",
                  {
                    "Ref": "AWS::Region",
                  },
                  " --stack ",
                  {
                    "Ref": "AWS::StackName",
                  },
                  " --resource instancesinstance2instanceB7AD1249 --role ",
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Fn::Select": [
                              5,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Fn::GetAtt": [
                                      "RoleResinstanceRole",
                                      "arn",
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  " -c confgiset2
cfn-signal.exe -e $LASTEXITCODE --region ",
                  {
                    "Ref": "AWS::Region",
                  },
                  " --stack ",
                  {
                    "Ref": "AWS::StackName",
                  },
                  " --resource instancesinstance2instanceB7AD1249 --role ",
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Fn::Select": [
                              5,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Fn::GetAtt": [
                                      "RoleResinstanceRole",
                                      "arn",
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  "
type C:\\cfn\\log\\cfn-init.log</powershell>",
                ],
              ],
            },
          },
        },
        "Type": "AWS::EC2::Instance",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResinstanceRole",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::InstanceProfile",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-ec2-main/instance/id-test-org-test-env-test-domain-test-ec2-main-instance-2",
          "Tags": {
            "Name": "test-org-test-env-test-domain-test-ec2-main-instance-2",
            "mdaa_cdk_app": "ec2",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-ec2-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "LaunchTemplateData": {
            "BlockDeviceMappings": [
              {
                "DeviceName": "/dev/sda1",
                "Ebs": {
                  "DeleteOnTermination": false,
                  "Encrypted": true,
                  "KmsKeyId": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":kms:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":key/test-key",
                      ],
                    ],
                  },
                  "VolumeSize": 32,
                  "VolumeType": "gp3",
                },
              },
              {
                "DeviceName": "/dev/sdb1",
                "Ebs": {
                  "DeleteOnTermination": false,
                  "Encrypted": true,
                  "KmsKeyId": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":kms:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":key/test-key",
                      ],
                    ],
                  },
                  "VolumeSize": 16,
                  "VolumeType": "gp2",
                },
              },
            ],
            "MetadataOptions": {
              "HttpTokens": "required",
            },
            "TagSpecifications": [
              {
                "ResourceType": "instance",
                "Tags": [
                  {
                    "Key": "mdaa_cdk_app",
                    "Value": "ec2",
                  },
                  {
                    "Key": "mdaa_domain",
                    "Value": "test-domain",
                  },
                  {
                    "Key": "mdaa_env",
                    "Value": "test-env",
                  },
                  {
                    "Key": "mdaa_module_name",
                    "Value": "test-ec2-main",
                  },
                  {
                    "Key": "mdaa_org",
                    "Value": "test-org",
                  },
                  {
                    "Key": "Name",
                    "Value": "test-org-test-env-test-domain-test-ec2-main/instances/instance-2instance/launch-template",
                  },
                ],
              },
              {
                "ResourceType": "volume",
                "Tags": [
                  {
                    "Key": "mdaa_cdk_app",
                    "Value": "ec2",
                  },
                  {
                    "Key": "mdaa_domain",
                    "Value": "test-domain",
                  },
                  {
                    "Key": "mdaa_env",
                    "Value": "test-env",
                  },
                  {
                    "Key": "mdaa_module_name",
                    "Value": "test-ec2-main",
                  },
                  {
                    "Key": "mdaa_org",
                    "Value": "test-org",
                  },
                  {
                    "Key": "Name",
                    "Value": "test-org-test-env-test-domain-test-ec2-main/instances/instance-2instance/launch-template",
                  },
                ],
              },
            ],
          },
          "LaunchTemplateName": "test-org-test-env-test-domain-test-ec2-main-instance-2",
          "TagSpecifications": [
            {
              "ResourceType": "launch-template",
              "Tags": [
                {
                  "Key": "mdaa_cdk_app",
                  "Value": "ec2",
                },
                {
                  "Key": "mdaa_domain",
                  "Value": "test-domain",
                },
                {
                  "Key": "mdaa_env",
                  "Value": "test-env",
                },
                {
                  "Key": "mdaa_module_name",
                  "Value": "test-ec2-main",
                },
                {
                  "Key": "mdaa_org",
                  "Value": "test-org",
                },
                {
                  "Key": "Name",
                  "Value": "test-org-test-env-test-domain-test-ec2-main/instances/instance-2instance/launch-template",
                },
              ],
            },
          ],
        },
        "Type": "AWS::EC2::LaunchTemplate",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "instanceId": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
          "kmsKeyArn": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":kms:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":key/test-key",
              ],
            ],
          },
        },
        "Type": "Custom::Ec2VolumeEncryptionCheck",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "keypairName": "test-org-test-env-test-domain-test-ec2-main-test-key-pair2",
        },
        "Type": "Custom::SecretKeyPair",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SMG4",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
              },
              {
                "id": "NIST.800.53.R5-SecretsManagerRotationEnabled",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
              },
              {
                "id": "HIPAA.Security-SecretsManagerRotationEnabled",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
              },
              {
                "id": "PCI.DSS.321-SecretsManagerRotationEnabled",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
              },
            ],
          },
        },
        "Properties": {
          "Description": {
            "Fn::Join": [
              "",
              [
                "Private key material for EC2 key pair test-org-test-env-test-domain-test-ec2-main-test-key-pair2/",
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "key_pair_id",
                  ],
                },
              ],
            ],
          },
          "KmsKeyId": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":kms:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":key/test-key",
              ],
            ],
          },
          "Name": "test-org-test-env-test-domain-test-ec2-main-test-key-pair2",
          "SecretString": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "key_material",
            ],
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "ec2",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-ec2-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::SecretsManager::Secret",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "ResourcePolicy": {
            "Statement": [
              {
                "Action": [
                  "secretsmanager:DescribeSecret",
                  "secretsmanager:GetSecretValue",
                ],
                "Effect": "Allow",
                "Principal": {
                  "AWS": [
                    {
                      "Fn::GetAtt": [
                        "RoleResadmin0",
                        "arn",
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":role/some-admin-role",
                        ],
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "RoleResadmin2",
                        "arn",
                      ],
                    },
                  ],
                },
                "Resource": {
                  "Ref": "REPLACED-CFN-LOGICAL-ID",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "SecretId": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SecretsManager::ResourcePolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "keypairName": "test-org-test-env-test-domain-test-ec2-main-test-key-pair",
        },
        "Type": "Custom::SecretKeyPair",
        "UpdateReplacePolicy": "Delete",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "AwsSolutions-SMG4",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
              },
              {
                "id": "NIST.800.53.R5-SecretsManagerRotationEnabled",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
              },
              {
                "id": "HIPAA.Security-SecretsManagerRotationEnabled",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
              },
              {
                "id": "PCI.DSS.321-SecretsManagerRotationEnabled",
                "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
              },
            ],
          },
        },
        "Properties": {
          "Description": {
            "Fn::Join": [
              "",
              [
                "Private key material for EC2 key pair test-org-test-env-test-domain-test-ec2-main-test-key-pair/",
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "key_pair_id",
                  ],
                },
              ],
            ],
          },
          "KmsKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
          "Name": "test-org-test-env-test-domain-test-ec2-main-test-key-pair",
          "SecretString": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "key_material",
            ],
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "ec2",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-ec2-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::SecretsManager::Secret",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "ResourcePolicy": {
            "Statement": [
              {
                "Action": [
                  "secretsmanager:DescribeSecret",
                  "secretsmanager:GetSecretValue",
                ],
                "Effect": "Allow",
                "Principal": {
                  "AWS": [
                    {
                      "Fn::GetAtt": [
                        "RoleResadmin0",
                        "arn",
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":role/some-admin-role",
                        ],
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "RoleResadmin2",
                        "arn",
                      ],
                    },
                  ],
                },
                "Resource": {
                  "Ref": "REPLACED-CFN-LOGICAL-ID",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "SecretId": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SecretsManager::ResourcePolicy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "DeletionPolicy": "Retain",
        "Properties": {
          "EnableKeyRotation": true,
          "Enabled": true,
          "KeyPolicy": {
            "Statement": [
              {
                "Action": "kms:*",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
                "Resource": "*",
              },
              {
                "Action": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:ReEncryptFrom",
                  "kms:ReEncryptTo",
                  "kms:GenerateDataKey",
                  "kms:GenerateDataKeyWithoutPlaintext",
                  "kms:GenerateDataKeyPair",
                  "kms:GenerateDataKeyPairWithoutPlaintext",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResadmin0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResadmin1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      "some-role-id:*",
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "test-org-test-env-test-domain-test-ec2-main-usage-stmt",
              },
              {
                "Action": [
                  "kms:Create*",
                  "kms:Describe*",
                  "kms:Enable*",
                  "kms:List*",
                  "kms:Put*",
                  "kms:Update*",
                  "kms:Revoke*",
                  "kms:Disable*",
                  "kms:Get*",
                  "kms:Delete*",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "kms:ScheduleKeyDeletion",
                  "kms:CancelKeyDeletion",
                ],
                "Condition": {
                  "StringLike": {
                    "aws:userId": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResadmin0",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::GetAtt": [
                                "RoleResadmin1",
                                "id",
                              ],
                            },
                            ":*",
                          ],
                        ],
                      },
                      "some-role-id:*",
                    ],
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*",
                },
                "Resource": "*",
                "Sid": "test-org-test-env-test-domain-test-ec2-main-usage-stmt",
              },
              {
                "Action": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:ReEncrypt*",
                  "kms:GenerateDataKey*",
                ],
                "Condition": {
                  "StringEquals": {
                    "kms:ViaService": {
                      "Fn::Join": [
                        "",
                        [
                          "secretsmanager.",
                          {
                            "Ref": "AWS::Region",
                          },
                          ".amazonaws.com",
                        ],
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
                "Resource": "*",
              },
              {
                "Action": [
                  "kms:CreateGrant",
                  "kms:DescribeKey",
                ],
                "Condition": {
                  "StringEquals": {
                    "kms:ViaService": {
                      "Fn::Join": [
                        "",
                        [
                          "secretsmanager.",
                          {
                            "Ref": "AWS::Region",
                          },
                          ".amazonaws.com",
                        ],
                      ],
                    },
                  },
                },
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":root",
                      ],
                    ],
                  },
                },
                "Resource": "*",
              },
              {
                "Action": [
                  "kms:Decrypt",
                  "kms:Encrypt",
                  "kms:ReEncryptFrom",
                  "kms:ReEncryptTo",
                  "kms:GenerateDataKey",
                  "kms:GenerateDataKeyWithoutPlaintext",
                  "kms:GenerateDataKeyPair",
                  "kms:GenerateDataKeyPairWithoutPlaintext",
                  "kms:CreateGrant",
                  "kms:DescribeKey",
                  "kms:ListAliases",
                ],
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/instance-role",
                      ],
                    ],
                  },
                },
                "Resource": "*",
              },
            ],
            "Version": "2012-10-17",
          },
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "ec2",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-ec2-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
        },
        "Type": "AWS::KMS::Key",
        "UpdateReplacePolicy": "Retain",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "AliasName": "alias/test-org-test-env-test-domain-test-ec2-main",
          "TargetKeyId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::KMS::Alias",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-ec2-main/kms/arn",
          "Tags": {
            "mdaa_cdk_app": "ec2",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-ec2-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "Arn",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-ec2-main/kms/id",
          "Tags": {
            "mdaa_cdk_app": "ec2",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-ec2-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding cfn init adds inline policy to instance role to describe stack",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding cfn init adds inline policy to instance role to describe stack",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding cfn init adds inline policy to instance role to describe stack",
              },
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding files section for cfn init, adds permission for cdk bootstrap bucket with wildcard to store the file",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "cloudformation:DescribeStackResource",
                  "cloudformation:SignalResource",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Ref": "AWS::StackId",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            "instance-role",
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Metadata": {
          "cdk_nag": {
            "rules_to_suppress": [
              {
                "id": "NIST.800.53.R5-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding cfn init adds inline policy to instance role to describe stack",
              },
              {
                "id": "HIPAA.Security-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding cfn init adds inline policy to instance role to describe stack",
              },
              {
                "id": "PCI.DSS.321-IAMNoInlinePolicy",
                "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding cfn init adds inline policy to instance role to describe stack",
              },
              {
                "id": "AwsSolutions-IAM5",
                "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding files section for cfn init, adds permission for cdk bootstrap bucket with wildcard to store the file",
              },
            ],
          },
        },
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "cloudformation:DescribeStackResource",
                  "cloudformation:SignalResource",
                ],
                "Effect": "Allow",
                "Resource": {
                  "Ref": "AWS::StackId",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "PolicyName": "REPLACED-CFN-LOGICAL-ID",
          "Roles": [
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "RoleResinstanceRole",
                                "arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        "Type": "AWS::IAM::Policy",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "GroupDescription": "test-org-test-env-test-domain-test-ec2-main/instances/sg1",
          "GroupName": "test-org-test-env-test-domain-test-ec2-main-sg1",
          "SecurityGroupEgress": [
            {
              "CidrIp": "255.255.255.255/32",
              "Description": "Disallow all traffic",
              "FromPort": 252,
              "IpProtocol": "icmp",
              "ToPort": 86,
            },
          ],
          "Tags": [
            {
              "Key": "mdaa_cdk_app",
              "Value": "ec2",
            },
            {
              "Key": "mdaa_domain",
              "Value": "test-domain",
            },
            {
              "Key": "mdaa_env",
              "Value": "test-env",
            },
            {
              "Key": "mdaa_module_name",
              "Value": "test-ec2-main",
            },
            {
              "Key": "mdaa_org",
              "Value": "test-org",
            },
          ],
          "VpcId": "vpc-testvpc",
        },
        "Type": "AWS::EC2::SecurityGroup",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "CidrIp": "10.0.0.0/28",
          "Description": "from 10.0.0.0/28:tcp PORT 443",
          "FromPort": 443,
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "tcp",
          "ToPort": 443,
        },
        "Type": "AWS::EC2::SecurityGroupIngress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Name": "/test-org/test-domain/test-ec2-main/security-group/sg1/id",
          "Tags": {
            "mdaa_cdk_app": "ec2",
            "mdaa_domain": "test-domain",
            "mdaa_env": "test-env",
            "mdaa_module_name": "test-ec2-main",
            "mdaa_org": "test-org",
          },
          "Type": "String",
          "Value": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
        },
        "Type": "AWS::SSM::Parameter",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "CidrIp": "10.0.0.0/28",
          "Description": "to 10.0.0.0/28:tcp PORT 443",
          "FromPort": 443,
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "tcp",
          "ToPort": 443,
        },
        "Type": "AWS::EC2::SecurityGroupEgress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": {
            "Fn::Join": [
              "",
              [
                "to ",
                {
                  "Ref": "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter",
                },
                ":tcp PORT 5472",
              ],
            ],
          },
          "DestinationSecurityGroupId": {
            "Ref": "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "FromPort": 5472,
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "tcp",
          "ToPort": 5472,
        },
        "Type": "AWS::EC2::SecurityGroupEgress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": {
            "Fn::Join": [
              "",
              [
                "prefix list for com.amazonaws.",
                {
                  "Ref": "AWS::Region",
                },
                ".dynamodb",
              ],
            ],
          },
          "DestinationPrefixListId": "pl-4ea54027",
          "FromPort": 443,
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "tcp",
          "ToPort": 443,
        },
        "Type": "AWS::EC2::SecurityGroupEgress",
      },
      "REPLACED-CFN-LOGICAL-ID": {
        "Properties": {
          "Description": {
            "Fn::Join": [
              "",
              [
                "prefix list for com.amazonaws.",
                {
                  "Ref": "AWS::Region",
                },
                ".s3",
              ],
            ],
          },
          "DestinationPrefixListId": "pl-7da54014",
          "FromPort": 443,
          "GroupId": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
          "IpProtocol": "tcp",
          "ToPort": 443,
        },
        "Type": "AWS::EC2::SecurityGroupEgress",
      },
    },
    "Rules": {
      "CheckBootstrapVersion": {
        "Assertions": [
          {
            "Assert": {
              "Fn::Not": [
                {
                  "Fn::Contains": [
                    [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                    ],
                    {
                      "Ref": "BootstrapVersion",
                    },
                  ],
                },
              ],
            },
            "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
          },
        ],
      },
    },
  },
}
`;

exports[`ec2 Snapshot Tests EC2 Stack Snapshot Test 1`] = `
{
  "Description": "(SO0320-ec2) Modern Data Architecture Accelerator. Version 1.0.0",
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs22.x",
      },
      "ap-east-1": {
        "value": "nodejs22.x",
      },
      "ap-east-2": {
        "value": "nodejs22.x",
      },
      "ap-northeast-1": {
        "value": "nodejs22.x",
      },
      "ap-northeast-2": {
        "value": "nodejs22.x",
      },
      "ap-northeast-3": {
        "value": "nodejs22.x",
      },
      "ap-south-1": {
        "value": "nodejs22.x",
      },
      "ap-south-2": {
        "value": "nodejs22.x",
      },
      "ap-southeast-1": {
        "value": "nodejs22.x",
      },
      "ap-southeast-2": {
        "value": "nodejs22.x",
      },
      "ap-southeast-3": {
        "value": "nodejs22.x",
      },
      "ap-southeast-4": {
        "value": "nodejs22.x",
      },
      "ap-southeast-5": {
        "value": "nodejs22.x",
      },
      "ap-southeast-7": {
        "value": "nodejs22.x",
      },
      "ca-central-1": {
        "value": "nodejs22.x",
      },
      "ca-west-1": {
        "value": "nodejs22.x",
      },
      "cn-north-1": {
        "value": "nodejs22.x",
      },
      "cn-northwest-1": {
        "value": "nodejs22.x",
      },
      "eu-central-1": {
        "value": "nodejs22.x",
      },
      "eu-central-2": {
        "value": "nodejs22.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs22.x",
      },
      "eu-south-1": {
        "value": "nodejs22.x",
      },
      "eu-south-2": {
        "value": "nodejs22.x",
      },
      "eu-west-1": {
        "value": "nodejs22.x",
      },
      "eu-west-2": {
        "value": "nodejs22.x",
      },
      "eu-west-3": {
        "value": "nodejs22.x",
      },
      "il-central-1": {
        "value": "nodejs22.x",
      },
      "me-central-1": {
        "value": "nodejs22.x",
      },
      "me-south-1": {
        "value": "nodejs22.x",
      },
      "mx-central-1": {
        "value": "nodejs22.x",
      },
      "sa-east-1": {
        "value": "nodejs22.x",
      },
      "us-east-1": {
        "value": "nodejs22.x",
      },
      "us-east-2": {
        "value": "nodejs22.x",
      },
      "us-gov-east-1": {
        "value": "nodejs22.x",
      },
      "us-gov-west-1": {
        "value": "nodejs22.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-isob-west-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs22.x",
      },
      "us-west-2": {
        "value": "nodejs22.x",
      },
    },
  },
  "Outputs": {
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-ec2-main:lambda:ec2volumeencryptioncheckhandler:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-ec2-main:lambda:ec2volumeencryptioncheckhandler:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-ec2-main:lambda:secretkeypairhandler:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-ec2-main:lambda:secretkeypairhandler:name",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-ec2-main:instance:id-test-org-test-env-test-domain-test-ec2-main-instance-1",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-ec2-main:instance:id-test-org-test-env-test-domain-test-ec2-main-instance-2",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-ec2-main:kms:arn",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "Arn",
        ],
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-ec2-main:kms:id",
      },
      "Value": {
        "Ref": "REPLACED-CFN-LOGICAL-ID",
      },
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Export": {
        "Name": "test-org:test-domain:test-ec2-main:security-group:sg1:id",
      },
      "Value": {
        "Fn::GetAtt": [
          "REPLACED-CFN-LOGICAL-ID",
          "GroupId",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/ml/sm/sg/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/test-org/test-domain/caef-bootstrap/role-helper-service-token",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "RoleResadmin0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "name": "Admin",
          "refId": "admin-0",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResadmin1": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "arn": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::",
                {
                  "Ref": "AWS::AccountId",
                },
                ":role/some-admin-role",
              ],
            ],
          },
          "refId": "admin-1",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResadmin2": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "id": "some-role-id",
          "refId": "admin-2",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleResinstanceRole": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Ref": "SsmParameterValuetestorgtestdomaincaefbootstraprolehelperservicetokenC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "roleRef": {
          "name": "some-instance-role-name",
          "refId": "instanceRole",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": "Stack description parameter to update on version changes",
        "Name": "/test-org/test-domain/test-ec2-main/aws-solution",
        "Tags": {
          "mdaa_cdk_app": "ec2",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-ec2-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": "(SO0320-ec2) Modern Data Architecture Accelerator. Version 1.0.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
            "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-ec2-main-ec2volumee--770761e7",
        "Handler": "volume_check.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "ec2",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-ec2-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-ec2-main/lambda/ec2volumeencryptioncheck-handler/arn",
        "Tags": {
          "mdaa_cdk_app": "ec2",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-ec2-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-ec2-main/lambda/ec2volumeencryptioncheck-handler/name",
        "Tags": {
          "mdaa_cdk_app": "ec2",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-ec2-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] ec2:DescribeImages and ec2:DescribeVolumes do not accept a resource",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeVolumes",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "Ec2VolumeEncryptionCheck-handler",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "test-org-test-env-test-domain-test-ec2-main-ec2volumee--770761e7",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "ec2",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-ec2-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-ec2volumee--770761e7*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-ec2volumee--770761e7*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
            },
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-ec2-main/custom-Ec2VolumeEncryptionCheck-provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-ec2-main-ec2volumeen-5b1f9902",
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "ec2",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-ec2-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "CR Role",
        "RoleName": "test-org-test-env-test-domain-test-ec2-main-ec2volumeen-5b1f9902",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "ec2",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-ec2-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-ec2volumeen-5b1f9902*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-ec2volumeen-5b1f9902*",
                  ],
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
            "USER_AGENT_STRING": "AWSSOLUTION/SO0320/v1.0.0",
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-ec2-main-secretkeypai-222cf41",
        "Handler": "keypair.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "ec2",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-ec2-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-ec2-main/lambda/secretkeypair-handler/arn",
        "Tags": {
          "mdaa_cdk_app": "ec2",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-ec2-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Name": "/test-org/test-domain/test-ec2-main/lambda/secretkeypair-handler/name",
        "Tags": {
          "mdaa_cdk_app": "ec2",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-ec2-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource; inline policy use appropriate",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:CreateKeyPair",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":key-pair/test-org-test-env-test-domain-test-ec2-main-test-key-pair",
                  ],
                ],
              },
            },
            {
              "Action": "ec2:CreateKeyPair",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":key-pair/test-org-test-env-test-domain-test-ec2-main-test-key-pair2",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SecretKeyPair-handler",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "test-org-test-env-test-domain-test-ec2-main-secretkeypai-222cf41",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "ec2",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-ec2-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-secretkeypai-222cf41*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-secretkeypai-222cf41*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Lambda function Runtime set by CDK Provider Framework",
            },
            {
              "id": "NIST.800.53.R5-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "NIST.800.53.R5-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "NIST.800.53.R5-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "HIPAA.Security-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "HIPAA.Security-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "HIPAA.Security-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
            {
              "id": "PCI.DSS.321-LambdaDLQ",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and error handling will be handled by CloudFormation.",
            },
            {
              "id": "PCI.DSS.321-LambdaInsideVPC",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource.",
            },
            {
              "id": "PCI.DSS.321-LambdaConcurrency",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Function is for custom resource and will only execute during stack deployement. Reserved concurrency not appropriate.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (test-org-test-env-test-domain-test-ec2-main/custom-SecretKeyPair-provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "REPLACED-CFN-LOGICAL-ID",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": "test-org-test-env-test-domain-test-ec2-main-secretkeypai-73b8cda",
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "ec2",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-ec2-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "CR Role",
        "RoleName": "test-org-test-env-test-domain-test-ec2-main-secretkeypai-73b8cda",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "ec2",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-ec2-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] LogStream names dynamically generated by Lambda. Wildcard limited to log stream name.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/lambda-constructs/lib/role.ts:LINE:COL] Inline policy is specific to this role and its custom resource.",
            },
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/custom-constructs/lib/custom.ts:LINE:COL] Role is for Custom Resource Provider. Inline policy automatically added.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-secretkeypai-73b8cda*",
                  ],
                ],
              },
            },
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:*:*:log-group:/aws/lambda/test-org-test-env-test-domain-test-ec2-main-secretkeypai-73b8cda*",
                  ],
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "REPLACED-CFN-LOGICAL-ID",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Ref": "REPLACED-CFN-LOGICAL-ID",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": 1,
          "Timeout": "PT5M",
        },
      },
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "Apache": {
            "packages": {
              "yum": {
                "httpd": [],
              },
            },
          },
          "Prereq": {
            "packages": {
              "rpm": {
                "001": [
                  "https://awscli.amazonaws.com//rpmpackage.rpm",
                ],
              },
              "yum": {
                "git": [],
                "jq": [],
              },
            },
          },
          "configSets": {
            "confgiset2": [
              "Prereq",
              "Apache",
            ],
            "default": [
              "Apache",
              "Prereq",
            ],
          },
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-EC29",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
            },
            {
              "id": "NIST.800.53.R5-EC2IMDSv2Enabled",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
            },
            {
              "id": "HIPAA.Security-EC2IMDSv2Enabled",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
            },
            {
              "id": "PCI.DSS.321-EC2IMDSv2Enabled",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
            },
          ],
        },
      },
      "Properties": {
        "AvailabilityZone": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region",
              },
              "a",
            ],
          ],
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": false,
              "Encrypted": true,
              "KmsKeyId": {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "Arn",
                ],
              },
              "VolumeSize": 32,
              "VolumeType": "gp3",
            },
          },
        ],
        "DisableApiTermination": true,
        "IamInstanceProfile": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "ImageId": "ami-linux",
        "InstanceType": "t3.medium",
        "KeyName": "test-org-test-env-test-domain-test-ec2-main-test-key-pair",
        "LaunchTemplate": {
          "LaunchTemplateName": "test-org-test-env-test-domain-test-ec2-main-instance-1",
          "Version": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "LatestVersionNumber",
            ],
          },
        },
        "Monitoring": true,
        "PropagateTagsToVolumeOnCreation": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "GroupId",
            ],
          },
        ],
        "SubnetId": "subnet-testsubnet",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "ec2",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-ec2-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
          {
            "Key": "Name",
            "Value": "test-org-test-env-test-domain-test-ec2-main-instance-1",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash
#!/bin/bash

echo 'hello, this is userdata script, mount the ebs volume to ec2 here'
# fingerprint: 66436aeba23d1a3e
(
  set +e
  /opt/aws/bin/cfn-init -v --region ",
                {
                  "Ref": "AWS::Region",
                },
                " --stack ",
                {
                  "Ref": "AWS::StackName",
                },
                " --resource instancesinstance1instanceCE8FAF35 -c default
  /opt/aws/bin/cfn-signal -e $? --region ",
                {
                  "Ref": "AWS::Region",
                },
                " --stack ",
                {
                  "Ref": "AWS::StackName",
                },
                " --resource instancesinstance1instanceCE8FAF35
  cat /var/log/cfn-init.log >&2
)",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Roles": [
          "instance-role",
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-ec2-main/instance/id-test-org-test-env-test-domain-test-ec2-main-instance-1",
        "Tags": {
          "Name": "test-org-test-env-test-domain-test-ec2-main-instance-1",
          "mdaa_cdk_app": "ec2",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-ec2-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "LaunchTemplateData": {
          "BlockDeviceMappings": [
            {
              "DeviceName": "/dev/sda1",
              "Ebs": {
                "DeleteOnTermination": false,
                "Encrypted": true,
                "KmsKeyId": {
                  "Fn::GetAtt": [
                    "REPLACED-CFN-LOGICAL-ID",
                    "Arn",
                  ],
                },
                "VolumeSize": 32,
                "VolumeType": "gp3",
              },
            },
          ],
          "MetadataOptions": {
            "HttpTokens": "required",
          },
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "mdaa_cdk_app",
                  "Value": "ec2",
                },
                {
                  "Key": "mdaa_domain",
                  "Value": "test-domain",
                },
                {
                  "Key": "mdaa_env",
                  "Value": "test-env",
                },
                {
                  "Key": "mdaa_module_name",
                  "Value": "test-ec2-main",
                },
                {
                  "Key": "mdaa_org",
                  "Value": "test-org",
                },
                {
                  "Key": "Name",
                  "Value": "test-org-test-env-test-domain-test-ec2-main/instances/instance-1instance/launch-template",
                },
              ],
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "mdaa_cdk_app",
                  "Value": "ec2",
                },
                {
                  "Key": "mdaa_domain",
                  "Value": "test-domain",
                },
                {
                  "Key": "mdaa_env",
                  "Value": "test-env",
                },
                {
                  "Key": "mdaa_module_name",
                  "Value": "test-ec2-main",
                },
                {
                  "Key": "mdaa_org",
                  "Value": "test-org",
                },
                {
                  "Key": "Name",
                  "Value": "test-org-test-env-test-domain-test-ec2-main/instances/instance-1instance/launch-template",
                },
              ],
            },
          ],
        },
        "LaunchTemplateName": "test-org-test-env-test-domain-test-ec2-main-instance-1",
        "TagSpecifications": [
          {
            "ResourceType": "launch-template",
            "Tags": [
              {
                "Key": "mdaa_cdk_app",
                "Value": "ec2",
              },
              {
                "Key": "mdaa_domain",
                "Value": "test-domain",
              },
              {
                "Key": "mdaa_env",
                "Value": "test-env",
              },
              {
                "Key": "mdaa_module_name",
                "Value": "test-ec2-main",
              },
              {
                "Key": "mdaa_org",
                "Value": "test-org",
              },
              {
                "Key": "Name",
                "Value": "test-org-test-env-test-domain-test-ec2-main/instances/instance-1instance/launch-template",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "instanceId": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "kmsKeyArn": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "Custom::Ec2VolumeEncryptionCheck",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": 1,
          "Timeout": "PT25M",
        },
      },
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "REPLACED-CFN-LOGICAL-ID",
      ],
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "Preinstall": {
            "commands": {
              "01testCommand": {
                "command": "echo "this is a command"",
              },
              "02anotherTestCommand": {
                "command": "echo "this TOO is a command"",
                "cwd": "/some/dir/",
                "test": "echo "this is test command"",
                "waitAfterCompletion": "forever",
              },
            },
            "files": {
              "testfile.txt": {
                "content": "This is a test text file.
It is in txt format.",
                "encoding": "plain",
              },
            },
            "packages": {
              "msi": {
                "000": "https://awscli.amazonaws.com/somepackagefromconfig.msi",
              },
            },
            "services": {
              "windows": {
                "cfn-hup": {
                  "commands": [
                    "02anotherTestCommand",
                  ],
                  "enabled": true,
                  "ensureRunning": true,
                  "files": [
                    "testfile.txt",
                  ],
                },
              },
            },
          },
          "awscli": {
            "packages": {
              "msi": {
                "000": "https://awscli.amazonaws.com//AWSCLI64.msi",
                "001": "https://awscli.amazonaws.com//thisisanotherpackage.msi",
              },
            },
          },
          "configSets": {
            "confgiset2": [
              "Preinstall",
              "awscli",
            ],
            "default": [
              "awscli",
              "Preinstall",
            ],
          },
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-EC29",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
            },
            {
              "id": "NIST.800.53.R5-EC2IMDSv2Enabled",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
            },
            {
              "id": "HIPAA.Security-EC2IMDSv2Enabled",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
            },
            {
              "id": "PCI.DSS.321-EC2IMDSv2Enabled",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/instance.ts:LINE:COL] Remediated through property override.",
            },
          ],
        },
      },
      "Properties": {
        "AvailabilityZone": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region",
              },
              "b",
            ],
          ],
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": false,
              "Encrypted": true,
              "KmsKeyId": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/test-key",
                  ],
                ],
              },
              "VolumeSize": 32,
              "VolumeType": "gp3",
            },
          },
          {
            "DeviceName": "/dev/sdb1",
            "Ebs": {
              "DeleteOnTermination": false,
              "Encrypted": true,
              "KmsKeyId": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/test-key",
                  ],
                ],
              },
              "VolumeSize": 16,
              "VolumeType": "gp2",
            },
          },
        ],
        "DisableApiTermination": true,
        "IamInstanceProfile": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "ImageId": "ami-windows",
        "InstanceType": "t3.medium",
        "KeyName": "rsa-key",
        "LaunchTemplate": {
          "LaunchTemplateName": "test-org-test-env-test-domain-test-ec2-main-instance-2",
          "Version": {
            "Fn::GetAtt": [
              "REPLACED-CFN-LOGICAL-ID",
              "LatestVersionNumber",
            ],
          },
        },
        "Monitoring": true,
        "PropagateTagsToVolumeOnCreation": true,
        "SecurityGroupIds": [
          "sg-123412412",
        ],
        "SubnetId": "subnet-testsubnet",
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "ec2",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-ec2-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
          {
            "Key": "Name",
            "Value": "test-org-test-env-test-domain-test-ec2-main-instance-2",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<powershell>
echo "this is userdata script, add powershell commands here"
Get-Service AmazonSSMAgent
# fingerprint: b314282176e5afbf
cfn-init.exe -v --region ",
                {
                  "Ref": "AWS::Region",
                },
                " --stack ",
                {
                  "Ref": "AWS::StackName",
                },
                " --resource instancesinstance2instanceB7AD1249 --role ",
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "/",
                        {
                          "Fn::Select": [
                            5,
                            {
                              "Fn::Split": [
                                ":",
                                {
                                  "Fn::GetAtt": [
                                    "RoleResinstanceRole",
                                    "arn",
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
                " -c confgiset2
cfn-signal.exe -e $LASTEXITCODE --region ",
                {
                  "Ref": "AWS::Region",
                },
                " --stack ",
                {
                  "Ref": "AWS::StackName",
                },
                " --resource instancesinstance2instanceB7AD1249 --role ",
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "/",
                        {
                          "Fn::Select": [
                            5,
                            {
                              "Fn::Split": [
                                ":",
                                {
                                  "Fn::GetAtt": [
                                    "RoleResinstanceRole",
                                    "arn",
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
                "
type C:\\cfn\\log\\cfn-init.log</powershell>",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResinstanceRole",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-ec2-main/instance/id-test-org-test-env-test-domain-test-ec2-main-instance-2",
        "Tags": {
          "Name": "test-org-test-env-test-domain-test-ec2-main-instance-2",
          "mdaa_cdk_app": "ec2",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-ec2-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "LaunchTemplateData": {
          "BlockDeviceMappings": [
            {
              "DeviceName": "/dev/sda1",
              "Ebs": {
                "DeleteOnTermination": false,
                "Encrypted": true,
                "KmsKeyId": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":kms:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":key/test-key",
                    ],
                  ],
                },
                "VolumeSize": 32,
                "VolumeType": "gp3",
              },
            },
            {
              "DeviceName": "/dev/sdb1",
              "Ebs": {
                "DeleteOnTermination": false,
                "Encrypted": true,
                "KmsKeyId": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":kms:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":key/test-key",
                    ],
                  ],
                },
                "VolumeSize": 16,
                "VolumeType": "gp2",
              },
            },
          ],
          "MetadataOptions": {
            "HttpTokens": "required",
          },
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "mdaa_cdk_app",
                  "Value": "ec2",
                },
                {
                  "Key": "mdaa_domain",
                  "Value": "test-domain",
                },
                {
                  "Key": "mdaa_env",
                  "Value": "test-env",
                },
                {
                  "Key": "mdaa_module_name",
                  "Value": "test-ec2-main",
                },
                {
                  "Key": "mdaa_org",
                  "Value": "test-org",
                },
                {
                  "Key": "Name",
                  "Value": "test-org-test-env-test-domain-test-ec2-main/instances/instance-2instance/launch-template",
                },
              ],
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "mdaa_cdk_app",
                  "Value": "ec2",
                },
                {
                  "Key": "mdaa_domain",
                  "Value": "test-domain",
                },
                {
                  "Key": "mdaa_env",
                  "Value": "test-env",
                },
                {
                  "Key": "mdaa_module_name",
                  "Value": "test-ec2-main",
                },
                {
                  "Key": "mdaa_org",
                  "Value": "test-org",
                },
                {
                  "Key": "Name",
                  "Value": "test-org-test-env-test-domain-test-ec2-main/instances/instance-2instance/launch-template",
                },
              ],
            },
          ],
        },
        "LaunchTemplateName": "test-org-test-env-test-domain-test-ec2-main-instance-2",
        "TagSpecifications": [
          {
            "ResourceType": "launch-template",
            "Tags": [
              {
                "Key": "mdaa_cdk_app",
                "Value": "ec2",
              },
              {
                "Key": "mdaa_domain",
                "Value": "test-domain",
              },
              {
                "Key": "mdaa_env",
                "Value": "test-env",
              },
              {
                "Key": "mdaa_module_name",
                "Value": "test-ec2-main",
              },
              {
                "Key": "mdaa_org",
                "Value": "test-org",
              },
              {
                "Key": "Name",
                "Value": "test-org-test-env-test-domain-test-ec2-main/instances/instance-2instance/launch-template",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "instanceId": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
        "kmsKeyArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":kms:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":key/test-key",
            ],
          ],
        },
      },
      "Type": "Custom::Ec2VolumeEncryptionCheck",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "keypairName": "test-org-test-env-test-domain-test-ec2-main-test-key-pair2",
      },
      "Type": "Custom::SecretKeyPair",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SMG4",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
            },
            {
              "id": "NIST.800.53.R5-SecretsManagerRotationEnabled",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
            },
            {
              "id": "HIPAA.Security-SecretsManagerRotationEnabled",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
            },
            {
              "id": "PCI.DSS.321-SecretsManagerRotationEnabled",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
            },
          ],
        },
      },
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Private key material for EC2 key pair test-org-test-env-test-domain-test-ec2-main-test-key-pair2/",
              {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "key_pair_id",
                ],
              },
            ],
          ],
        },
        "KmsKeyId": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":kms:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":key/test-key",
            ],
          ],
        },
        "Name": "test-org-test-env-test-domain-test-ec2-main-test-key-pair2",
        "SecretString": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "key_material",
          ],
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "ec2",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-ec2-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "ResourcePolicy": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetSecretValue",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "RoleResadmin0",
                      "arn",
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/some-admin-role",
                      ],
                    ],
                  },
                  {
                    "Fn::GetAtt": [
                      "RoleResadmin2",
                      "arn",
                    ],
                  },
                ],
              },
              "Resource": {
                "Ref": "REPLACED-CFN-LOGICAL-ID",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "SecretId": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SecretsManager::ResourcePolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "keypairName": "test-org-test-env-test-domain-test-ec2-main-test-key-pair",
      },
      "Type": "Custom::SecretKeyPair",
      "UpdateReplacePolicy": "Delete",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SMG4",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
            },
            {
              "id": "NIST.800.53.R5-SecretsManagerRotationEnabled",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
            },
            {
              "id": "HIPAA.Security-SecretsManagerRotationEnabled",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
            },
            {
              "id": "PCI.DSS.321-SecretsManagerRotationEnabled",
              "reason": "[MDAA:@aws-mdaa/ec2-constructs/lib/secret_keypair.ts:LINE:COL] Secret is for EC2 Key Pair, which does not support rotation.",
            },
          ],
        },
      },
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Private key material for EC2 key pair test-org-test-env-test-domain-test-ec2-main-test-key-pair/",
              {
                "Fn::GetAtt": [
                  "REPLACED-CFN-LOGICAL-ID",
                  "key_pair_id",
                ],
              },
            ],
          ],
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
        "Name": "test-org-test-env-test-domain-test-ec2-main-test-key-pair",
        "SecretString": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "key_material",
          ],
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "ec2",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-ec2-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "ResourcePolicy": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetSecretValue",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "RoleResadmin0",
                      "arn",
                    ],
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/some-admin-role",
                      ],
                    ],
                  },
                  {
                    "Fn::GetAtt": [
                      "RoleResadmin2",
                      "arn",
                    ],
                  },
                ],
              },
              "Resource": {
                "Ref": "REPLACED-CFN-LOGICAL-ID",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "SecretId": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SecretsManager::ResourcePolicy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "Enabled": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResadmin0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResadmin1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    "some-role-id:*",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "test-org-test-env-test-domain-test-ec2-main-usage-stmt",
            },
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ],
              "Condition": {
                "StringLike": {
                  "aws:userId": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResadmin0",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "RoleResadmin1",
                              "id",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    "some-role-id:*",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "test-org-test-env-test-domain-test-ec2-main-usage-stmt",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "secretsmanager.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:DescribeKey",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "secretsmanager.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:CreateGrant",
                "kms:DescribeKey",
                "kms:ListAliases",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/instance-role",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "ec2",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-ec2-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "AliasName": "alias/test-org-test-env-test-domain-test-ec2-main",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-ec2-main/kms/arn",
        "Tags": {
          "mdaa_cdk_app": "ec2",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-ec2-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-ec2-main/kms/id",
        "Tags": {
          "mdaa_cdk_app": "ec2",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-ec2-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Ref": "REPLACED-CFN-LOGICAL-ID",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding cfn init adds inline policy to instance role to describe stack",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding cfn init adds inline policy to instance role to describe stack",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding cfn init adds inline policy to instance role to describe stack",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding files section for cfn init, adds permission for cdk bootstrap bucket with wildcard to store the file",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "cloudformation:DescribeStackResource",
                "cloudformation:SignalResource",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "AWS::StackId",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          "instance-role",
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "NIST.800.53.R5-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding cfn init adds inline policy to instance role to describe stack",
            },
            {
              "id": "HIPAA.Security-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding cfn init adds inline policy to instance role to describe stack",
            },
            {
              "id": "PCI.DSS.321-IAMNoInlinePolicy",
              "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding cfn init adds inline policy to instance role to describe stack",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "[MDAA:@aws-mdaa/utility/ec2-l3-construct/lib/ec2-l3-construct.ts:LINE:COL] Adding files section for cfn init, adds permission for cdk bootstrap bucket with wildcard to store the file",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "cloudformation:DescribeStackResource",
                "cloudformation:SignalResource",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "AWS::StackId",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "REPLACED-CFN-LOGICAL-ID",
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "RoleResinstanceRole",
                              "arn",
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "GroupDescription": "test-org-test-env-test-domain-test-ec2-main/instances/sg1",
        "GroupName": "test-org-test-env-test-domain-test-ec2-main-sg1",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "Tags": [
          {
            "Key": "mdaa_cdk_app",
            "Value": "ec2",
          },
          {
            "Key": "mdaa_domain",
            "Value": "test-domain",
          },
          {
            "Key": "mdaa_env",
            "Value": "test-env",
          },
          {
            "Key": "mdaa_module_name",
            "Value": "test-ec2-main",
          },
          {
            "Key": "mdaa_org",
            "Value": "test-org",
          },
        ],
        "VpcId": "vpc-testvpc",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "CidrIp": "10.0.0.0/28",
        "Description": "from 10.0.0.0/28:tcp PORT 443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Name": "/test-org/test-domain/test-ec2-main/security-group/sg1/id",
        "Tags": {
          "mdaa_cdk_app": "ec2",
          "mdaa_domain": "test-domain",
          "mdaa_env": "test-env",
          "mdaa_module_name": "test-ec2-main",
          "mdaa_org": "test-org",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "CidrIp": "10.0.0.0/28",
        "Description": "to 10.0.0.0/28:tcp PORT 443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "to ",
              {
                "Ref": "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter",
              },
              ":tcp PORT 5472",
            ],
          ],
        },
        "DestinationSecurityGroupId": {
          "Ref": "SsmParameterValuemlsmsgidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "FromPort": 5472,
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 5472,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "prefix list for com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".dynamodb",
            ],
          ],
        },
        "DestinationPrefixListId": "pl-4ea54027",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "REPLACED-CFN-LOGICAL-ID": {
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "prefix list for com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "DestinationPrefixListId": "pl-7da54014",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "REPLACED-CFN-LOGICAL-ID",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
